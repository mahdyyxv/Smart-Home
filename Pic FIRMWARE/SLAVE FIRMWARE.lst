;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 10/10/2021 3:13:59 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF006EFD4  	GOTO        3496
_interrupt:
;SLAVE FIRMWARE.c,162 :: 		void interrupt(){
0x0008	0xF016C000  	MOVFF       R0, 22
0x000C	0xF015C001  	MOVFF       R1, 21
;SLAVE FIRMWARE.c,163 :: 		recv();
0x0010	0xF019CFE1  	MOVFF       FSR1L, 25
0x0014	0xF01ACFE2  	MOVFF       FSR1H, 26
0x0018	0xF017CFE9  	MOVFF       FSR0L, 23
0x001C	0xF018CFEA  	MOVFF       FSR0H, 24
0x0020	0xF004ECC0  	CALL        _recv, 0
;SLAVE FIRMWARE.c,164 :: 		if(T0IF_bit==1){
0x0024	0xA4F2      	BTFSS       T0IF_bit, 2 
0x0026	0xD003      	BRA         L_interrupt31
;SLAVE FIRMWARE.c,165 :: 		TMR0L = 100;
0x0028	0x0E64      	MOVLW       100
0x002A	0x6ED6      	MOVWF       TMR0L 
;SLAVE FIRMWARE.c,166 :: 		T0IF_BIT = 0;
0x002C	0x94F2      	BCF         T0IF_bit, 2 
;SLAVE FIRMWARE.c,167 :: 		}
L_interrupt31:
;SLAVE FIRMWARE.c,168 :: 		if((button_R1 == 0) || (BUFFER[10] == 'Q')){state.f5 =~state.f5;}
0x002E	0xA880      	BTFSS       PORTA, 4 
0x0030	0xD005      	BRA         L__interrupt156
0x0032	0x0100      	MOVLB       0
0x0034	0x51FD      	MOVF        _BUFFER+10, 0, 1
0x0036	0x0A51      	XORLW       81
0x0038	0xE001      	BZ          L__interrupt156
0x003A	0xD001      	BRA         L_interrupt34
L__interrupt156:
0x003C	0x7A58      	BTG         _state, 5 
L_interrupt34:
;SLAVE FIRMWARE.c,169 :: 		if((button_R2 == 0) || (BUFFER[10] == 'W')){state.f6 =~state.f6;}
0x003E	0xAA80      	BTFSS       PORTA, 5 
0x0040	0xD005      	BRA         L__interrupt155
0x0042	0x0100      	MOVLB       0
0x0044	0x51FD      	MOVF        _BUFFER+10, 0, 1
0x0046	0x0A57      	XORLW       87
0x0048	0xE001      	BZ          L__interrupt155
0x004A	0xD001      	BRA         L_interrupt37
L__interrupt155:
0x004C	0x7C58      	BTG         _state, 6 
L_interrupt37:
;SLAVE FIRMWARE.c,172 :: 		}
L__interrupt182:
0x004E	0xF000C016  	MOVFF       22, R0
0x0052	0xF001C015  	MOVFF       21, R1
0x0056	0xFFE9C017  	MOVFF       23, FSR0L
0x005A	0xFFEAC018  	MOVFF       24, FSR0H
0x005E	0xFFE1C019  	MOVFF       25, FSR1L
0x0062	0xFFE2C01A  	MOVFF       26, FSR1H
0x0066	0x0011      	RETFIE      1
; end of _interrupt
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x0068	0x0000      	NOP
0x006A	0x0000      	NOP
0x006C	0x0000      	NOP
0x006E	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
0x0070	0x0012      	RETURN      0
; end of _Delay_1us
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x0072	0x0E1D      	MOVLW       29
0x0074	0x6E0C      	MOVWF       R12, 0
0x0076	0x0E91      	MOVLW       145
0x0078	0x6E0D      	MOVWF       R13, 0
L_Delay_5500us5:
0x007A	0x2E0D      	DECFSZ      R13, 1, 0
0x007C	0xD7FE      	BRA         L_Delay_5500us5
0x007E	0x2E0C      	DECFSZ      R12, 1, 0
0x0080	0xD7FC      	BRA         L_Delay_5500us5
;__Lib_Delays.c,33 :: 		}
0x0082	0x0012      	RETURN      0
; end of _Delay_5500us
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x0084	0x0E42      	MOVLW       66
0x0086	0x6E0D      	MOVWF       R13, 0
L_Delay_50us2:
0x0088	0x2E0D      	DECFSZ      R13, 1, 0
0x008A	0xD7FE      	BRA         L_Delay_50us2
0x008C	0x0000      	NOP
;__Lib_Delays.c,21 :: 		}
0x008E	0x0012      	RETURN      0
; end of _Delay_50us
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x0090	0x0101      	MOVLB       1
0x0092	0xBF18      	BTFSC       FARG_Lcd_Cmd_out_char, 7, 1
0x0094	0xD002      	BRA         L__Lcd_Cmd21
0x0096	0x9481      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x0098	0xD001      	BRA         L__Lcd_Cmd22
L__Lcd_Cmd21:
0x009A	0x8481      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd22:
;__Lib_Lcd.c,21 :: 		
0x009C	0xBD18      	BTFSC       FARG_Lcd_Cmd_out_char, 6, 1
0x009E	0xD002      	BRA         L__Lcd_Cmd23
0x00A0	0x9681      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x00A2	0xD001      	BRA         L__Lcd_Cmd24
L__Lcd_Cmd23:
0x00A4	0x8681      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd24:
;__Lib_Lcd.c,22 :: 		
0x00A6	0xBB18      	BTFSC       FARG_Lcd_Cmd_out_char, 5, 1
0x00A8	0xD002      	BRA         L__Lcd_Cmd25
0x00AA	0x9881      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x00AC	0xD001      	BRA         L__Lcd_Cmd26
L__Lcd_Cmd25:
0x00AE	0x8881      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd26:
;__Lib_Lcd.c,23 :: 		
0x00B0	0xB918      	BTFSC       FARG_Lcd_Cmd_out_char, 4, 1
0x00B2	0xD002      	BRA         L__Lcd_Cmd27
0x00B4	0x9A81      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x00B6	0xD001      	BRA         L__Lcd_Cmd28
L__Lcd_Cmd27:
0x00B8	0x8A81      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd28:
;__Lib_Lcd.c,25 :: 		
0x00BA	0x0100      	MOVLB       0
0x00BC	0xB1D4      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
0x00BE	0xD002      	BRA         L__Lcd_Cmd29
0x00C0	0x8E81      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x00C2	0xD001      	BRA         L__Lcd_Cmd30
L__Lcd_Cmd29:
0x00C4	0x9E81      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd30:
;__Lib_Lcd.c,28 :: 		
0x00C6	0x8C81      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,29 :: 		
0x00C8	0xDFCF      	RCALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x00CA	0x9C81      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,33 :: 		
0x00CC	0x0101      	MOVLB       1
0x00CE	0xB718      	BTFSC       FARG_Lcd_Cmd_out_char, 3, 1
0x00D0	0xD002      	BRA         L__Lcd_Cmd31
0x00D2	0x9481      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x00D4	0xD001      	BRA         L__Lcd_Cmd32
L__Lcd_Cmd31:
0x00D6	0x8481      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd32:
;__Lib_Lcd.c,34 :: 		
0x00D8	0xB518      	BTFSC       FARG_Lcd_Cmd_out_char, 2, 1
0x00DA	0xD002      	BRA         L__Lcd_Cmd33
0x00DC	0x9681      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x00DE	0xD001      	BRA         L__Lcd_Cmd34
L__Lcd_Cmd33:
0x00E0	0x8681      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd34:
;__Lib_Lcd.c,35 :: 		
0x00E2	0xB318      	BTFSC       FARG_Lcd_Cmd_out_char, 1, 1
0x00E4	0xD002      	BRA         L__Lcd_Cmd35
0x00E6	0x9881      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x00E8	0xD001      	BRA         L__Lcd_Cmd36
L__Lcd_Cmd35:
0x00EA	0x8881      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd36:
;__Lib_Lcd.c,36 :: 		
0x00EC	0xB118      	BTFSC       FARG_Lcd_Cmd_out_char, 0, 1
0x00EE	0xD002      	BRA         L__Lcd_Cmd37
0x00F0	0x9A81      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x00F2	0xD001      	BRA         L__Lcd_Cmd38
L__Lcd_Cmd37:
0x00F4	0x8A81      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd38:
;__Lib_Lcd.c,38 :: 		
0x00F6	0x0100      	MOVLB       0
0x00F8	0xB1D4      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
0x00FA	0xD002      	BRA         L__Lcd_Cmd39
0x00FC	0x8E81      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x00FE	0xD001      	BRA         L__Lcd_Cmd40
L__Lcd_Cmd39:
0x0100	0x9E81      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd40:
;__Lib_Lcd.c,40 :: 		
0x0102	0x8C81      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,41 :: 		
0x0104	0xDFB1      	RCALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x0106	0x9C81      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,44 :: 		
0x0108	0xA1D4      	BTFSS       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
0x010A	0xD002      	BRA         L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x010C	0xDFB2      	RCALL       _Delay_5500us
0x010E	0xD001      	BRA         L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x0110	0xDFB9      	RCALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
L_end_Lcd_Cmd:
0x0112	0x0012      	RETURN      0
; end of _Lcd_Cmd
_FIXSIGN32:
;__Lib_MathDouble.c,117 :: 		
;__Lib_MathDouble.c,121 :: 		
0x0114	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,122 :: 		
0x0116	0x9E02      	BCF         R2, 7, 0
;__Lib_MathDouble.c,123 :: 		
0x0118	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,125 :: 		
L_end_FIXSIGN32:
0x011A	0x0012      	RETURN      0
; end of _FIXSIGN32
_RES032:
;__Lib_MathDouble.c,128 :: 		
;__Lib_MathDouble.c,134 :: 		
0x011C	0x6A02      	CLRF        R2, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,135 :: 		
0x011E	0x6A01      	CLRF        R1, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,136 :: 		
0x0120	0x6A00      	CLRF        R0, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,137 :: 		
0x0122	0x6A08      	CLRF        R8, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,138 :: 		
0x0124	0x6A03      	CLRF        R3, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,139 :: 		
0x0126	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,141 :: 		
L_end_RES032:
0x0128	0x0012      	RETURN      0
; end of _RES032
_SETFUN32:
;__Lib_MathDouble.c,144 :: 		
;__Lib_MathDouble.c,152 :: 		
0x012A	0x840B      	BSF         R11, 2, 0
;__Lib_MathDouble.c,153 :: 		
0x012C	0xAE0B      	BTFSS       R11, 7, 0
;__Lib_MathDouble.c,154 :: 		
0x012E	0xF000EFA0  	GOTO        SETFUN32EEE
;__Lib_MathDouble.c,156 :: 		
0x0132	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,157 :: 		
0x0134	0x6E03      	MOVWF       R3, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,158 :: 		
0x0136	0x6A02      	CLRF        R2, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,159 :: 		
0x0138	0x6A01      	CLRF        R1, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,160 :: 		
0x013A	0x6A00      	CLRF        R0, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,161 :: 		
0x013C	0x360A      	RLCF        R10, 1, 0
;__Lib_MathDouble.c,162 :: 		
0x013E	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,163 :: 		
SETFUN32EEE:
;__Lib_MathDouble.c,164 :: 		
0x0140	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,166 :: 		
L_end_SETFUN32:
0x0142	0x0012      	RETURN      0
; end of _SETFUN32
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x0144	0x0100      	MOVLB       0
0x0146	0x91D4      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,53 :: 		
0x0148	0xF118C117  	MOVFF       FARG_Lcd_Chr_CP_out_char, FARG_Lcd_Cmd_out_char
0x014C	0xDFA1      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,54 :: 		
0x014E	0x81D4      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,55 :: 		
L_end_Lcd_Chr_CP:
0x0150	0x0012      	RETURN      0
; end of _Lcd_Chr_CP
_NRM3232:
;__Lib_MathDouble.c,455 :: 		
;__Lib_MathDouble.c,463 :: 		
0x0152	0x6A0C      	CLRF        R12, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,464 :: 		
0x0154	0x6A0E      	CLRF        R14, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,465 :: 		
0x0156	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,466 :: 		
0x0158	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,467 :: 		
0x015A	0xF000EFC2  	GOTO        NORM3232
;__Lib_MathDouble.c,468 :: 		
0x015E	0xF002C001  	MOVFF       R1, R2
;__Lib_MathDouble.c,469 :: 		
0x0162	0xF001C000  	MOVFF       R0, R1
;__Lib_MathDouble.c,470 :: 		
0x0166	0x6A00      	CLRF        R0, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,471 :: 		
0x0168	0x860E      	BSF         R14, 3, 0
;__Lib_MathDouble.c,473 :: 		
0x016A	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,474 :: 		
0x016C	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,475 :: 		
0x016E	0xF000EFC2  	GOTO        NORM3232
;__Lib_MathDouble.c,476 :: 		
0x0172	0xF002C001  	MOVFF       R1, R2
;__Lib_MathDouble.c,477 :: 		
0x0176	0x6A01      	CLRF        R1, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,478 :: 		
0x0178	0x960E      	BCF         R14, 3, 0
;__Lib_MathDouble.c,479 :: 		
0x017A	0x880E      	BSF         R14, 4, 0
;__Lib_MathDouble.c,481 :: 		
0x017C	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,482 :: 		
0x017E	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,483 :: 		
0x0180	0xF000EFD4  	GOTO        JPNRES032
;__Lib_MathDouble.c,484 :: 		
NORM3232:
;__Lib_MathDouble.c,485 :: 		
0x0184	0x500E      	MOVF        R14, 0, 0
;__Lib_MathDouble.c,486 :: 		
0x0186	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,487 :: 		
0x0188	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,488 :: 		
0x018A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,489 :: 		
0x018C	0xF000EFD9  	GOTO        JPNSETFUN32
;__Lib_MathDouble.c,490 :: 		
0x0190	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,491 :: 		
NORM3232A:
;__Lib_MathDouble.c,492 :: 		
0x0192	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,493 :: 		
0x0194	0xF000EFDE  	GOTO        JMPNFIXSIGN32
;__Lib_MathDouble.c,494 :: 		
0x0198	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,495 :: 		
0x019A	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,496 :: 		
0x019C	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,497 :: 		
0x019E	0x2E03      	DECFSZ      R3, 1, 0
;__Lib_MathDouble.c,498 :: 		
0x01A0	0xF000EFC9  	GOTO        NORM3232A
;__Lib_MathDouble.c,499 :: 		
0x01A4	0xF000EFD9  	GOTO        JPNSETFUN32
;__Lib_MathDouble.c,500 :: 		
JPNRES032:
;__Lib_MathDouble.c,501 :: 		
0x01A8	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,502 :: 		
0x01AA	0x6E0C      	MOVWF       R12, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,504 :: 		
0x01AC	0xDFB7      	RCALL       _RES032
;__Lib_MathDouble.c,506 :: 		
0x01AE	0xF000EFE1  	GOTO        NORM32EEE
;__Lib_MathDouble.c,507 :: 		
JPNSETFUN32:
;__Lib_MathDouble.c,508 :: 		
0x01B2	0x0E02      	MOVLW       2
;__Lib_MathDouble.c,509 :: 		
0x01B4	0x6E0C      	MOVWF       R12, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,511 :: 		
0x01B6	0xDFB9      	RCALL       _SETFUN32
;__Lib_MathDouble.c,513 :: 		
0x01B8	0xF000EFE1  	GOTO        NORM32EEE
;__Lib_MathDouble.c,514 :: 		
JMPNFIXSIGN32:
;__Lib_MathDouble.c,515 :: 		
0x01BC	0x0E04      	MOVLW       4
;__Lib_MathDouble.c,516 :: 		
0x01BE	0x6E0C      	MOVWF       R12, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,518 :: 		
0x01C0	0xDFA9      	RCALL       _FIXSIGN32
;__Lib_MathDouble.c,520 :: 		
NORM32EEE:
;__Lib_MathDouble.c,527 :: 		
L_end_NRM3232:
0x01C2	0x0012      	RETURN      0
; end of _NRM3232
_SETFOV32:
;__Lib_MathDouble.c,82 :: 		
;__Lib_MathDouble.c,90 :: 		
0x01C4	0x820B      	BSF         R11, 1, 0
;__Lib_MathDouble.c,91 :: 		
0x01C6	0xAE0B      	BTFSS       R11, 7, 0
;__Lib_MathDouble.c,92 :: 		
0x01C8	0xF000EFEC  	GOTO        SETFOV32EEE
;__Lib_MathDouble.c,94 :: 		
0x01CC	0x6803      	SETF        R3, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,95 :: 		
0x01CE	0x6802      	SETF        R2, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,96 :: 		
0x01D0	0x6801      	SETF        R1, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,97 :: 		
0x01D2	0x6800      	SETF        R0, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,98 :: 		
0x01D4	0x360A      	RLCF        R10, 1, 0
;__Lib_MathDouble.c,99 :: 		
0x01D6	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,100 :: 		
SETFOV32EEE:
;__Lib_MathDouble.c,101 :: 		
0x01D8	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,103 :: 		
L_end_SETFOV32:
0x01DA	0x0012      	RETURN      0
; end of _SETFOV32
_UART1_Write:
;__Lib_UART_c67.c,58 :: 		
;__Lib_UART_c67.c,59 :: 		
L_UART1_Write3:
0x01DC	0xB2AC      	BTFSC       TXSTA, 1 
0x01DE	0xD002      	BRA         L_UART1_Write4
;__Lib_UART_c67.c,60 :: 		
0x01E0	0x0000      	NOP
0x01E2	0xD7FC      	BRA         L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,61 :: 		
0x01E4	0xFFADC112  	MOVFF       FARG_UART1_Write_data_, TXREG
;__Lib_UART_c67.c,62 :: 		
L_end_UART1_Write:
0x01E8	0x0012      	RETURN      0
; end of _UART1_Write
_SETFDZ32:
;__Lib_MathDouble.c,106 :: 		
;__Lib_MathDouble.c,110 :: 		
0x01EA	0x6A0B      	CLRF        R11, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,111 :: 		
0x01EC	0x860B      	BSF         R11, 3, 0
;__Lib_MathDouble.c,112 :: 		
0x01EE	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,114 :: 		
L_end_SETFDZ32:
0x01F0	0x0012      	RETURN      0
; end of _SETFDZ32
_Lcd_Out:
;__Lib_Lcd.c,184 :: 		
;__Lib_Lcd.c,187 :: 		
0x01F2	0xD010      	BRA         L_Lcd_Out11
;__Lib_Lcd.c,188 :: 		
L_Lcd_Out13:
0x01F4	0x0E80      	MOVLW       128
0x01F6	0x0101      	MOVLB       1
0x01F8	0x6F12      	MOVWF       FARG_Lcd_Out_row, 1
0x01FA	0xD01A      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,189 :: 		
L_Lcd_Out14:
0x01FC	0x0EC0      	MOVLW       192
0x01FE	0x6F12      	MOVWF       FARG_Lcd_Out_row, 1
0x0200	0xD017      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,190 :: 		
L_Lcd_Out15:
0x0202	0x0E94      	MOVLW       148
0x0204	0x6F12      	MOVWF       FARG_Lcd_Out_row, 1
0x0206	0xD014      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out16:
0x0208	0x0ED4      	MOVLW       212
0x020A	0x6F12      	MOVWF       FARG_Lcd_Out_row, 1
0x020C	0xD011      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out17:
0x020E	0x0E80      	MOVLW       128
0x0210	0x6F12      	MOVWF       FARG_Lcd_Out_row, 1
;__Lib_Lcd.c,193 :: 		
0x0212	0xD00E      	BRA         L_Lcd_Out12
L_Lcd_Out11:
0x0214	0x0101      	MOVLB       1
0x0216	0x5112      	MOVF        FARG_Lcd_Out_row, 0, 1
0x0218	0x0A01      	XORLW       1
0x021A	0xE0EC      	BZ          L_Lcd_Out13
0x021C	0x5112      	MOVF        FARG_Lcd_Out_row, 0, 1
0x021E	0x0A02      	XORLW       2
0x0220	0xE0ED      	BZ          L_Lcd_Out14
0x0222	0x5112      	MOVF        FARG_Lcd_Out_row, 0, 1
0x0224	0x0A03      	XORLW       3
0x0226	0xE0ED      	BZ          L_Lcd_Out15
0x0228	0x5112      	MOVF        FARG_Lcd_Out_row, 0, 1
0x022A	0x0A04      	XORLW       4
0x022C	0xE0ED      	BZ          L_Lcd_Out16
0x022E	0xD7EF      	BRA         L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,194 :: 		
0x0230	0x0513      	DECF        FARG_Lcd_Out_column, 0, 1
0x0232	0x6E00      	MOVWF       R0 
0x0234	0x5112      	MOVF        FARG_Lcd_Out_row, 0, 1
0x0236	0x2600      	ADDWF       R0, 1 
0x0238	0xF112C000  	MOVFF       R0, FARG_Lcd_Out_row
;__Lib_Lcd.c,196 :: 		
0x023C	0xF118C000  	MOVFF       R0, FARG_Lcd_Cmd_out_char
0x0240	0xDF27      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,197 :: 		
0x0242	0x91D4      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,198 :: 		
0x0244	0x0101      	MOVLB       1
0x0246	0x6B16      	CLRF        Lcd_Out_i_L0, 1
;__Lib_Lcd.c,199 :: 		
L_Lcd_Out18:
0x0248	0x5116      	MOVF        Lcd_Out_i_L0, 0, 1
0x024A	0x2514      	ADDWF       FARG_Lcd_Out_text, 0, 1
0x024C	0x6EE9      	MOVWF       FSR0L 
0x024E	0x0E00      	MOVLW       0
0x0250	0x2115      	ADDWFC      FARG_Lcd_Out_text+1, 0, 1
0x0252	0x6EEA      	MOVWF       FSR0H 
0x0254	0x52EE      	MOVF        POSTINC0, 1 
0x0256	0xE00C      	BZ          L_Lcd_Out19
;__Lib_Lcd.c,200 :: 		
0x0258	0x5116      	MOVF        Lcd_Out_i_L0, 0, 1
0x025A	0x2514      	ADDWF       FARG_Lcd_Out_text, 0, 1
0x025C	0x6EE9      	MOVWF       FSR0L 
0x025E	0x0E00      	MOVLW       0
0x0260	0x2115      	ADDWFC      FARG_Lcd_Out_text+1, 0, 1
0x0262	0x6EEA      	MOVWF       FSR0H 
0x0264	0xF117CFEE  	MOVFF       POSTINC0, FARG_Lcd_Chr_CP_out_char
0x0268	0xDF6D      	RCALL       _Lcd_Chr_CP
0x026A	0x0101      	MOVLB       1
0x026C	0x2B16      	INCF        Lcd_Out_i_L0, 1, 1
0x026E	0xD7EC      	BRA         L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,201 :: 		
0x0270	0x0100      	MOVLB       0
0x0272	0x81D4      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,202 :: 		
L_end_Lcd_Out:
0x0274	0x0012      	RETURN      0
; end of _Lcd_Out
_UART1_Read:
;__Lib_UART_c67.c,39 :: 		
;__Lib_UART_c67.c,42 :: 		
0x0276	0xF001CFAE  	MOVFF       RCREG, R1
;__Lib_UART_c67.c,43 :: 		
0x027A	0xA2AB      	BTFSS       RCSTA, 1 
0x027C	0xD002      	BRA         L_UART1_Read2
;__Lib_UART_c67.c,44 :: 		
0x027E	0x98AB      	BCF         RCSTA, 4 
;__Lib_UART_c67.c,45 :: 		
0x0280	0x88AB      	BSF         RCSTA, 4 
;__Lib_UART_c67.c,46 :: 		
L_UART1_Read2:
;__Lib_UART_c67.c,47 :: 		
0x0282	0xF000C001  	MOVFF       R1, R0
;__Lib_UART_c67.c,48 :: 		
L_end_UART1_Read:
0x0286	0x0012      	RETURN      0
; end of _UART1_Read
_UART1_Data_Ready:
;__Lib_UART_c67.c,34 :: 		
;__Lib_UART_c67.c,35 :: 		
0x0288	0x0E00      	MOVLW       0
0x028A	0xBA9E      	BTFSC       PIR1, 5 
0x028C	0x0E01      	MOVLW       1
0x028E	0x6E00      	MOVWF       R0 
;__Lib_UART_c67.c,36 :: 		
L_end_UART1_Data_Ready:
0x0290	0x0012      	RETURN      0
; end of _UART1_Data_Ready
_Delay_22us:
;__Lib_Delays.c,15 :: 		void Delay_22us() {
;__Lib_Delays.c,16 :: 		Delay_us(22);
0x0292	0x0E1D      	MOVLW       29
0x0294	0x6E0D      	MOVWF       R13, 0
L_Delay_22us1:
0x0296	0x2E0D      	DECFSZ      R13, 1, 0
0x0298	0xD7FE      	BRA         L_Delay_22us1
;__Lib_Delays.c,17 :: 		}
0x029A	0x0012      	RETURN      0
; end of _Delay_22us
_SETIOV3224:
;__Lib_MathDouble.c,530 :: 		
;__Lib_MathDouble.c,537 :: 		
0x029C	0x800B      	BSF         R11, 0, 0
;__Lib_MathDouble.c,538 :: 		
0x029E	0xAE0B      	BTFSS       R11, 7, 0
;__Lib_MathDouble.c,539 :: 		
0x02A0	0xF001EF5A  	GOTO        SETIOV3224EEE
;__Lib_MathDouble.c,541 :: 		
0x02A4	0x6A02      	CLRF        R2, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,542 :: 		
0x02A6	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,543 :: 		
0x02A8	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,544 :: 		
0x02AA	0x6E02      	MOVWF       R2, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,545 :: 		
0x02AC	0x6E01      	MOVWF       R1, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,546 :: 		
0x02AE	0x6E00      	MOVWF       R0, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,547 :: 		
0x02B0	0x360A      	RLCF        R10, 1, 0
;__Lib_MathDouble.c,548 :: 		
0x02B2	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,549 :: 		
SETIOV3224EEE:
;__Lib_MathDouble.c,550 :: 		
0x02B4	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,552 :: 		
L_end_SETIOV3224:
0x02B6	0x0012      	RETURN      0
; end of _SETIOV3224
_UART1_Write_Text:
;__Lib_UART_c67.c,66 :: 		
;__Lib_UART_c67.c,67 :: 		
0x02B8	0x0101      	MOVLB       1
0x02BA	0x6B10      	CLRF        UART1_Write_Text_counter_L0, 1
;__Lib_UART_c67.c,69 :: 		
0x02BC	0xFFE9C10D  	MOVFF       FARG_UART1_Write_Text_uart_text, FSR0L
0x02C0	0xFFEAC10E  	MOVFF       FARG_UART1_Write_Text_uart_text+1, FSR0H
0x02C4	0xF10FCFEE  	MOVFF       POSTINC0, UART1_Write_Text_data__L0
;__Lib_UART_c67.c,70 :: 		
L_UART1_Write_Text5:
0x02C8	0x510F      	MOVF        UART1_Write_Text_data__L0, 0, 1
0x02CA	0x0A00      	XORLW       0
0x02CC	0xE00E      	BZ          L_UART1_Write_Text6
;__Lib_UART_c67.c,71 :: 		
0x02CE	0xF112C10F  	MOVFF       UART1_Write_Text_data__L0, FARG_UART1_Write_data_
0x02D2	0xDF84      	RCALL       _UART1_Write
;__Lib_UART_c67.c,72 :: 		
0x02D4	0x0101      	MOVLB       1
0x02D6	0x2B10      	INCF        UART1_Write_Text_counter_L0, 1, 1
;__Lib_UART_c67.c,73 :: 		
0x02D8	0x5110      	MOVF        UART1_Write_Text_counter_L0, 0, 1
0x02DA	0x250D      	ADDWF       FARG_UART1_Write_Text_uart_text, 0, 1
0x02DC	0x6EE9      	MOVWF       FSR0L 
0x02DE	0x0E00      	MOVLW       0
0x02E0	0x210E      	ADDWFC      FARG_UART1_Write_Text_uart_text+1, 0, 1
0x02E2	0x6EEA      	MOVWF       FSR0H 
0x02E4	0xF10FCFEE  	MOVFF       POSTINC0, UART1_Write_Text_data__L0
;__Lib_UART_c67.c,74 :: 		
0x02E8	0xD7EF      	BRA         L_UART1_Write_Text5
L_UART1_Write_Text6:
;__Lib_UART_c67.c,75 :: 		
L_end_UART1_Write_Text:
0x02EA	0x0012      	RETURN      0
; end of _UART1_Write_Text
_UART1_Read_Text:
;__Lib_UART_c67.c,78 :: 		
;__Lib_UART_c67.c,79 :: 		
0x02EC	0x0101      	MOVLB       1
0x02EE	0x6B1F      	CLRF        UART1_Read_Text_out_idx_L0, 1
0x02F0	0x6B20      	CLRF        UART1_Read_Text_delim_idx_L0, 1
;__Lib_UART_c67.c,81 :: 		
L_UART1_Read_Text7:
0x02F2	0x531D      	MOVF        FARG_UART1_Read_Text_Attempts, 1, 1
0x02F4	0xE042      	BZ          L_UART1_Read_Text8
;__Lib_UART_c67.c,83 :: 		
0x02F6	0x511D      	MOVF        FARG_UART1_Read_Text_Attempts, 0, 1
0x02F8	0x0AFF      	XORLW       255
0x02FA	0xE001      	BZ          L_UART1_Read_Text9
;__Lib_UART_c67.c,84 :: 		
0x02FC	0x071D      	DECF        FARG_UART1_Read_Text_Attempts, 1, 1
L_UART1_Read_Text9:
;__Lib_UART_c67.c,86 :: 		
L_UART1_Read_Text10:
0x02FE	0xDFC4      	RCALL       _UART1_Data_Ready
0x0300	0x5000      	MOVF        R0, 0 
0x0302	0x0A00      	XORLW       0
0x0304	0xE101      	BNZ         L_UART1_Read_Text11
;__Lib_UART_c67.c,87 :: 		
0x0306	0xD7FB      	BRA         L_UART1_Read_Text10
L_UART1_Read_Text11:
;__Lib_UART_c67.c,89 :: 		
0x0308	0xDFB6      	RCALL       _UART1_Read
0x030A	0xF11EC000  	MOVFF       R0, UART1_Read_Text_r_data_L0
;__Lib_UART_c67.c,90 :: 		
0x030E	0x0101      	MOVLB       1
0x0310	0x511F      	MOVF        UART1_Read_Text_out_idx_L0, 0, 1
0x0312	0x2519      	ADDWF       FARG_UART1_Read_Text_Output, 0, 1
0x0314	0x6EE1      	MOVWF       FSR1L 
0x0316	0x0E00      	MOVLW       0
0x0318	0x211A      	ADDWFC      FARG_UART1_Read_Text_Output+1, 0, 1
0x031A	0x6EE2      	MOVWF       FSR1H 
0x031C	0xFFE6C000  	MOVFF       R0, POSTINC1
0x0320	0x2B1F      	INCF        UART1_Read_Text_out_idx_L0, 1, 1
;__Lib_UART_c67.c,91 :: 		
0x0322	0x5120      	MOVF        UART1_Read_Text_delim_idx_L0, 0, 1
0x0324	0x251B      	ADDWF       FARG_UART1_Read_Text_Delimiter, 0, 1
0x0326	0x6EE9      	MOVWF       FSR0L 
0x0328	0x0E00      	MOVLW       0
0x032A	0x211C      	ADDWFC      FARG_UART1_Read_Text_Delimiter+1, 0, 1
0x032C	0x6EEA      	MOVWF       FSR0H 
0x032E	0x50EE      	MOVF        POSTINC0, 0 
0x0330	0x191E      	XORWF       UART1_Read_Text_r_data_L0, 0, 1
0x0332	0xE102      	BNZ         L_UART1_Read_Text12
;__Lib_UART_c67.c,92 :: 		
0x0334	0x2B20      	INCF        UART1_Read_Text_delim_idx_L0, 1, 1
;__Lib_UART_c67.c,93 :: 		
0x0336	0xD009      	BRA         L_UART1_Read_Text13
L_UART1_Read_Text12:
;__Lib_UART_c67.c,95 :: 		
0x0338	0x6B20      	CLRF        UART1_Read_Text_delim_idx_L0, 1
;__Lib_UART_c67.c,96 :: 		
0x033A	0xFFE9C11B  	MOVFF       FARG_UART1_Read_Text_Delimiter, FSR0L
0x033E	0xFFEAC11C  	MOVFF       FARG_UART1_Read_Text_Delimiter+1, FSR0H
0x0342	0x50EE      	MOVF        POSTINC0, 0 
0x0344	0x191E      	XORWF       UART1_Read_Text_r_data_L0, 0, 1
0x0346	0xE101      	BNZ         L_UART1_Read_Text14
;__Lib_UART_c67.c,97 :: 		
0x0348	0x2B20      	INCF        UART1_Read_Text_delim_idx_L0, 1, 1
;__Lib_UART_c67.c,98 :: 		
L_UART1_Read_Text14:
;__Lib_UART_c67.c,99 :: 		
L_UART1_Read_Text13:
;__Lib_UART_c67.c,101 :: 		
0x034A	0x5120      	MOVF        UART1_Read_Text_delim_idx_L0, 0, 1
0x034C	0x251B      	ADDWF       FARG_UART1_Read_Text_Delimiter, 0, 1
0x034E	0x6EE9      	MOVWF       FSR0L 
0x0350	0x0E00      	MOVLW       0
0x0352	0x211C      	ADDWFC      FARG_UART1_Read_Text_Delimiter+1, 0, 1
0x0354	0x6EEA      	MOVWF       FSR0H 
0x0356	0x50EE      	MOVF        POSTINC0, 0 
0x0358	0x0A00      	XORLW       0
0x035A	0xE10E      	BNZ         L_UART1_Read_Text15
;__Lib_UART_c67.c,102 :: 		
0x035C	0x5120      	MOVF        UART1_Read_Text_delim_idx_L0, 0, 1
0x035E	0x5D1F      	SUBWF       UART1_Read_Text_out_idx_L0, 0, 1
0x0360	0x6E00      	MOVWF       R0 
0x0362	0x6A01      	CLRF        R1 
0x0364	0x0E00      	MOVLW       0
0x0366	0x5A01      	SUBWFB      R1, 1 
0x0368	0x5000      	MOVF        R0, 0 
0x036A	0x2519      	ADDWF       FARG_UART1_Read_Text_Output, 0, 1
0x036C	0x6EE1      	MOVWF       FSR1L 
0x036E	0x5001      	MOVF        R1, 0 
0x0370	0x211A      	ADDWFC      FARG_UART1_Read_Text_Output+1, 0, 1
0x0372	0x6EE2      	MOVWF       FSR1H 
0x0374	0x6AE6      	CLRF        POSTINC1 
;__Lib_UART_c67.c,103 :: 		
0x0376	0xD006      	BRA         L_end_UART1_Read_Text
;__Lib_UART_c67.c,104 :: 		
L_UART1_Read_Text15:
;__Lib_UART_c67.c,106 :: 		
0x0378	0xD7BC      	BRA         L_UART1_Read_Text7
L_UART1_Read_Text8:
;__Lib_UART_c67.c,107 :: 		
0x037A	0xFFE1C119  	MOVFF       FARG_UART1_Read_Text_Output, FSR1L
0x037E	0xFFE2C11A  	MOVFF       FARG_UART1_Read_Text_Output+1, FSR1H
0x0382	0x6AE6      	CLRF        POSTINC1 
;__Lib_UART_c67.c,108 :: 		
L_end_UART1_Read_Text:
0x0384	0x0012      	RETURN      0
; end of _UART1_Read_Text
_memset:
;__Lib_CString.c,84 :: 		
;__Lib_CString.c,87 :: 		
0x0386	0xF002C10D  	MOVFF       FARG_memset_p1, R2
0x038A	0xF003C10E  	MOVFF       FARG_memset_p1+1, R3
;__Lib_CString.c,88 :: 		
L_memset20:
0x038E	0xF000C110  	MOVFF       FARG_memset_n, R0
0x0392	0xF001C111  	MOVFF       FARG_memset_n+1, R1
0x0396	0x0E01      	MOVLW       1
0x0398	0x0101      	MOVLB       1
0x039A	0x5F10      	SUBWF       FARG_memset_n, 1, 1
0x039C	0x0E00      	MOVLW       0
0x039E	0x5B11      	SUBWFB      FARG_memset_n+1, 1, 1
0x03A0	0x5000      	MOVF        R0, 0 
0x03A2	0x1001      	IORWF       R1, 0 
0x03A4	0xE009      	BZ          L_memset21
;__Lib_CString.c,89 :: 		
0x03A6	0xFFE1C002  	MOVFF       R2, FSR1L
0x03AA	0xFFE2C003  	MOVFF       R3, FSR1H
0x03AE	0xFFE6C10F  	MOVFF       FARG_memset_character, POSTINC1
0x03B2	0x4A02      	INFSNZ      R2, 1 
0x03B4	0x2A03      	INCF        R3, 1 
0x03B6	0xD7EB      	BRA         L_memset20
L_memset21:
;__Lib_CString.c,90 :: 		
0x03B8	0xF000C10D  	MOVFF       FARG_memset_p1, R0
0x03BC	0xF001C10E  	MOVFF       FARG_memset_p1+1, R1
;__Lib_CString.c,91 :: 		
L_end_memset:
0x03C0	0x0012      	RETURN      0
; end of _memset
_Word2Double:
;__Lib_MathDouble.c,2335 :: 		
;__Lib_MathDouble.c,2344 :: 		
0x03C2	0x5000      	MOVF        R0, 0, 0
;__Lib_MathDouble.c,2345 :: 		
0x03C4	0x6E08      	MOVWF       R8, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,2346 :: 		
0x03C6	0x5001      	MOVF        R1, 0, 0
;__Lib_MathDouble.c,2347 :: 		
0x03C8	0x6E00      	MOVWF       R0, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,2348 :: 		
0x03CA	0x6A01      	CLRF        R1, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,2349 :: 		
0x03CC	0x6A02      	CLRF        R2, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,2350 :: 		
0x03CE	0x6A03      	CLRF        R3, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,2353 :: 		
0x03D0	0x6A0B      	CLRF        R11, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,2354 :: 		
0x03D2	0x6A0C      	CLRF        R12, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,2356 :: 		
0x03D4	0x0E96      	MOVLW       150
;__Lib_MathDouble.c,2357 :: 		
0x03D6	0x6E03      	MOVWF       R3, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,2358 :: 		
0x03D8	0x6A0A      	CLRF        R10, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,2360 :: 		
0x03DA	0xF001C000  	MOVFF       R0, R1
;__Lib_MathDouble.c,2361 :: 		
0x03DE	0xF000C008  	MOVFF       R8, R0
;__Lib_MathDouble.c,2362 :: 		
0x03E2	0x6A08      	CLRF        R8, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,2363 :: 		
0x03E4	0x6A02      	CLRF        R2, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,2365 :: 		
0x03E6	0xDEB5      	RCALL       _NRM3232
;__Lib_MathDouble.c,2366 :: 		
L_end_Word2Double:
0x03E8	0x0012      	RETURN      0
; end of _Word2Double
_Double2Int:
;__Lib_MathDouble.c,1897 :: 		
;__Lib_MathDouble.c,1906 :: 		
0x03EA	0x6A0B      	CLRF        R11, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1907 :: 		
0x03EC	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,1908 :: 		
0x03EE	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1909 :: 		
0x03F0	0xF002EF3B  	GOTO        IRES016
;__Lib_MathDouble.c,1910 :: 		
0x03F4	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,1911 :: 		
0x03F6	0x6E0A      	MOVWF       R10, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1912 :: 		
0x03F8	0x8E02      	BSF         R2, 7, 0
;__Lib_MathDouble.c,1914 :: 		
0x03FA	0x0E8E      	MOVLW       142
;__Lib_MathDouble.c,1915 :: 		
0x03FC	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,1916 :: 		
0x03FE	0xAE03      	BTFSS       R3, 7, 0
;__Lib_MathDouble.c,1917 :: 		
0x0400	0xF002EF3F  	GOTO        SETIOV16
;__Lib_MathDouble.c,1918 :: 		
0x0404	0x6C03      	NEGF        R3, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1920 :: 		
0x0406	0x0E08      	MOVLW       8
;__Lib_MathDouble.c,1921 :: 		
0x0408	0x5C03      	SUBWF       R3, 0, 0
;__Lib_MathDouble.c,1922 :: 		
0x040A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1923 :: 		
0x040C	0xF002EF1A  	GOTO        TSHIFT3216
;__Lib_MathDouble.c,1924 :: 		
0x0410	0x6E03      	MOVWF       R3, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1925 :: 		
0x0412	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,1926 :: 		
0x0414	0xF001C002  	MOVFF       R2, R1
;__Lib_MathDouble.c,1927 :: 		
0x0418	0x6A02      	CLRF        R2, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1929 :: 		
0x041A	0x0E08      	MOVLW       8
;__Lib_MathDouble.c,1930 :: 		
0x041C	0x5C03      	SUBWF       R3, 0, 0
;__Lib_MathDouble.c,1931 :: 		
0x041E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1932 :: 		
0x0420	0xF002EF1A  	GOTO        TSHIFT3216
;__Lib_MathDouble.c,1933 :: 		
0x0424	0x6E03      	MOVWF       R3, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1934 :: 		
0x0426	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,1935 :: 		
0x0428	0x6A01      	CLRF        R1, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1937 :: 		
0x042A	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,1938 :: 		
0x042C	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,1939 :: 		
0x042E	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,1940 :: 		
0x0430	0xF002EF24  	GOTO        SHIFT3216OK
;__Lib_MathDouble.c,1941 :: 		
TSHIFT3216:
;__Lib_MathDouble.c,1942 :: 		
0x0434	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,1943 :: 		
0x0436	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1944 :: 		
0x0438	0xF002EF24  	GOTO        SHIFT3216OK
;__Lib_MathDouble.c,1945 :: 		
SHIFT3216:
;__Lib_MathDouble.c,1946 :: 		
0x043C	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,1947 :: 		
0x043E	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,1948 :: 		
0x0440	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,1949 :: 		
0x0442	0x2E03      	DECFSZ      R3, 1, 0
;__Lib_MathDouble.c,1950 :: 		
0x0444	0xF002EF1E  	GOTO        SHIFT3216
;__Lib_MathDouble.c,1951 :: 		
SHIFT3216OK:
;__Lib_MathDouble.c,1952 :: 		
0x0448	0xBC0B      	BTFSC       R11, 6, 0
;__Lib_MathDouble.c,1953 :: 		
0x044A	0xA001      	BTFSS       R1, 0, 0
;__Lib_MathDouble.c,1954 :: 		
0x044C	0xF002EF31  	GOTO        INT3216OK
;__Lib_MathDouble.c,1955 :: 		
0x0450	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1956 :: 		
0x0452	0xF002EF31  	GOTO        INT3216OK
;__Lib_MathDouble.c,1957 :: 		
0x0456	0x2A01      	INCF        R1, 1, 0
;__Lib_MathDouble.c,1958 :: 		
0x0458	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1959 :: 		
0x045A	0x2A02      	INCF        R2, 1, 0
;__Lib_MathDouble.c,1960 :: 		
0x045C	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,1961 :: 		
0x045E	0xF002EF4E  	GOTO        JPJSETIOV3224
;__Lib_MathDouble.c,1962 :: 		
INT3216OK:
;__Lib_MathDouble.c,1963 :: 		
0x0462	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,1964 :: 		
0x0464	0xF002EF53  	GOTO        INT3216EOK
;__Lib_MathDouble.c,1966 :: 		
0x0468	0x1E02      	COMF        R2, 1, 0
;__Lib_MathDouble.c,1967 :: 		
0x046A	0x1E01      	COMF        R1, 1, 0
;__Lib_MathDouble.c,1968 :: 		
0x046C	0x2A01      	INCF        R1, 1, 0
;__Lib_MathDouble.c,1969 :: 		
0x046E	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1970 :: 		
0x0470	0x2A02      	INCF        R2, 1, 0
;__Lib_MathDouble.c,1971 :: 		
0x0472	0xF002EF53  	GOTO        INT3216EOK
;__Lib_MathDouble.c,1973 :: 		
IRES016:
;__Lib_MathDouble.c,1974 :: 		
0x0476	0x6A02      	CLRF        R2, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1975 :: 		
0x0478	0x6A01      	CLRF        R1, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1976 :: 		
0x047A	0xF002EF53  	GOTO        INT3216EOK
;__Lib_MathDouble.c,1977 :: 		
SETIOV16:
;__Lib_MathDouble.c,1978 :: 		
0x047E	0x800B      	BSF         R11, 0, 0
;__Lib_MathDouble.c,1979 :: 		
0x0480	0xAE0B      	BTFSS       R11, 7, 0
;__Lib_MathDouble.c,1980 :: 		
0x0482	0xF002EF57  	GOTO        INT3216EER
;__Lib_MathDouble.c,1982 :: 		
0x0486	0x6A02      	CLRF        R2, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1983 :: 		
0x0488	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,1984 :: 		
0x048A	0xF002EF57  	GOTO        INT3216EER
;__Lib_MathDouble.c,1985 :: 		
0x048E	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,1986 :: 		
0x0490	0x6E02      	MOVWF       R2, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1987 :: 		
0x0492	0x6E01      	MOVWF       R1, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1988 :: 		
0x0494	0x360A      	RLCF        R10, 1, 0
;__Lib_MathDouble.c,1989 :: 		
0x0496	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,1990 :: 		
0x0498	0xF002EF57  	GOTO        INT3216EER
;__Lib_MathDouble.c,1992 :: 		
JPJSETIOV3224:
;__Lib_MathDouble.c,1993 :: 		
0x049C	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,1994 :: 		
0x049E	0x6E0C      	MOVWF       R12, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1996 :: 		
0x04A0	0xDEFD      	RCALL       _SETIOV3224
;__Lib_MathDouble.c,1998 :: 		
0x04A2	0xF002EF59  	GOTO        INT3216EEE
;__Lib_MathDouble.c,1999 :: 		
INT3216EOK:
;__Lib_MathDouble.c,2000 :: 		
0x04A6	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,2001 :: 		
0x04A8	0x6E0C      	MOVWF       R12, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,2002 :: 		
0x04AA	0xF002EF59  	GOTO        INT3216EEE
;__Lib_MathDouble.c,2003 :: 		
INT3216EER:
;__Lib_MathDouble.c,2004 :: 		
0x04AE	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,2005 :: 		
0x04B0	0x6E0C      	MOVWF       R12, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,2006 :: 		
INT3216EEE:
;__Lib_MathDouble.c,2007 :: 		
0x04B2	0x5001      	MOVF        R1, 0, 0
;__Lib_MathDouble.c,2008 :: 		
0x04B4	0x6E00      	MOVWF       R0, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,2009 :: 		
0x04B6	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,2010 :: 		
0x04B8	0x6E01      	MOVWF       R1, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,2015 :: 		
L_end_Double2Int:
0x04BA	0x0012      	RETURN      0
; end of _Double2Int
_ADC_Read:
;__Lib_ADC_A_C.c,41 :: 		
;__Lib_ADC_A_C.c,44 :: 		
0x04BC	0x6AC2      	CLRF        ADCON0 
;__Lib_ADC_A_C.c,45 :: 		
0x04BE	0x0EC0      	MOVLW       192
0x04C0	0x12C2      	IORWF       ADCON0, 1 
;__Lib_ADC_A_C.c,46 :: 		
0x04C2	0x8CC1      	BSF         ADCON1, 6 
;__Lib_ADC_A_C.c,48 :: 		
0x04C4	0x8EC1      	BSF         ADCON1, 7 
;__Lib_ADC_A_C.c,49 :: 		
0x04C6	0xF000C10D  	MOVFF       FARG_ADC_Read_channel, R0
0x04CA	0x3600      	RLCF        R0, 1 
0x04CC	0x9000      	BCF         R0, 0 
0x04CE	0x3600      	RLCF        R0, 1 
0x04D0	0x9000      	BCF         R0, 0 
0x04D2	0x3600      	RLCF        R0, 1 
0x04D4	0x9000      	BCF         R0, 0 
0x04D6	0x5000      	MOVF        R0, 0 
0x04D8	0x12C2      	IORWF       ADCON0, 1 
;__Lib_ADC_A_C.c,50 :: 		
0x04DA	0x80C2      	BSF         ADCON0, 0 
;__Lib_ADC_A_C.c,51 :: 		
0x04DC	0xDEDA      	RCALL       _Delay_22us
;__Lib_ADC_A_C.c,52 :: 		
0x04DE	0x84C2      	BSF         ADCON0, 2 
;__Lib_ADC_A_C.c,53 :: 		
L_ADC_Read2:
0x04E0	0xA4C2      	BTFSS       ADCON0, 2 
0x04E2	0xD001      	BRA         L_ADC_Read3
;__Lib_ADC_A_C.c,54 :: 		
0x04E4	0xD7FD      	BRA         L_ADC_Read2
L_ADC_Read3:
;__Lib_ADC_A_C.c,56 :: 		
0x04E6	0xF001CFC4  	MOVFF       ADRESH, R1
0x04EA	0x6A00      	CLRF        R0 
;__Lib_ADC_A_C.c,57 :: 		
0x04EC	0x50C3      	MOVF        ADRESL, 0 
0x04EE	0x1200      	IORWF       R0, 1 
0x04F0	0x0E00      	MOVLW       0
0x04F2	0x1201      	IORWF       R1, 1 
;__Lib_ADC_A_C.c,58 :: 		
0x04F4	0x90C2      	BCF         ADCON0, 0 
;__Lib_ADC_A_C.c,60 :: 		
;__Lib_ADC_A_C.c,61 :: 		
L_end_ADC_Read:
0x04F6	0x0012      	RETURN      0
; end of _ADC_Read
_Div_32x32_FP:
;__Lib_MathDouble.c,1325 :: 		
;__Lib_MathDouble.c,1339 :: 		
0x04F8	0x5004      	MOVF        R4, 0 
0x04FA	0x0A00      	XORLW       0
0x04FC	0xE112      	BNZ         L_Div_32x32_FP11
;__Lib_MathDouble.c,1340 :: 		
0x04FE	0x5005      	MOVF        R5, 0 
0x0500	0x0A00      	XORLW       0
0x0502	0xE10F      	BNZ         L_Div_32x32_FP12
;__Lib_MathDouble.c,1341 :: 		
0x0504	0x5006      	MOVF        R6, 0 
0x0506	0x0A00      	XORLW       0
0x0508	0xE10C      	BNZ         L_Div_32x32_FP13
;__Lib_MathDouble.c,1342 :: 		
0x050A	0x5007      	MOVF        R7, 0 
0x050C	0x0A00      	XORLW       0
0x050E	0xE109      	BNZ         L_Div_32x32_FP14
;__Lib_MathDouble.c,1343 :: 		
0x0510	0x0EFF      	MOVLW       255
0x0512	0x6E00      	MOVWF       R0 
;__Lib_MathDouble.c,1344 :: 		
0x0514	0x0EFF      	MOVLW       255
0x0516	0x6E01      	MOVWF       R1 
;__Lib_MathDouble.c,1345 :: 		
0x0518	0x0E7F      	MOVLW       127
0x051A	0x6E02      	MOVWF       R2 
;__Lib_MathDouble.c,1346 :: 		
0x051C	0x0EFF      	MOVLW       255
0x051E	0x6E03      	MOVWF       R3 
;__Lib_MathDouble.c,1347 :: 		
0x0520	0xD0A4      	BRA         L_end_Div_32x32_FP
;__Lib_MathDouble.c,1348 :: 		
L_Div_32x32_FP14:
L_Div_32x32_FP13:
L_Div_32x32_FP12:
L_Div_32x32_FP11:
;__Lib_MathDouble.c,1353 :: 		
0x0522	0x6A08      	CLRF        R8, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1354 :: 		
0x0524	0x6A09      	CLRF        R9, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1356 :: 		
0x0526	0x5007      	MOVF        R7, 0, 0
;__Lib_MathDouble.c,1357 :: 		
0x0528	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1358 :: 		
0x052A	0xF003EF27  	GOTO        JPDSETFDZ32
;__Lib_MathDouble.c,1360 :: 		
0x052E	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,1361 :: 		
0x0530	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1362 :: 		
0x0532	0xF003EF2B  	GOTO        JPDRES032
;__Lib_MathDouble.c,1364 :: 		
0x0536	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,1365 :: 		
0x0538	0x1806      	XORWF       R6, 0, 0
;__Lib_MathDouble.c,1366 :: 		
0x053A	0x6E0A      	MOVWF       R10, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1367 :: 		
0x053C	0x8E02      	BSF         R2, 7, 0
;__Lib_MathDouble.c,1368 :: 		
0x053E	0x8E06      	BSF         R6, 7, 0
;__Lib_MathDouble.c,1370 :: 		
0x0540	0x6A0E      	CLRF        R14, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1371 :: 		
0x0542	0xF008C002  	MOVFF       R2, R8
;__Lib_MathDouble.c,1372 :: 		
0x0546	0xF00CC001  	MOVFF       R1, R12
;__Lib_MathDouble.c,1373 :: 		
0x054A	0xF00DC000  	MOVFF       R0, R13
;__Lib_MathDouble.c,1375 :: 		
0x054E	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,1376 :: 		
0x0550	0x5E0D      	SUBWF       R13, 1, 0
;__Lib_MathDouble.c,1377 :: 		
0x0552	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,1378 :: 		
0x0554	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1379 :: 		
0x0556	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_MathDouble.c,1381 :: 		
0x0558	0x5E0C      	SUBWF       R12, 1, 0
;__Lib_MathDouble.c,1382 :: 		
0x055A	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,1383 :: 		
0x055C	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1384 :: 		
0x055E	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_MathDouble.c,1386 :: 		
0x0560	0x5E08      	SUBWF       R8, 1, 0
;__Lib_MathDouble.c,1387 :: 		
0x0562	0x6A08      	CLRF        R8, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1388 :: 		
0x0564	0x6A0C      	CLRF        R12, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1389 :: 		
0x0566	0x6A0D      	CLRF        R13, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1390 :: 		
0x0568	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1391 :: 		
0x056A	0xF002EFBE  	GOTO        DALIGN32OK
;__Lib_MathDouble.c,1393 :: 		
0x056E	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,1394 :: 		
0x0570	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,1395 :: 		
0x0572	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,1396 :: 		
0x0574	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,1397 :: 		
0x0576	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,1398 :: 		
0x0578	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,1399 :: 		
0x057A	0x6E0E      	MOVWF       R14, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1400 :: 		
DALIGN32OK:
;__Lib_MathDouble.c,1401 :: 		
0x057C	0x5007      	MOVF        R7, 0, 0
;__Lib_MathDouble.c,1402 :: 		
0x057E	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,1403 :: 		
0x0580	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1404 :: 		
0x0582	0xF002EFCB  	GOTO        ALTB32
;__Lib_MathDouble.c,1406 :: 		
0x0586	0x0E7E      	MOVLW       126
;__Lib_MathDouble.c,1407 :: 		
0x0588	0x240E      	ADDWF       R14, 0, 0
;__Lib_MathDouble.c,1408 :: 		
0x058A	0x2603      	ADDWF       R3, 1, 0
;__Lib_MathDouble.c,1409 :: 		
0x058C	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,1410 :: 		
0x058E	0xF003EF2F  	GOTO        JPDSETFOV32
;__Lib_MathDouble.c,1411 :: 		
0x0592	0xF002EFD1  	GOTO        DARGOK32
;__Lib_MathDouble.c,1412 :: 		
ALTB32:
;__Lib_MathDouble.c,1413 :: 		
0x0596	0x0E7E      	MOVLW       126
;__Lib_MathDouble.c,1414 :: 		
0x0598	0x240E      	ADDWF       R14, 0, 0
;__Lib_MathDouble.c,1415 :: 		
0x059A	0x2603      	ADDWF       R3, 1, 0
;__Lib_MathDouble.c,1416 :: 		
0x059C	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1417 :: 		
0x059E	0xF003EF33  	GOTO        JPDSETFUN32
;__Lib_MathDouble.c,1418 :: 		
DARGOK32:
;__Lib_MathDouble.c,1419 :: 		
0x05A2	0x0E18      	MOVLW       24
;__Lib_MathDouble.c,1420 :: 		
0x05A4	0x6E0B      	MOVWF       R11, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1421 :: 		
DLOOP32:
;__Lib_MathDouble.c,1422 :: 		
0x05A6	0x360D      	RLCF        R13, 1, 0
;__Lib_MathDouble.c,1423 :: 		
0x05A8	0x360C      	RLCF        R12, 1, 0
;__Lib_MathDouble.c,1424 :: 		
0x05AA	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,1425 :: 		
0x05AC	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,1426 :: 		
0x05AE	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,1427 :: 		
0x05B0	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,1428 :: 		
0x05B2	0x360E      	RLCF        R14, 1, 0
;__Lib_MathDouble.c,1430 :: 		
0x05B4	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,1431 :: 		
0x05B6	0x5E00      	SUBWF       R0, 1, 0
;__Lib_MathDouble.c,1432 :: 		
0x05B8	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,1433 :: 		
0x05BA	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1434 :: 		
0x05BC	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_MathDouble.c,1436 :: 		
0x05BE	0x5E01      	SUBWF       R1, 1, 0
;__Lib_MathDouble.c,1437 :: 		
0x05C0	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,1438 :: 		
0x05C2	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1439 :: 		
0x05C4	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_MathDouble.c,1441 :: 		
0x05C6	0x5E02      	SUBWF       R2, 1, 0
;__Lib_MathDouble.c,1442 :: 		
0x05C8	0x3406      	RLCF        R6, 0, 0
;__Lib_MathDouble.c,1443 :: 		
0x05CA	0x120E      	IORWF       R14, 1, 0
;__Lib_MathDouble.c,1444 :: 		
0x05CC	0xA00E      	BTFSS       R14, 0, 0
;__Lib_MathDouble.c,1445 :: 		
0x05CE	0xF002EFEC  	GOTO        DREST32
;__Lib_MathDouble.c,1446 :: 		
0x05D2	0x800D      	BSF         R13, 0, 0
;__Lib_MathDouble.c,1447 :: 		
0x05D4	0xF002EFF7  	GOTO        DOK32
;__Lib_MathDouble.c,1448 :: 		
DREST32:
;__Lib_MathDouble.c,1449 :: 		
0x05D8	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,1450 :: 		
0x05DA	0x2600      	ADDWF       R0, 1, 0
;__Lib_MathDouble.c,1451 :: 		
0x05DC	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,1452 :: 		
0x05DE	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,1453 :: 		
0x05E0	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_MathDouble.c,1455 :: 		
0x05E2	0x2601      	ADDWF       R1, 1, 0
;__Lib_MathDouble.c,1456 :: 		
0x05E4	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,1457 :: 		
0x05E6	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,1458 :: 		
0x05E8	0x2806      	INCF        R6, 0, 0
;__Lib_MathDouble.c,1459 :: 		
0x05EA	0x2602      	ADDWF       R2, 1, 0
;__Lib_MathDouble.c,1460 :: 		
0x05EC	0x900D      	BCF         R13, 0, 0
;__Lib_MathDouble.c,1461 :: 		
DOK32:
;__Lib_MathDouble.c,1462 :: 		
0x05EE	0x2E0B      	DECFSZ      R11, 1, 0
;__Lib_MathDouble.c,1463 :: 		
0x05F0	0xF002EFD3  	GOTO        DLOOP32
;__Lib_MathDouble.c,1467 :: 		
0x05F4	0xF003EF1D  	GOTO        DIV32OK
;__Lib_MathDouble.c,1468 :: 		
0x05F8	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,1469 :: 		
0x05FA	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,1470 :: 		
0x05FC	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,1471 :: 		
0x05FE	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,1472 :: 		
0x0600	0x360E      	RLCF        R14, 1, 0
;__Lib_MathDouble.c,1474 :: 		
0x0602	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,1475 :: 		
0x0604	0x5E00      	SUBWF       R0, 1, 0
;__Lib_MathDouble.c,1476 :: 		
0x0606	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,1477 :: 		
0x0608	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1478 :: 		
0x060A	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_MathDouble.c,1479 :: 		
0x060C	0x5E01      	SUBWF       R1, 1, 0
;__Lib_MathDouble.c,1480 :: 		
0x060E	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,1481 :: 		
0x0610	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1482 :: 		
0x0612	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_MathDouble.c,1483 :: 		
0x0614	0x5E02      	SUBWF       R2, 1, 0
;__Lib_MathDouble.c,1484 :: 		
0x0616	0x3406      	RLCF        R6, 0, 0
;__Lib_MathDouble.c,1485 :: 		
0x0618	0x100E      	IORWF       R14, 0, 0
;__Lib_MathDouble.c,1486 :: 		
0x061A	0x0B01      	ANDLW       1
;__Lib_MathDouble.c,1487 :: 		
0x061C	0x260D      	ADDWF       R13, 1, 0
;__Lib_MathDouble.c,1488 :: 		
0x061E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,1489 :: 		
0x0620	0x2A0C      	INCF        R12, 1, 0
;__Lib_MathDouble.c,1490 :: 		
0x0622	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1491 :: 		
0x0624	0x2A08      	INCF        R8, 1, 0
;__Lib_MathDouble.c,1492 :: 		
0x0626	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,1493 :: 		
0x0628	0xF003EF1D  	GOTO        DIV32OK
;__Lib_MathDouble.c,1494 :: 		
0x062C	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,1495 :: 		
0x062E	0x320C      	RRCF        R12, 1, 0
;__Lib_MathDouble.c,1496 :: 		
0x0630	0x320D      	RRCF        R13, 1, 0
;__Lib_MathDouble.c,1497 :: 		
0x0632	0x2A03      	INCF        R3, 1, 0
;__Lib_MathDouble.c,1498 :: 		
0x0634	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1499 :: 		
0x0636	0xF003EF2F  	GOTO        JPDSETFOV32
;__Lib_MathDouble.c,1500 :: 		
DIV32OK:
;__Lib_MathDouble.c,1501 :: 		
0x063A	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,1502 :: 		
0x063C	0x9E08      	BCF         R8, 7, 0
;__Lib_MathDouble.c,1503 :: 		
0x063E	0x5008      	MOVF        R8, 0, 0
;__Lib_MathDouble.c,1504 :: 		
0x0640	0x6E02      	MOVWF       R2, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1505 :: 		
0x0642	0x500C      	MOVF        R12, 0, 0
;__Lib_MathDouble.c,1506 :: 		
0x0644	0x6E01      	MOVWF       R1, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1507 :: 		
0x0646	0x500D      	MOVF        R13, 0, 0
;__Lib_MathDouble.c,1508 :: 		
0x0648	0x6E00      	MOVWF       R0, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1511 :: 		
0x064A	0xF003EF35  	GOTO        DIV32EEE
;__Lib_MathDouble.c,1512 :: 		
JPDSETFDZ32:
;__Lib_MathDouble.c,1513 :: 		
0x064E	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,1516 :: 		
0x0650	0xDDCC      	RCALL       _SETFDZ32
;__Lib_MathDouble.c,1518 :: 		
0x0652	0xF003EF35  	GOTO        DIV32EEE
;__Lib_MathDouble.c,1519 :: 		
JPDRES032:
;__Lib_MathDouble.c,1520 :: 		
0x0656	0x0E02      	MOVLW       2
;__Lib_MathDouble.c,1523 :: 		
0x0658	0xDD61      	RCALL       _RES032
;__Lib_MathDouble.c,1525 :: 		
0x065A	0xF003EF35  	GOTO        DIV32EEE
;__Lib_MathDouble.c,1526 :: 		
JPDSETFOV32:
;__Lib_MathDouble.c,1527 :: 		
0x065E	0x0E04      	MOVLW       4
;__Lib_MathDouble.c,1530 :: 		
0x0660	0xDDB1      	RCALL       _SETFOV32
;__Lib_MathDouble.c,1532 :: 		
0x0662	0xF003EF35  	GOTO        DIV32EEE
;__Lib_MathDouble.c,1533 :: 		
JPDSETFUN32:
;__Lib_MathDouble.c,1534 :: 		
0x0666	0x0E08      	MOVLW       8
;__Lib_MathDouble.c,1537 :: 		
0x0668	0xDD60      	RCALL       _SETFUN32
;__Lib_MathDouble.c,1539 :: 		
DIV32EEE:
;__Lib_MathDouble.c,1547 :: 		
L_end_Div_32x32_FP:
0x066A	0x0012      	RETURN      0
; end of _Div_32x32_FP
_GT:
;SLAVE FIRMWARE.c,73 :: 		void GT(){
;SLAVE FIRMWARE.c,74 :: 		lcd_cmd(_lcd_clear);
0x066C	0x0E01      	MOVLW       1
0x066E	0x0101      	MOVLB       1
0x0670	0x6F18      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0672	0xDD0E      	RCALL       _Lcd_Cmd
;SLAVE FIRMWARE.c,75 :: 		delay_ms(10);
0x0674	0x0E34      	MOVLW       52
0x0676	0x6E0C      	MOVWF       R12, 0
0x0678	0x0EF1      	MOVLW       241
0x067A	0x6E0D      	MOVWF       R13, 0
L_GT3:
0x067C	0x2E0D      	DECFSZ      R13, 1, 0
0x067E	0xD7FE      	BRA         L_GT3
0x0680	0x2E0C      	DECFSZ      R12, 1, 0
0x0682	0xD7FC      	BRA         L_GT3
0x0684	0x0000      	NOP
0x0686	0x0000      	NOP
;SLAVE FIRMWARE.c,76 :: 		lcd_out(1,1,"Alarm");
0x0688	0x0E01      	MOVLW       1
0x068A	0x0101      	MOVLB       1
0x068C	0x6F12      	MOVWF       FARG_Lcd_Out_row, 1
0x068E	0x0E01      	MOVLW       1
0x0690	0x6F13      	MOVWF       FARG_Lcd_Out_column, 1
0x0692	0x0EAF      	MOVLW       ?lstr2_SLAVE_32FIRMWARE
0x0694	0x6F14      	MOVWF       FARG_Lcd_Out_text, 1
0x0696	0x0E00      	MOVLW       hi_addr(?lstr2_SLAVE_32FIRMWARE)
0x0698	0x6F15      	MOVWF       FARG_Lcd_Out_text+1, 1
0x069A	0xDDAB      	RCALL       _Lcd_Out
;SLAVE FIRMWARE.c,77 :: 		}
0x069C	0x0012      	RETURN      0
; end of _GT
_Mul_32x32_FP:
;__Lib_MathDouble.c,1130 :: 		
;__Lib_MathDouble.c,1148 :: 		
0x069E	0x6A08      	CLRF        R8, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1149 :: 		
0x06A0	0x6A09      	CLRF        R9, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1151 :: 		
0x06A2	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1152 :: 		
0x06A4	0x6207      	CPFSEQ      R7, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1153 :: 		
0x06A6	0x6403      	CPFSGT      R3, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1154 :: 		
0x06A8	0xF003EFD4  	GOTO        MULJPRES032
;__Lib_MathDouble.c,1157 :: 		
0x06AC	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,1158 :: 		
0x06AE	0x1806      	XORWF       R6, 0, 0
;__Lib_MathDouble.c,1159 :: 		
0x06B0	0x6E0A      	MOVWF       R10, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1161 :: 		
0x06B2	0x5007      	MOVF        R7, 0, 0
;__Lib_MathDouble.c,1162 :: 		
0x06B4	0x2603      	ADDWF       R3, 1, 0
;__Lib_MathDouble.c,1163 :: 		
0x06B6	0x0E7E      	MOVLW       126
;__Lib_MathDouble.c,1164 :: 		
0x06B8	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1165 :: 		
0x06BA	0xF003EF65  	GOTO        MTUN32
;__Lib_MathDouble.c,1167 :: 		
0x06BE	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,1168 :: 		
0x06C0	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,1169 :: 		
0x06C2	0xF003EFD8  	GOTO        MULJPSETFOV32
;__Lib_MathDouble.c,1170 :: 		
0x06C6	0xF003EF69  	GOTO        MOK32
;__Lib_MathDouble.c,1172 :: 		
MTUN32:
;__Lib_MathDouble.c,1173 :: 		
0x06CA	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,1174 :: 		
0x06CC	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1175 :: 		
0x06CE	0xF003EFDC  	GOTO        MULJPSETFUN32
;__Lib_MathDouble.c,1177 :: 		
MOK32:
;__Lib_MathDouble.c,1178 :: 		
0x06D2	0x8E02      	BSF         R2, 7, 0
;__Lib_MathDouble.c,1179 :: 		
0x06D4	0x8E06      	BSF         R6, 7, 0
;__Lib_MathDouble.c,1181 :: 		
0x06D6	0xF00EC002  	MOVFF       R2, R14
;__Lib_MathDouble.c,1182 :: 		
0x06DA	0xF00BC001  	MOVFF       R1, R11
;__Lib_MathDouble.c,1183 :: 		
0x06DE	0xF00DC000  	MOVFF       R0, R13
;__Lib_MathDouble.c,1185 :: 		
0x06E2	0x5000      	MOVF        R0, 0, 0
;__Lib_MathDouble.c,1186 :: 		
0x06E4	0x0204      	MULWF       R4, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1187 :: 		
0x06E6	0xF00CCFF4  	MOVFF       PRODH, R12
;__Lib_MathDouble.c,1189 :: 		
0x06EA	0x5001      	MOVF        R1, 0, 0
;__Lib_MathDouble.c,1190 :: 		
0x06EC	0x0205      	MULWF       R5, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1191 :: 		
0x06EE	0xF000CFF4  	MOVFF       PRODH, R0
;__Lib_MathDouble.c,1192 :: 		
0x06F2	0xF008CFF3  	MOVFF       PRODL, R8
;__Lib_MathDouble.c,1194 :: 		
0x06F6	0x0204      	MULWF       R4, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1195 :: 		
0x06F8	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_MathDouble.c,1196 :: 		
0x06FA	0x260C      	ADDWF       R12, 1, 0
;__Lib_MathDouble.c,1197 :: 		
0x06FC	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_MathDouble.c,1198 :: 		
0x06FE	0x2208      	ADDWFC      R8, 1, 0
;__Lib_MathDouble.c,1199 :: 		
0x0700	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1200 :: 		
0x0702	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,1202 :: 		
0x0704	0x500D      	MOVF        R13, 0, 0
;__Lib_MathDouble.c,1203 :: 		
0x0706	0x0205      	MULWF       R5, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1204 :: 		
0x0708	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_MathDouble.c,1205 :: 		
0x070A	0x260C      	ADDWF       R12, 1, 0
;__Lib_MathDouble.c,1206 :: 		
0x070C	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_MathDouble.c,1207 :: 		
0x070E	0x2208      	ADDWFC      R8, 1, 0
;__Lib_MathDouble.c,1208 :: 		
0x0710	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1209 :: 		
0x0712	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,1211 :: 		
0x0714	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,1212 :: 		
0x0716	0x0204      	MULWF       R4, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1213 :: 		
0x0718	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_MathDouble.c,1214 :: 		
0x071A	0x2608      	ADDWF       R8, 1, 0
;__Lib_MathDouble.c,1215 :: 		
0x071C	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_MathDouble.c,1216 :: 		
0x071E	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,1217 :: 		
0x0720	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,1218 :: 		
0x0722	0x0205      	MULWF       R5, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1219 :: 		
0x0724	0x6A01      	CLRF        R1, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1220 :: 		
0x0726	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1221 :: 		
0x0728	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,1222 :: 		
0x072A	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_MathDouble.c,1223 :: 		
0x072C	0x2600      	ADDWF       R0, 1, 0
;__Lib_MathDouble.c,1224 :: 		
0x072E	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_MathDouble.c,1225 :: 		
0x0730	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,1227 :: 		
0x0732	0x500D      	MOVF        R13, 0, 0
;__Lib_MathDouble.c,1228 :: 		
0x0734	0x0206      	MULWF       R6, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1229 :: 		
0x0736	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_MathDouble.c,1230 :: 		
0x0738	0x2608      	ADDWF       R8, 1, 0
;__Lib_MathDouble.c,1231 :: 		
0x073A	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_MathDouble.c,1232 :: 		
0x073C	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,1233 :: 		
0x073E	0x6A02      	CLRF        R2, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1234 :: 		
0x0740	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1235 :: 		
0x0742	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,1236 :: 		
0x0744	0x2202      	ADDWFC      R2, 1, 0
;__Lib_MathDouble.c,1238 :: 		
0x0746	0x500B      	MOVF        R11, 0, 0
;__Lib_MathDouble.c,1239 :: 		
0x0748	0x0206      	MULWF       R6, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1240 :: 		
0x074A	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_MathDouble.c,1241 :: 		
0x074C	0x2600      	ADDWF       R0, 1, 0
;__Lib_MathDouble.c,1242 :: 		
0x074E	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_MathDouble.c,1243 :: 		
0x0750	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,1244 :: 		
0x0752	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1245 :: 		
0x0754	0x2202      	ADDWFC      R2, 1, 0
;__Lib_MathDouble.c,1247 :: 		
0x0756	0x500E      	MOVF        R14, 0, 0
;__Lib_MathDouble.c,1248 :: 		
0x0758	0x0206      	MULWF       R6, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1249 :: 		
0x075A	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_MathDouble.c,1250 :: 		
0x075C	0x2601      	ADDWF       R1, 1, 0
;__Lib_MathDouble.c,1251 :: 		
0x075E	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_MathDouble.c,1252 :: 		
0x0760	0x2202      	ADDWFC      R2, 1, 0
;__Lib_MathDouble.c,1254 :: 		
0x0762	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,1255 :: 		
0x0764	0xF003EFBC  	GOTO        MROUND32
;__Lib_MathDouble.c,1256 :: 		
0x0768	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,1257 :: 		
0x076A	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,1258 :: 		
0x076C	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,1259 :: 		
0x076E	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,1260 :: 		
0x0770	0x0603      	DECF        R3, 1, 0
;__Lib_MathDouble.c,1261 :: 		
0x0772	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1262 :: 		
0x0774	0xF003EFDC  	GOTO        MULJPSETFUN32
;__Lib_MathDouble.c,1264 :: 		
MROUND32:
;__Lib_MathDouble.c,1267 :: 		
0x0778	0xF003EFCF  	GOTO        MUL32OK
;__Lib_MathDouble.c,1268 :: 		
0x077C	0x80D8      	BSF         STATUS, 0, 0
;__Lib_MathDouble.c,1269 :: 		
0x077E	0x0E80      	MOVLW       128
;__Lib_MathDouble.c,1270 :: 		
0x0780	0x6408      	CPFSGT      R8, higher_addr(SETFOV32EEE)
;__Lib_MathDouble.c,1271 :: 		
0x0782	0x3000      	RRCF        R0, 0, 0
;__Lib_MathDouble.c,1272 :: 		
0x0784	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1273 :: 		
0x0786	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,1274 :: 		
0x0788	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,1275 :: 		
0x078A	0x2202      	ADDWFC      R2, 1, 0
;__Lib_MathDouble.c,1277 :: 		
0x078C	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1278 :: 		
0x078E	0xF003EFCF  	GOTO        MUL32OK
;__Lib_MathDouble.c,1279 :: 		
0x0792	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,1280 :: 		
0x0794	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,1281 :: 		
0x0796	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,1282 :: 		
0x0798	0x4A03      	INFSNZ      R3, 1, 0
;__Lib_MathDouble.c,1283 :: 		
0x079A	0xF003EFD8  	GOTO        MULJPSETFOV32
;__Lib_MathDouble.c,1285 :: 		
MUL32OK:
;__Lib_MathDouble.c,1286 :: 		
0x079E	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,1287 :: 		
0x07A0	0x9E02      	BCF         R2, 7, 0
;__Lib_MathDouble.c,1289 :: 		
0x07A2	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1290 :: 		
0x07A4	0xF003EFDE  	GOTO        MULEEE
;__Lib_MathDouble.c,1291 :: 		
MULJPRES032:
;__Lib_MathDouble.c,1292 :: 		
0x07A8	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,1295 :: 		
0x07AA	0xDCB8      	RCALL       _RES032
;__Lib_MathDouble.c,1297 :: 		
0x07AC	0xF003EFDE  	GOTO        MULEEE
;__Lib_MathDouble.c,1298 :: 		
MULJPSETFOV32:
;__Lib_MathDouble.c,1299 :: 		
0x07B0	0x0E02      	MOVLW       2
;__Lib_MathDouble.c,1302 :: 		
0x07B2	0xDD08      	RCALL       _SETFOV32
;__Lib_MathDouble.c,1304 :: 		
0x07B4	0xF003EFDE  	GOTO        MULEEE
;__Lib_MathDouble.c,1305 :: 		
MULJPSETFUN32:
;__Lib_MathDouble.c,1306 :: 		
0x07B8	0x0E04      	MOVLW       4
;__Lib_MathDouble.c,1309 :: 		
0x07BA	0xDCB7      	RCALL       _SETFUN32
;__Lib_MathDouble.c,1311 :: 		
MULEEE:
;__Lib_MathDouble.c,1318 :: 		
L_end_Mul_32x32_FP:
0x07BC	0x0012      	RETURN      0
; end of _Mul_32x32_FP
_Div_16x16_U:
;__Lib_Math.c,102 :: 		
;__Lib_Math.c,109 :: 		
0x07BE	0x6A08      	CLRF        R8, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,110 :: 		
0x07C0	0x6A09      	CLRF        R9, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,111 :: 		
0x07C2	0x0E10      	MOVLW       16
;__Lib_Math.c,112 :: 		
0x07C4	0x6E0C      	MOVWF       R12, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,113 :: 		
0x07C6	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,114 :: 		
0x07C8	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,115 :: 		
0x07CA	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,116 :: 		
0x07CC	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,117 :: 		
0x07CE	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,118 :: 		
0x07D0	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,119 :: 		
0x07D2	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,120 :: 		
0x07D4	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,121 :: 		
0x07D6	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,122 :: 		
0x07D8	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,123 :: 		
0x07DA	0xD007      	BRA         $+16
;__Lib_Math.c,124 :: 		
0x07DC	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,125 :: 		
0x07DE	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,126 :: 		
0x07E0	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,127 :: 		
0x07E2	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,128 :: 		
0x07E4	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,129 :: 		
0x07E6	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,130 :: 		
0x07E8	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,131 :: 		
0x07EA	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,132 :: 		
0x07EC	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,133 :: 		
0x07EE	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,134 :: 		
0x07F0	0xD7EA      	BRA         $-42
;__Lib_Math.c,136 :: 		
L_end_Div_16x16_U:
0x07F2	0x0012      	RETURN      0
; end of _Div_16x16_U
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x07F4	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x07F6	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x07FA	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x07FC	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x07FE	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x0800	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x0802	0x0012      	RETURN      0
; end of ___CC2DW
_play:
;SLAVE FIRMWARE.c,51 :: 		void play(){
;SLAVE FIRMWARE.c,52 :: 		Relay_1 = 1;
0x0804	0x8281      	BSF         PORTB, 1 
;SLAVE FIRMWARE.c,53 :: 		Relay_2 = 1;
0x0806	0x8081      	BSF         PORTB, 0 
;SLAVE FIRMWARE.c,54 :: 		Relay_3 = 1;
0x0808	0x8A82      	BSF         PORTC, 5 
;SLAVE FIRMWARE.c,55 :: 		Relay_4 = 1;
0x080A	0x8882      	BSF         PORTC, 4 
;SLAVE FIRMWARE.c,56 :: 		Relay_5 = 1;
0x080C	0x8682      	BSF         PORTC, 3 
;SLAVE FIRMWARE.c,57 :: 		delay_ms(10);
0x080E	0x0E34      	MOVLW       52
0x0810	0x6E0C      	MOVWF       R12, 0
0x0812	0x0EF1      	MOVLW       241
0x0814	0x6E0D      	MOVWF       R13, 0
L_play0:
0x0816	0x2E0D      	DECFSZ      R13, 1, 0
0x0818	0xD7FE      	BRA         L_play0
0x081A	0x2E0C      	DECFSZ      R12, 1, 0
0x081C	0xD7FC      	BRA         L_play0
0x081E	0x0000      	NOP
0x0820	0x0000      	NOP
;SLAVE FIRMWARE.c,58 :: 		Relay_1 = 0;
0x0822	0x9281      	BCF         PORTB, 1 
;SLAVE FIRMWARE.c,59 :: 		Relay_2 = 0;
0x0824	0x9081      	BCF         PORTB, 0 
;SLAVE FIRMWARE.c,60 :: 		Relay_3 = 0;
0x0826	0x9A82      	BCF         PORTC, 5 
;SLAVE FIRMWARE.c,61 :: 		Relay_4 = 0;
0x0828	0x9882      	BCF         PORTC, 4 
;SLAVE FIRMWARE.c,62 :: 		Relay_5 = 0;
0x082A	0x9682      	BCF         PORTC, 3 
;SLAVE FIRMWARE.c,63 :: 		delay_ms(10);
0x082C	0x0E34      	MOVLW       52
0x082E	0x6E0C      	MOVWF       R12, 0
0x0830	0x0EF1      	MOVLW       241
0x0832	0x6E0D      	MOVWF       R13, 0
L_play1:
0x0834	0x2E0D      	DECFSZ      R13, 1, 0
0x0836	0xD7FE      	BRA         L_play1
0x0838	0x2E0C      	DECFSZ      R12, 1, 0
0x083A	0xD7FC      	BRA         L_play1
0x083C	0x0000      	NOP
0x083E	0x0000      	NOP
;SLAVE FIRMWARE.c,65 :: 		}
0x0840	0x0012      	RETURN      0
; end of _play
_UART1_Init:
;__Lib_UART_c67.c,15 :: 		
;__Lib_UART_c67.c,18 :: 		
0x0842	0x0EDC      	MOVLW       _UART1_Write
0x0844	0x0100      	MOVLB       0
0x0846	0x6FD0      	MOVWF       _UART_Wr_Ptr, 1
0x0848	0x0E01      	MOVLW       hi_addr(_UART1_Write)
0x084A	0x6FD1      	MOVWF       _UART_Wr_Ptr+1, 1
0x084C	0x0E12      	MOVLW       FARG_UART1_Write_data_
0x084E	0x6FD2      	MOVWF       _UART_Wr_Ptr+2, 1
0x0850	0x0E01      	MOVLW       hi_addr(FARG_UART1_Write_data_)
0x0852	0x6FD3      	MOVWF       _UART_Wr_Ptr+3, 1
;__Lib_UART_c67.c,19 :: 		
0x0854	0x0E76      	MOVLW       _UART1_Read
0x0856	0x6FD9      	MOVWF       _UART_Rd_Ptr, 1
0x0858	0x0E02      	MOVLW       hi_addr(_UART1_Read)
0x085A	0x6FDA      	MOVWF       _UART_Rd_Ptr+1, 1
0x085C	0x0E00      	MOVLW       0
0x085E	0x6FDB      	MOVWF       _UART_Rd_Ptr+2, 1
0x0860	0x0E00      	MOVLW       0
0x0862	0x6FDC      	MOVWF       _UART_Rd_Ptr+3, 1
;__Lib_UART_c67.c,20 :: 		
0x0864	0x0E88      	MOVLW       _UART1_Data_Ready
0x0866	0x6FE1      	MOVWF       _UART_Rdy_Ptr, 1
0x0868	0x0E02      	MOVLW       hi_addr(_UART1_Data_Ready)
0x086A	0x6FE2      	MOVWF       _UART_Rdy_Ptr+1, 1
0x086C	0x0E00      	MOVLW       0
0x086E	0x6FE3      	MOVWF       _UART_Rdy_Ptr+2, 1
0x0870	0x0E00      	MOVLW       0
0x0872	0x6FE4      	MOVWF       _UART_Rdy_Ptr+3, 1
;__Lib_UART_c67.c,21 :: 		
0x0874	0x0EFF      	MOVLW       _UART1_Tx_Idle
0x0876	0x6FDD      	MOVWF       _UART_Tx_Idle_Ptr, 1
0x0878	0x0EFF      	MOVLW       hi_addr(_UART1_Tx_Idle)
0x087A	0x6FDE      	MOVWF       _UART_Tx_Idle_Ptr+1, 1
0x087C	0x0E00      	MOVLW       0
0x087E	0x6FDF      	MOVWF       _UART_Tx_Idle_Ptr+2, 1
0x0880	0x0E00      	MOVLW       0
0x0882	0x6FE0      	MOVWF       _UART_Tx_Idle_Ptr+3, 1
;__Lib_UART_c67.c,23 :: 		
0x0884	0x8AAC      	BSF         TXSTA, 5 
;__Lib_UART_c67.c,24 :: 		
0x0886	0x0E90      	MOVLW       144
0x0888	0x6EAB      	MOVWF       RCSTA 
;__Lib_UART_c67.c,25 :: 		
0x088A	0x8E94      	BSF         TRISC7_bit, 7 
;__Lib_UART_c67.c,26 :: 		
0x088C	0x9C94      	BCF         TRISC6_bit, 6 
;__Lib_UART_c67.c,28 :: 		
L_UART1_Init0:
0x088E	0xAA9E      	BTFSS       PIR1, 5 
0x0890	0xD003      	BRA         L_UART1_Init1
;__Lib_UART_c67.c,29 :: 		
0x0892	0xF000CFAE  	MOVFF       RCREG, R0
0x0896	0xD7FB      	BRA         L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,30 :: 		
L_end_UART1_Init:
0x0898	0x0012      	RETURN      0
; end of _UART1_Init
_ADC_Init:
;__Lib_ADC_A_C.c,10 :: 		
;__Lib_ADC_A_C.c,11 :: 		
0x089A	0x0EFF      	MOVLW       _ADC_Get_Sample
0x089C	0x0100      	MOVLB       0
0x089E	0x6FD5      	MOVWF       _ADC_Get_Sample_Ptr, 1
0x08A0	0x0EFF      	MOVLW       hi_addr(_ADC_Get_Sample)
0x08A2	0x6FD6      	MOVWF       _ADC_Get_Sample_Ptr+1, 1
0x08A4	0x0EFF      	MOVLW       FARG_ADC_Get_Sample_channel
0x08A6	0x6FD7      	MOVWF       _ADC_Get_Sample_Ptr+2, 1
0x08A8	0x0EFF      	MOVLW       hi_addr(FARG_ADC_Get_Sample_channel)
0x08AA	0x6FD8      	MOVWF       _ADC_Get_Sample_Ptr+3, 1
;__Lib_ADC_A_C.c,13 :: 		
0x08AC	0x6AC2      	CLRF        ADCON0 
;__Lib_ADC_A_C.c,14 :: 		
0x08AE	0x0EC0      	MOVLW       192
0x08B0	0x12C2      	IORWF       ADCON0, 1 
;__Lib_ADC_A_C.c,15 :: 		
0x08B2	0x8CC1      	BSF         ADCON1, 6 
;__Lib_ADC_A_C.c,17 :: 		
0x08B4	0x8EC1      	BSF         ADCON1, 7 
;__Lib_ADC_A_C.c,18 :: 		
0x08B6	0x80C2      	BSF         ADCON0, 0 
;__Lib_ADC_A_C.c,19 :: 		
L_end_ADC_Init:
0x08B8	0x0012      	RETURN      0
; end of _ADC_Init
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x08BA	0x9C93      	BCF         LCD_EN_Direction, BitPos(LCD_EN_Direction+0) 
;__Lib_Lcd.c,87 :: 		
0x08BC	0x9E93      	BCF         LCD_RS_Direction, BitPos(LCD_RS_Direction+0) 
;__Lib_Lcd.c,88 :: 		
0x08BE	0x9A93      	BCF         LCD_D4_Direction, BitPos(LCD_D4_Direction+0) 
;__Lib_Lcd.c,89 :: 		
0x08C0	0x9893      	BCF         LCD_D5_Direction, BitPos(LCD_D5_Direction+0) 
;__Lib_Lcd.c,90 :: 		
0x08C2	0x9693      	BCF         LCD_D6_Direction, BitPos(LCD_D6_Direction+0) 
;__Lib_Lcd.c,91 :: 		
0x08C4	0x9493      	BCF         LCD_D7_Direction, BitPos(LCD_D7_Direction+0) 
;__Lib_Lcd.c,93 :: 		
0x08C6	0x9C81      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,94 :: 		
0x08C8	0x9E81      	BCF         LCD_RS, BitPos(LCD_RS+0) 
;__Lib_Lcd.c,95 :: 		
0x08CA	0x9481      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,96 :: 		
0x08CC	0x9681      	BCF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,97 :: 		
0x08CE	0x9881      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,98 :: 		
0x08D0	0x9A81      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,100 :: 		
0x08D2	0xF000EC39  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,101 :: 		
0x08D6	0xF000EC39  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,102 :: 		
0x08DA	0xF000EC39  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,105 :: 		
0x08DE	0x8881      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,106 :: 		
0x08E0	0x8A81      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,107 :: 		
0x08E2	0x8C81      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,108 :: 		
0x08E4	0xF000EC34  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,109 :: 		
0x08E8	0x9C81      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,110 :: 		
0x08EA	0xF000EC39  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,112 :: 		
0x08EE	0x8C81      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,113 :: 		
0x08F0	0xF000EC34  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,114 :: 		
0x08F4	0x9C81      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,115 :: 		
0x08F6	0xF000EC39  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,117 :: 		
0x08FA	0x8C81      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,118 :: 		
0x08FC	0xF000EC34  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,119 :: 		
0x0900	0x9C81      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,120 :: 		
0x0902	0xF000EC39  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,123 :: 		
0x0906	0x9A81      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,124 :: 		
0x0908	0x8C81      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,125 :: 		
0x090A	0xF000EC34  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,126 :: 		
0x090E	0x9C81      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,127 :: 		
0x0910	0xF000EC39  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,130 :: 		
0x0914	0x8C81      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,131 :: 		
0x0916	0xF000EC34  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,132 :: 		
0x091A	0x9C81      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,134 :: 		
0x091C	0x9881      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,135 :: 		
0x091E	0x8481      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,136 :: 		
0x0920	0x8C81      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,137 :: 		
0x0922	0xF000EC34  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,138 :: 		
0x0926	0x9C81      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,139 :: 		
0x0928	0xF000EC39  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,142 :: 		
0x092C	0x9481      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,143 :: 		
0x092E	0x8A81      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,144 :: 		
0x0930	0x8C81      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,145 :: 		
0x0932	0xF000EC34  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,146 :: 		
0x0936	0x9C81      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,148 :: 		
0x0938	0x9A81      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,149 :: 		
0x093A	0x8C81      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,150 :: 		
0x093C	0xF000EC34  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,151 :: 		
0x0940	0x9C81      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,152 :: 		
0x0942	0xF000EC39  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,155 :: 		
0x0946	0x8C81      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,156 :: 		
0x0948	0xF000EC34  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,157 :: 		
0x094C	0x9C81      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,159 :: 		
0x094E	0x8A81      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,160 :: 		
0x0950	0x8C81      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,161 :: 		
0x0952	0xF000EC34  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,162 :: 		
0x0956	0x9C81      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,163 :: 		
0x0958	0xF000EC39  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,166 :: 		
0x095C	0x9A81      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,167 :: 		
0x095E	0x8C81      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,168 :: 		
0x0960	0xF000EC34  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,169 :: 		
0x0964	0x9C81      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,171 :: 		
0x0966	0x8481      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,172 :: 		
0x0968	0x8681      	BSF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,173 :: 		
0x096A	0x8881      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,174 :: 		
0x096C	0x8A81      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,175 :: 		
0x096E	0x8C81      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,176 :: 		
0x0970	0xF000EC34  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,177 :: 		
0x0974	0x9C81      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,179 :: 		
0x0976	0xF000EC39  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,181 :: 		
0x097A	0x0100      	MOVLB       0
0x097C	0x81D4      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,182 :: 		
L_end_Lcd_Init:
0x097E	0x0012      	RETURN      0
; end of _Lcd_Init
_recv:
;SLAVE FIRMWARE.c,67 :: 		void recv(){
;SLAVE FIRMWARE.c,68 :: 		if(UART1_Data_Ready()==1){
0x0980	0xDC83      	RCALL       _UART1_Data_Ready
0x0982	0x5000      	MOVF        R0, 0 
0x0984	0x0A01      	XORLW       1
0x0986	0xE10C      	BNZ         L_recv2
;SLAVE FIRMWARE.c,69 :: 		Uart1_read_text(BUFFER,"B",17);
0x0988	0x0EF3      	MOVLW       _BUFFER
0x098A	0x0101      	MOVLB       1
0x098C	0x6F19      	MOVWF       FARG_UART1_Read_Text_Output, 1
0x098E	0x0E00      	MOVLW       hi_addr(_BUFFER)
0x0990	0x6F1A      	MOVWF       FARG_UART1_Read_Text_Output+1, 1
0x0992	0x0E5C      	MOVLW       ?lstr1_SLAVE_32FIRMWARE
0x0994	0x6F1B      	MOVWF       FARG_UART1_Read_Text_Delimiter, 1
0x0996	0x0E00      	MOVLW       hi_addr(?lstr1_SLAVE_32FIRMWARE)
0x0998	0x6F1C      	MOVWF       FARG_UART1_Read_Text_Delimiter+1, 1
0x099A	0x0E11      	MOVLW       17
0x099C	0x6F1D      	MOVWF       FARG_UART1_Read_Text_Attempts, 1
0x099E	0xDCA6      	RCALL       _UART1_Read_Text
;SLAVE FIRMWARE.c,70 :: 		}
L_recv2:
;SLAVE FIRMWARE.c,71 :: 		}
0x09A0	0x0012      	RETURN      0
; end of _recv
_conv:
;SLAVE FIRMWARE.c,80 :: 		void conv(unsigned int t,char x){
;SLAVE FIRMWARE.c,81 :: 		char txt[6]="000";
0x09A2	0x0E30      	MOVLW       48
0x09A4	0x0101      	MOVLB       1
0x09A6	0x6F07      	MOVWF       conv_txt_L0, 1
0x09A8	0x0E30      	MOVLW       48
0x09AA	0x6F08      	MOVWF       conv_txt_L0+1, 1
0x09AC	0x0E30      	MOVLW       48
0x09AE	0x6F09      	MOVWF       conv_txt_L0+2, 1
0x09B0	0x6B0A      	CLRF        conv_txt_L0+3, 1
0x09B2	0x6B0B      	CLRF        conv_txt_L0+4, 1
0x09B4	0x6B0C      	CLRF        conv_txt_L0+5, 1
;SLAVE FIRMWARE.c,82 :: 		txt[0]= (t/100%10)+  48;
0x09B6	0x0E64      	MOVLW       100
0x09B8	0x6E04      	MOVWF       R4 
0x09BA	0x0E00      	MOVLW       0
0x09BC	0x6E05      	MOVWF       R5 
0x09BE	0xF000C104  	MOVFF       FARG_conv_t, R0
0x09C2	0xF001C105  	MOVFF       FARG_conv_t+1, R1
0x09C6	0xDEFB      	RCALL       _Div_16x16_U
0x09C8	0x0E0A      	MOVLW       10
0x09CA	0x6E04      	MOVWF       R4 
0x09CC	0x0E00      	MOVLW       0
0x09CE	0x6E05      	MOVWF       R5 
0x09D0	0xDEF6      	RCALL       _Div_16x16_U
0x09D2	0xF000C008  	MOVFF       R8, R0
0x09D6	0xF001C009  	MOVFF       R9, R1
0x09DA	0x0E30      	MOVLW       48
0x09DC	0x2600      	ADDWF       R0, 1 
0x09DE	0xF107C000  	MOVFF       R0, conv_txt_L0
;SLAVE FIRMWARE.c,83 :: 		txt[1]= (t/10%10)+  48;
0x09E2	0x0E0A      	MOVLW       10
0x09E4	0x6E04      	MOVWF       R4 
0x09E6	0x0E00      	MOVLW       0
0x09E8	0x6E05      	MOVWF       R5 
0x09EA	0xF000C104  	MOVFF       FARG_conv_t, R0
0x09EE	0xF001C105  	MOVFF       FARG_conv_t+1, R1
0x09F2	0xDEE5      	RCALL       _Div_16x16_U
0x09F4	0x0E0A      	MOVLW       10
0x09F6	0x6E04      	MOVWF       R4 
0x09F8	0x0E00      	MOVLW       0
0x09FA	0x6E05      	MOVWF       R5 
0x09FC	0xDEE0      	RCALL       _Div_16x16_U
0x09FE	0xF000C008  	MOVFF       R8, R0
0x0A02	0xF001C009  	MOVFF       R9, R1
0x0A06	0x0E30      	MOVLW       48
0x0A08	0x2400      	ADDWF       R0, 0 
0x0A0A	0x6F08      	MOVWF       conv_txt_L0+1, 1
;SLAVE FIRMWARE.c,84 :: 		txt[2]= (t/1%10)+  48;
0x0A0C	0x0E0A      	MOVLW       10
0x0A0E	0x6E04      	MOVWF       R4 
0x0A10	0x0E00      	MOVLW       0
0x0A12	0x6E05      	MOVWF       R5 
0x0A14	0xF000C104  	MOVFF       FARG_conv_t, R0
0x0A18	0xF001C105  	MOVFF       FARG_conv_t+1, R1
0x0A1C	0xDED0      	RCALL       _Div_16x16_U
0x0A1E	0xF000C008  	MOVFF       R8, R0
0x0A22	0xF001C009  	MOVFF       R9, R1
0x0A26	0x0E30      	MOVLW       48
0x0A28	0x2400      	ADDWF       R0, 0 
0x0A2A	0x6F09      	MOVWF       conv_txt_L0+2, 1
;SLAVE FIRMWARE.c,85 :: 		lcd_out(x,7,txt);
0x0A2C	0xF112C106  	MOVFF       FARG_conv_x, FARG_Lcd_Out_row
0x0A30	0x0E07      	MOVLW       7
0x0A32	0x6F13      	MOVWF       FARG_Lcd_Out_column, 1
0x0A34	0x0E07      	MOVLW       conv_txt_L0
0x0A36	0x6F14      	MOVWF       FARG_Lcd_Out_text, 1
0x0A38	0x0E01      	MOVLW       hi_addr(conv_txt_L0)
0x0A3A	0x6F15      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0A3C	0xF000ECF9  	CALL        _Lcd_Out, 0
;SLAVE FIRMWARE.c,87 :: 		}
0x0A40	0x0012      	RETURN      0
; end of _conv
_clr:
;SLAVE FIRMWARE.c,47 :: 		void clr(){
;SLAVE FIRMWARE.c,48 :: 		memset(BUFFER, 0, 17);
0x0A42	0x0EF3      	MOVLW       _BUFFER
0x0A44	0x0101      	MOVLB       1
0x0A46	0x6F0D      	MOVWF       FARG_memset_p1, 1
0x0A48	0x0E00      	MOVLW       hi_addr(_BUFFER)
0x0A4A	0x6F0E      	MOVWF       FARG_memset_p1+1, 1
0x0A4C	0x6B0F      	CLRF        FARG_memset_character, 1
0x0A4E	0x0E11      	MOVLW       17
0x0A50	0x6F10      	MOVWF       FARG_memset_n, 1
0x0A52	0x0E00      	MOVLW       0
0x0A54	0x6F11      	MOVWF       FARG_memset_n+1, 1
0x0A56	0xDC97      	RCALL       _memset
;SLAVE FIRMWARE.c,49 :: 		}
0x0A58	0x0012      	RETURN      0
; end of _clr
_show_ip:
;SLAVE FIRMWARE.c,134 :: 		void show_ip(){
;SLAVE FIRMWARE.c,135 :: 		for(i=0;i<17;i++){
0x0A5A	0x6A40      	CLRF        _i 
0x0A5C	0x6A41      	CLRF        _i+1 
L_show_ip21:
0x0A5E	0x0E80      	MOVLW       128
0x0A60	0x1841      	XORWF       _i+1, 0 
0x0A62	0x6E00      	MOVWF       R0 
0x0A64	0x0E80      	MOVLW       128
0x0A66	0x5C00      	SUBWF       R0, 0 
0x0A68	0xE102      	BNZ         L__show_ip179
0x0A6A	0x0E11      	MOVLW       17
0x0A6C	0x5C40      	SUBWF       _i, 0 
L__show_ip179:
0x0A6E	0xE21B      	BC          L_show_ip22
;SLAVE FIRMWARE.c,136 :: 		if(Buffer[i] == 'A'){break;}
0x0A70	0x0EF3      	MOVLW       _BUFFER
0x0A72	0x2440      	ADDWF       _i, 0 
0x0A74	0x6EE9      	MOVWF       FSR0L 
0x0A76	0x0E00      	MOVLW       hi_addr(_BUFFER)
0x0A78	0x2041      	ADDWFC      _i+1, 0 
0x0A7A	0x6EEA      	MOVWF       FSR0H 
0x0A7C	0x50EE      	MOVF        POSTINC0, 0 
0x0A7E	0x0A41      	XORLW       65
0x0A80	0xE101      	BNZ         L_show_ip24
0x0A82	0xD011      	BRA         L_show_ip22
L_show_ip24:
;SLAVE FIRMWARE.c,137 :: 		hello[i]= BUFFER[i];
0x0A84	0x0EBF      	MOVLW       _hello
0x0A86	0x2440      	ADDWF       _i, 0 
0x0A88	0x6EE1      	MOVWF       FSR1L 
0x0A8A	0x0E00      	MOVLW       hi_addr(_hello)
0x0A8C	0x2041      	ADDWFC      _i+1, 0 
0x0A8E	0x6EE2      	MOVWF       FSR1H 
0x0A90	0x0EF3      	MOVLW       _BUFFER
0x0A92	0x2440      	ADDWF       _i, 0 
0x0A94	0x6EE9      	MOVWF       FSR0L 
0x0A96	0x0E00      	MOVLW       hi_addr(_BUFFER)
0x0A98	0x2041      	ADDWFC      _i+1, 0 
0x0A9A	0x6EEA      	MOVWF       FSR0H 
0x0A9C	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
;SLAVE FIRMWARE.c,135 :: 		for(i=0;i<17;i++){
0x0AA0	0x4A40      	INFSNZ      _i, 1 
0x0AA2	0x2A41      	INCF        _i+1, 1 
;SLAVE FIRMWARE.c,138 :: 		}
0x0AA4	0xD7DC      	BRA         L_show_ip21
L_show_ip22:
;SLAVE FIRMWARE.c,139 :: 		lcd_out(1,1,"This is IP:");
0x0AA6	0x0E01      	MOVLW       1
0x0AA8	0x0101      	MOVLB       1
0x0AAA	0x6F12      	MOVWF       FARG_Lcd_Out_row, 1
0x0AAC	0x0E01      	MOVLW       1
0x0AAE	0x6F13      	MOVWF       FARG_Lcd_Out_column, 1
0x0AB0	0x0E34      	MOVLW       ?lstr14_SLAVE_32FIRMWARE
0x0AB2	0x6F14      	MOVWF       FARG_Lcd_Out_text, 1
0x0AB4	0x0E00      	MOVLW       hi_addr(?lstr14_SLAVE_32FIRMWARE)
0x0AB6	0x6F15      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0AB8	0xF000ECF9  	CALL        _Lcd_Out, 0
;SLAVE FIRMWARE.c,140 :: 		lcd_out(2,1,hello);
0x0ABC	0x0E02      	MOVLW       2
0x0ABE	0x0101      	MOVLB       1
0x0AC0	0x6F12      	MOVWF       FARG_Lcd_Out_row, 1
0x0AC2	0x0E01      	MOVLW       1
0x0AC4	0x6F13      	MOVWF       FARG_Lcd_Out_column, 1
0x0AC6	0x0EBF      	MOVLW       _hello
0x0AC8	0x6F14      	MOVWF       FARG_Lcd_Out_text, 1
0x0ACA	0x0E00      	MOVLW       hi_addr(_hello)
0x0ACC	0x6F15      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0ACE	0xF000ECF9  	CALL        _Lcd_Out, 0
;SLAVE FIRMWARE.c,141 :: 		}
0x0AD2	0x0012      	RETURN      0
; end of _show_ip
_check_status:
;SLAVE FIRMWARE.c,142 :: 		void check_status(){
;SLAVE FIRMWARE.c,143 :: 		temp_res = ADC_Read(0)/2.048;
0x0AD4	0x0101      	MOVLB       1
0x0AD6	0x6B0D      	CLRF        FARG_ADC_Read_channel, 1
0x0AD8	0xDCF1      	RCALL       _ADC_Read
0x0ADA	0xDC73      	RCALL       _Word2Double
0x0ADC	0x0E6F      	MOVLW       111
0x0ADE	0x6E04      	MOVWF       R4 
0x0AE0	0x0E12      	MOVLW       18
0x0AE2	0x6E05      	MOVWF       R5 
0x0AE4	0x0E03      	MOVLW       3
0x0AE6	0x6E06      	MOVWF       R6 
0x0AE8	0x0E80      	MOVLW       128
0x0AEA	0x6E07      	MOVWF       R7 
0x0AEC	0xDD05      	RCALL       _Div_32x32_FP
0x0AEE	0xDC7D      	RCALL       _Double2Int
0x0AF0	0xF0F1C000  	MOVFF       R0, _temp_res
0x0AF4	0xF0F2C001  	MOVFF       R1, _temp_res+1
;SLAVE FIRMWARE.c,144 :: 		gas_int = (ADC_Read(1)/1023.)*200.;
0x0AF8	0x0E01      	MOVLW       1
0x0AFA	0x0101      	MOVLB       1
0x0AFC	0x6F0D      	MOVWF       FARG_ADC_Read_channel, 1
0x0AFE	0xDCDE      	RCALL       _ADC_Read
0x0B00	0xDC60      	RCALL       _Word2Double
0x0B02	0x0E00      	MOVLW       0
0x0B04	0x6E04      	MOVWF       R4 
0x0B06	0x0EC0      	MOVLW       192
0x0B08	0x6E05      	MOVWF       R5 
0x0B0A	0x0E7F      	MOVLW       127
0x0B0C	0x6E06      	MOVWF       R6 
0x0B0E	0x0E88      	MOVLW       136
0x0B10	0x6E07      	MOVWF       R7 
0x0B12	0xDCF2      	RCALL       _Div_32x32_FP
0x0B14	0x0E00      	MOVLW       0
0x0B16	0x6E04      	MOVWF       R4 
0x0B18	0x0E00      	MOVLW       0
0x0B1A	0x6E05      	MOVWF       R5 
0x0B1C	0x0E48      	MOVLW       72
0x0B1E	0x6E06      	MOVWF       R6 
0x0B20	0x0E86      	MOVLW       134
0x0B22	0x6E07      	MOVWF       R7 
0x0B24	0xDDBC      	RCALL       _Mul_32x32_FP
0x0B26	0xDC61      	RCALL       _Double2Int
0x0B28	0xF0EFC000  	MOVFF       R0, _gas_int
0x0B2C	0xF0F0C001  	MOVFF       R1, _gas_int+1
;SLAVE FIRMWARE.c,145 :: 		if(gas_int >= 100){
0x0B30	0x0E80      	MOVLW       128
0x0B32	0x1801      	XORWF       R1, 0 
0x0B34	0x6E02      	MOVWF       R2 
0x0B36	0x0E80      	MOVLW       128
0x0B38	0x5C02      	SUBWF       R2, 0 
0x0B3A	0xE102      	BNZ         L__check_status180
0x0B3C	0x0E64      	MOVLW       100
0x0B3E	0x5C00      	SUBWF       R0, 0 
L__check_status180:
0x0B40	0xE32F      	BNC         L_check_status25
;SLAVE FIRMWARE.c,146 :: 		GT();
0x0B42	0xDD94      	RCALL       _GT
;SLAVE FIRMWARE.c,147 :: 		delay_ms(100);
0x0B44	0x0E03      	MOVLW       3
0x0B46	0x6E0B      	MOVWF       R11, 0
0x0B48	0x0E08      	MOVLW       8
0x0B4A	0x6E0C      	MOVWF       R12, 0
0x0B4C	0x0E77      	MOVLW       119
0x0B4E	0x6E0D      	MOVWF       R13, 0
L_check_status26:
0x0B50	0x2E0D      	DECFSZ      R13, 1, 0
0x0B52	0xD7FE      	BRA         L_check_status26
0x0B54	0x2E0C      	DECFSZ      R12, 1, 0
0x0B56	0xD7FC      	BRA         L_check_status26
0x0B58	0x2E0B      	DECFSZ      R11, 1, 0
0x0B5A	0xD7FA      	BRA         L_check_status26
;SLAVE FIRMWARE.c,148 :: 		lcd_cmd(_lcd_clear);
0x0B5C	0x0E01      	MOVLW       1
0x0B5E	0x0101      	MOVLB       1
0x0B60	0x6F18      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0B62	0xF000EC48  	CALL        _Lcd_Cmd, 0
;SLAVE FIRMWARE.c,149 :: 		lcd_out(1,1,"HIGH GAS INTENS");
0x0B66	0x0E01      	MOVLW       1
0x0B68	0x0101      	MOVLB       1
0x0B6A	0x6F12      	MOVWF       FARG_Lcd_Out_row, 1
0x0B6C	0x0E01      	MOVLW       1
0x0B6E	0x6F13      	MOVWF       FARG_Lcd_Out_column, 1
0x0B70	0x0E9F      	MOVLW       ?lstr15_SLAVE_32FIRMWARE
0x0B72	0x6F14      	MOVWF       FARG_Lcd_Out_text, 1
0x0B74	0x0E00      	MOVLW       hi_addr(?lstr15_SLAVE_32FIRMWARE)
0x0B76	0x6F15      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0B78	0xF000ECF9  	CALL        _Lcd_Out, 0
;SLAVE FIRMWARE.c,150 :: 		delay_ms(1000);
0x0B7C	0x0E15      	MOVLW       21
0x0B7E	0x6E0B      	MOVWF       R11, 0
0x0B80	0x0E4B      	MOVLW       75
0x0B82	0x6E0C      	MOVWF       R12, 0
0x0B84	0x0EBE      	MOVLW       190
0x0B86	0x6E0D      	MOVWF       R13, 0
L_check_status27:
0x0B88	0x2E0D      	DECFSZ      R13, 1, 0
0x0B8A	0xD7FE      	BRA         L_check_status27
0x0B8C	0x2E0C      	DECFSZ      R12, 1, 0
0x0B8E	0xD7FC      	BRA         L_check_status27
0x0B90	0x2E0B      	DECFSZ      R11, 1, 0
0x0B92	0xD7FA      	BRA         L_check_status27
0x0B94	0x0000      	NOP
;SLAVE FIRMWARE.c,151 :: 		lcd_cmd(_lcd_clear);
0x0B96	0x0E01      	MOVLW       1
0x0B98	0x0101      	MOVLB       1
0x0B9A	0x6F18      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0B9C	0xF000EC48  	CALL        _Lcd_Cmd, 0
;SLAVE FIRMWARE.c,152 :: 		}
L_check_status25:
0x0BA0	0x0100      	MOVLB       0
;SLAVE FIRMWARE.c,153 :: 		if(temp_res >= 40){
0x0BA2	0x0E80      	MOVLW       128
0x0BA4	0x19F2      	XORWF       _temp_res+1, 0, 1
0x0BA6	0x6E00      	MOVWF       R0 
0x0BA8	0x0E80      	MOVLW       128
0x0BAA	0x5C00      	SUBWF       R0, 0 
0x0BAC	0xE102      	BNZ         L__check_status181
0x0BAE	0x0E28      	MOVLW       40
0x0BB0	0x5DF1      	SUBWF       _temp_res, 0, 1
L__check_status181:
0x0BB2	0xE32F      	BNC         L_check_status28
;SLAVE FIRMWARE.c,154 :: 		GT();
0x0BB4	0xDD5B      	RCALL       _GT
;SLAVE FIRMWARE.c,155 :: 		delay_ms(100);
0x0BB6	0x0E03      	MOVLW       3
0x0BB8	0x6E0B      	MOVWF       R11, 0
0x0BBA	0x0E08      	MOVLW       8
0x0BBC	0x6E0C      	MOVWF       R12, 0
0x0BBE	0x0E77      	MOVLW       119
0x0BC0	0x6E0D      	MOVWF       R13, 0
L_check_status29:
0x0BC2	0x2E0D      	DECFSZ      R13, 1, 0
0x0BC4	0xD7FE      	BRA         L_check_status29
0x0BC6	0x2E0C      	DECFSZ      R12, 1, 0
0x0BC8	0xD7FC      	BRA         L_check_status29
0x0BCA	0x2E0B      	DECFSZ      R11, 1, 0
0x0BCC	0xD7FA      	BRA         L_check_status29
;SLAVE FIRMWARE.c,156 :: 		lcd_cmd(_lcd_clear);
0x0BCE	0x0E01      	MOVLW       1
0x0BD0	0x0101      	MOVLB       1
0x0BD2	0x6F18      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0BD4	0xF000EC48  	CALL        _Lcd_Cmd, 0
;SLAVE FIRMWARE.c,157 :: 		lcd_out(1,1,"HIGH TEMP");
0x0BD8	0x0E01      	MOVLW       1
0x0BDA	0x0101      	MOVLB       1
0x0BDC	0x6F12      	MOVWF       FARG_Lcd_Out_row, 1
0x0BDE	0x0E01      	MOVLW       1
0x0BE0	0x6F13      	MOVWF       FARG_Lcd_Out_column, 1
0x0BE2	0x0EB5      	MOVLW       ?lstr16_SLAVE_32FIRMWARE
0x0BE4	0x6F14      	MOVWF       FARG_Lcd_Out_text, 1
0x0BE6	0x0E00      	MOVLW       hi_addr(?lstr16_SLAVE_32FIRMWARE)
0x0BE8	0x6F15      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0BEA	0xF000ECF9  	CALL        _Lcd_Out, 0
;SLAVE FIRMWARE.c,158 :: 		delay_ms(1000);
0x0BEE	0x0E15      	MOVLW       21
0x0BF0	0x6E0B      	MOVWF       R11, 0
0x0BF2	0x0E4B      	MOVLW       75
0x0BF4	0x6E0C      	MOVWF       R12, 0
0x0BF6	0x0EBE      	MOVLW       190
0x0BF8	0x6E0D      	MOVWF       R13, 0
L_check_status30:
0x0BFA	0x2E0D      	DECFSZ      R13, 1, 0
0x0BFC	0xD7FE      	BRA         L_check_status30
0x0BFE	0x2E0C      	DECFSZ      R12, 1, 0
0x0C00	0xD7FC      	BRA         L_check_status30
0x0C02	0x2E0B      	DECFSZ      R11, 1, 0
0x0C04	0xD7FA      	BRA         L_check_status30
0x0C06	0x0000      	NOP
;SLAVE FIRMWARE.c,159 :: 		lcd_cmd(_lcd_clear);
0x0C08	0x0E01      	MOVLW       1
0x0C0A	0x0101      	MOVLB       1
0x0C0C	0x6F18      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0C0E	0xF000EC48  	CALL        _Lcd_Cmd, 0
;SLAVE FIRMWARE.c,160 :: 		}
L_check_status28:
;SLAVE FIRMWARE.c,161 :: 		}
0x0C12	0x0012      	RETURN      0
; end of _check_status
_to_send:
;SLAVE FIRMWARE.c,124 :: 		void to_send(char x){
;SLAVE FIRMWARE.c,125 :: 		for(i = 0; i < 11; i++){
0x0C14	0x6A40      	CLRF        _i 
0x0C16	0x6A41      	CLRF        _i+1 
L_to_send14:
0x0C18	0x0E80      	MOVLW       128
0x0C1A	0x1841      	XORWF       _i+1, 0 
0x0C1C	0x6E00      	MOVWF       R0 
0x0C1E	0x0E80      	MOVLW       128
0x0C20	0x5C00      	SUBWF       R0, 0 
0x0C22	0xE102      	BNZ         L__to_send176
0x0C24	0x0E0B      	MOVLW       11
0x0C26	0x5C40      	SUBWF       _i, 0 
L__to_send176:
0x0C28	0xE22C      	BC          L_to_send15
;SLAVE FIRMWARE.c,126 :: 		if(i == 9){tosend[i] = x;continue;}
0x0C2A	0x0E00      	MOVLW       0
0x0C2C	0x1841      	XORWF       _i+1, 0 
0x0C2E	0xE102      	BNZ         L__to_send177
0x0C30	0x0E09      	MOVLW       9
0x0C32	0x1840      	XORWF       _i, 0 
L__to_send177:
0x0C34	0xE109      	BNZ         L_to_send17
0x0C36	0x0EE5      	MOVLW       _tosend
0x0C38	0x2440      	ADDWF       _i, 0 
0x0C3A	0x6EE1      	MOVWF       FSR1L 
0x0C3C	0x0E00      	MOVLW       hi_addr(_tosend)
0x0C3E	0x2041      	ADDWFC      _i+1, 0 
0x0C40	0x6EE2      	MOVWF       FSR1H 
0x0C42	0xFFE6C104  	MOVFF       FARG_to_send_x, POSTINC1
0x0C46	0xD01A      	BRA         L_to_send16
L_to_send17:
;SLAVE FIRMWARE.c,127 :: 		else if(i == 10 ){tosend[i] = 'B';}
0x0C48	0x0E00      	MOVLW       0
0x0C4A	0x1841      	XORWF       _i+1, 0 
0x0C4C	0xE102      	BNZ         L__to_send178
0x0C4E	0x0E0A      	MOVLW       10
0x0C50	0x1840      	XORWF       _i, 0 
L__to_send178:
0x0C52	0xE109      	BNZ         L_to_send19
0x0C54	0x0EE5      	MOVLW       _tosend
0x0C56	0x2440      	ADDWF       _i, 0 
0x0C58	0x6EE1      	MOVWF       FSR1L 
0x0C5A	0x0E00      	MOVLW       hi_addr(_tosend)
0x0C5C	0x2041      	ADDWFC      _i+1, 0 
0x0C5E	0x6EE2      	MOVWF       FSR1H 
0x0C60	0x0E42      	MOVLW       66
0x0C62	0x6EE6      	MOVWF       POSTINC1 
0x0C64	0xD00B      	BRA         L_to_send20
L_to_send19:
;SLAVE FIRMWARE.c,128 :: 		else{tosend[i] = i+48;}
0x0C66	0x0EE5      	MOVLW       _tosend
0x0C68	0x2440      	ADDWF       _i, 0 
0x0C6A	0x6EE1      	MOVWF       FSR1L 
0x0C6C	0x0E00      	MOVLW       hi_addr(_tosend)
0x0C6E	0x2041      	ADDWFC      _i+1, 0 
0x0C70	0x6EE2      	MOVWF       FSR1H 
0x0C72	0x0E30      	MOVLW       48
0x0C74	0x2440      	ADDWF       _i, 0 
0x0C76	0x6E00      	MOVWF       R0 
0x0C78	0xFFE6C000  	MOVFF       R0, POSTINC1
L_to_send20:
;SLAVE FIRMWARE.c,129 :: 		}
L_to_send16:
;SLAVE FIRMWARE.c,125 :: 		for(i = 0; i < 11; i++){
0x0C7C	0x4A40      	INFSNZ      _i, 1 
0x0C7E	0x2A41      	INCF        _i+1, 1 
;SLAVE FIRMWARE.c,129 :: 		}
0x0C80	0xD7CB      	BRA         L_to_send14
L_to_send15:
;SLAVE FIRMWARE.c,130 :: 		rcen_bit=0;
0x0C82	0x96C5      	BCF         RCEN_bit, 3 
;SLAVE FIRMWARE.c,131 :: 		UART1_WRITE_TEXT(tosend);
0x0C84	0x0EE5      	MOVLW       _tosend
0x0C86	0x0101      	MOVLB       1
0x0C88	0x6F0D      	MOVWF       FARG_UART1_Write_Text_uart_text, 1
0x0C8A	0x0E00      	MOVLW       hi_addr(_tosend)
0x0C8C	0x6F0E      	MOVWF       FARG_UART1_Write_Text_uart_text+1, 1
0x0C8E	0xF001EC5C  	CALL        _UART1_Write_Text, 0
;SLAVE FIRMWARE.c,132 :: 		rcen_bit=1;
0x0C92	0x86C5      	BSF         RCEN_bit, 3 
;SLAVE FIRMWARE.c,133 :: 		}
0x0C94	0x0012      	RETURN      0
; end of _to_send
_disp_status:
;SLAVE FIRMWARE.c,89 :: 		void disp_status(){
;SLAVE FIRMWARE.c,90 :: 		lcd_out(1,1,"R1 R2 R3 R4 R5");
0x0C96	0x0E01      	MOVLW       1
0x0C98	0x0101      	MOVLB       1
0x0C9A	0x6F12      	MOVWF       FARG_Lcd_Out_row, 1
0x0C9C	0x0E01      	MOVLW       1
0x0C9E	0x6F13      	MOVWF       FARG_Lcd_Out_column, 1
0x0CA0	0x0E42      	MOVLW       ?lstr3_SLAVE_32FIRMWARE
0x0CA2	0x6F14      	MOVWF       FARG_Lcd_Out_text, 1
0x0CA4	0x0E00      	MOVLW       hi_addr(?lstr3_SLAVE_32FIRMWARE)
0x0CA6	0x6F15      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0CA8	0xF000ECF9  	CALL        _Lcd_Out, 0
;SLAVE FIRMWARE.c,91 :: 		if(state.f0 == 0){
0x0CAC	0xB058      	BTFSC       _state, 0 
0x0CAE	0xD00C      	BRA         L_disp_status4
;SLAVE FIRMWARE.c,92 :: 		lcd_out(2,1,"OFF");
0x0CB0	0x0E02      	MOVLW       2
0x0CB2	0x0101      	MOVLB       1
0x0CB4	0x6F12      	MOVWF       FARG_Lcd_Out_row, 1
0x0CB6	0x0E01      	MOVLW       1
0x0CB8	0x6F13      	MOVWF       FARG_Lcd_Out_column, 1
0x0CBA	0x0E54      	MOVLW       ?lstr4_SLAVE_32FIRMWARE
0x0CBC	0x6F14      	MOVWF       FARG_Lcd_Out_text, 1
0x0CBE	0x0E00      	MOVLW       hi_addr(?lstr4_SLAVE_32FIRMWARE)
0x0CC0	0x6F15      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0CC2	0xF000ECF9  	CALL        _Lcd_Out, 0
;SLAVE FIRMWARE.c,93 :: 		}
0x0CC6	0xD00B      	BRA         L_disp_status5
L_disp_status4:
;SLAVE FIRMWARE.c,95 :: 		lcd_out(2,1,"ON");
0x0CC8	0x0E02      	MOVLW       2
0x0CCA	0x0101      	MOVLB       1
0x0CCC	0x6F12      	MOVWF       FARG_Lcd_Out_row, 1
0x0CCE	0x0E01      	MOVLW       1
0x0CD0	0x6F13      	MOVWF       FARG_Lcd_Out_column, 1
0x0CD2	0x0E51      	MOVLW       ?lstr5_SLAVE_32FIRMWARE
0x0CD4	0x6F14      	MOVWF       FARG_Lcd_Out_text, 1
0x0CD6	0x0E00      	MOVLW       hi_addr(?lstr5_SLAVE_32FIRMWARE)
0x0CD8	0x6F15      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0CDA	0xF000ECF9  	CALL        _Lcd_Out, 0
;SLAVE FIRMWARE.c,96 :: 		}
L_disp_status5:
;SLAVE FIRMWARE.c,98 :: 		if(state.f1 == 0){
0x0CDE	0xB258      	BTFSC       _state, 1 
0x0CE0	0xD00C      	BRA         L_disp_status6
;SLAVE FIRMWARE.c,99 :: 		lcd_out(2,4,"OFF");
0x0CE2	0x0E02      	MOVLW       2
0x0CE4	0x0101      	MOVLB       1
0x0CE6	0x6F12      	MOVWF       FARG_Lcd_Out_row, 1
0x0CE8	0x0E04      	MOVLW       4
0x0CEA	0x6F13      	MOVWF       FARG_Lcd_Out_column, 1
0x0CEC	0x0E22      	MOVLW       ?lstr6_SLAVE_32FIRMWARE
0x0CEE	0x6F14      	MOVWF       FARG_Lcd_Out_text, 1
0x0CF0	0x0E00      	MOVLW       hi_addr(?lstr6_SLAVE_32FIRMWARE)
0x0CF2	0x6F15      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0CF4	0xF000ECF9  	CALL        _Lcd_Out, 0
;SLAVE FIRMWARE.c,100 :: 		}
0x0CF8	0xD00B      	BRA         L_disp_status7
L_disp_status6:
;SLAVE FIRMWARE.c,102 :: 		lcd_out(2,4,"ON");
0x0CFA	0x0E02      	MOVLW       2
0x0CFC	0x0101      	MOVLB       1
0x0CFE	0x6F12      	MOVWF       FARG_Lcd_Out_row, 1
0x0D00	0x0E04      	MOVLW       4
0x0D02	0x6F13      	MOVWF       FARG_Lcd_Out_column, 1
0x0D04	0x0E1F      	MOVLW       ?lstr7_SLAVE_32FIRMWARE
0x0D06	0x6F14      	MOVWF       FARG_Lcd_Out_text, 1
0x0D08	0x0E00      	MOVLW       hi_addr(?lstr7_SLAVE_32FIRMWARE)
0x0D0A	0x6F15      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0D0C	0xF000ECF9  	CALL        _Lcd_Out, 0
;SLAVE FIRMWARE.c,103 :: 		}
L_disp_status7:
;SLAVE FIRMWARE.c,105 :: 		if(state.f2 == 0){
0x0D10	0xB458      	BTFSC       _state, 2 
0x0D12	0xD00C      	BRA         L_disp_status8
;SLAVE FIRMWARE.c,106 :: 		lcd_out(2,7,"OFF");
0x0D14	0x0E02      	MOVLW       2
0x0D16	0x0101      	MOVLB       1
0x0D18	0x6F12      	MOVWF       FARG_Lcd_Out_row, 1
0x0D1A	0x0E07      	MOVLW       7
0x0D1C	0x6F13      	MOVWF       FARG_Lcd_Out_column, 1
0x0D1E	0x0E1B      	MOVLW       ?lstr8_SLAVE_32FIRMWARE
0x0D20	0x6F14      	MOVWF       FARG_Lcd_Out_text, 1
0x0D22	0x0E00      	MOVLW       hi_addr(?lstr8_SLAVE_32FIRMWARE)
0x0D24	0x6F15      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0D26	0xF000ECF9  	CALL        _Lcd_Out, 0
;SLAVE FIRMWARE.c,107 :: 		}
0x0D2A	0xD00B      	BRA         L_disp_status9
L_disp_status8:
;SLAVE FIRMWARE.c,109 :: 		lcd_out(2,7,"ON");
0x0D2C	0x0E02      	MOVLW       2
0x0D2E	0x0101      	MOVLB       1
0x0D30	0x6F12      	MOVWF       FARG_Lcd_Out_row, 1
0x0D32	0x0E07      	MOVLW       7
0x0D34	0x6F13      	MOVWF       FARG_Lcd_Out_column, 1
0x0D36	0x0E26      	MOVLW       ?lstr9_SLAVE_32FIRMWARE
0x0D38	0x6F14      	MOVWF       FARG_Lcd_Out_text, 1
0x0D3A	0x0E00      	MOVLW       hi_addr(?lstr9_SLAVE_32FIRMWARE)
0x0D3C	0x6F15      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0D3E	0xF000ECF9  	CALL        _Lcd_Out, 0
;SLAVE FIRMWARE.c,110 :: 		}
L_disp_status9:
;SLAVE FIRMWARE.c,111 :: 		if(state.f3 == 0){
0x0D42	0xB658      	BTFSC       _state, 3 
0x0D44	0xD00C      	BRA         L_disp_status10
;SLAVE FIRMWARE.c,112 :: 		lcd_out(2,10,"OFF");
0x0D46	0x0E02      	MOVLW       2
0x0D48	0x0101      	MOVLB       1
0x0D4A	0x6F12      	MOVWF       FARG_Lcd_Out_row, 1
0x0D4C	0x0E0A      	MOVLW       10
0x0D4E	0x6F13      	MOVWF       FARG_Lcd_Out_column, 1
0x0D50	0x0E30      	MOVLW       ?lstr10_SLAVE_32FIRMWARE
0x0D52	0x6F14      	MOVWF       FARG_Lcd_Out_text, 1
0x0D54	0x0E00      	MOVLW       hi_addr(?lstr10_SLAVE_32FIRMWARE)
0x0D56	0x6F15      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0D58	0xF000ECF9  	CALL        _Lcd_Out, 0
;SLAVE FIRMWARE.c,113 :: 		}
0x0D5C	0xD00B      	BRA         L_disp_status11
L_disp_status10:
;SLAVE FIRMWARE.c,115 :: 		lcd_out(2,10,"ON");
0x0D5E	0x0E02      	MOVLW       2
0x0D60	0x0101      	MOVLB       1
0x0D62	0x6F12      	MOVWF       FARG_Lcd_Out_row, 1
0x0D64	0x0E0A      	MOVLW       10
0x0D66	0x6F13      	MOVWF       FARG_Lcd_Out_column, 1
0x0D68	0x0E2D      	MOVLW       ?lstr11_SLAVE_32FIRMWARE
0x0D6A	0x6F14      	MOVWF       FARG_Lcd_Out_text, 1
0x0D6C	0x0E00      	MOVLW       hi_addr(?lstr11_SLAVE_32FIRMWARE)
0x0D6E	0x6F15      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0D70	0xF000ECF9  	CALL        _Lcd_Out, 0
;SLAVE FIRMWARE.c,116 :: 		}
L_disp_status11:
;SLAVE FIRMWARE.c,117 :: 		if(state.f4 == 0){
0x0D74	0xB858      	BTFSC       _state, 4 
0x0D76	0xD00C      	BRA         L_disp_status12
;SLAVE FIRMWARE.c,118 :: 		lcd_out(2,13,"OFF");
0x0D78	0x0E02      	MOVLW       2
0x0D7A	0x0101      	MOVLB       1
0x0D7C	0x6F12      	MOVWF       FARG_Lcd_Out_row, 1
0x0D7E	0x0E0D      	MOVLW       13
0x0D80	0x6F13      	MOVWF       FARG_Lcd_Out_column, 1
0x0D82	0x0E29      	MOVLW       ?lstr12_SLAVE_32FIRMWARE
0x0D84	0x6F14      	MOVWF       FARG_Lcd_Out_text, 1
0x0D86	0x0E00      	MOVLW       hi_addr(?lstr12_SLAVE_32FIRMWARE)
0x0D88	0x6F15      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0D8A	0xF000ECF9  	CALL        _Lcd_Out, 0
;SLAVE FIRMWARE.c,119 :: 		}
0x0D8E	0xD00B      	BRA         L_disp_status13
L_disp_status12:
;SLAVE FIRMWARE.c,121 :: 		lcd_out(2,13,"ON");
0x0D90	0x0E02      	MOVLW       2
0x0D92	0x0101      	MOVLB       1
0x0D94	0x6F12      	MOVWF       FARG_Lcd_Out_row, 1
0x0D96	0x0E0D      	MOVLW       13
0x0D98	0x6F13      	MOVWF       FARG_Lcd_Out_column, 1
0x0D9A	0x0E59      	MOVLW       ?lstr13_SLAVE_32FIRMWARE
0x0D9C	0x6F14      	MOVWF       FARG_Lcd_Out_text, 1
0x0D9E	0x0E00      	MOVLW       hi_addr(?lstr13_SLAVE_32FIRMWARE)
0x0DA0	0x6F15      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0DA2	0xF000ECF9  	CALL        _Lcd_Out, 0
;SLAVE FIRMWARE.c,122 :: 		}
L_disp_status13:
;SLAVE FIRMWARE.c,123 :: 		}
0x0DA6	0x0012      	RETURN      0
; end of _disp_status
_main:
0x0DA8	0xF00AEC7C  	CALL        5368, 0
;SLAVE FIRMWARE.c,180 :: 		void main() {
;SLAVE FIRMWARE.c,183 :: 		ADCON1= 0x04;
0x0DAC	0x0E04      	MOVLW       4
0x0DAE	0x6EC1      	MOVWF       ADCON1 
;SLAVE FIRMWARE.c,184 :: 		ADC_INIT();
0x0DB0	0xDD74      	RCALL       _ADC_Init
;SLAVE FIRMWARE.c,190 :: 		TRISB = 0x00;
0x0DB2	0x6A93      	CLRF        TRISB 
;SLAVE FIRMWARE.c,191 :: 		TRISA = 0x3B;
0x0DB4	0x0E3B      	MOVLW       59
0x0DB6	0x6E92      	MOVWF       TRISA 
;SLAVE FIRMWARE.c,192 :: 		TRISC = 0x87;
0x0DB8	0x0E87      	MOVLW       135
0x0DBA	0x6E94      	MOVWF       TRISC 
;SLAVE FIRMWARE.c,197 :: 		Lcd_Init();
0x0DBC	0xDD7E      	RCALL       _Lcd_Init
;SLAVE FIRMWARE.c,198 :: 		Lcd_Cmd(_LCD_CLEAR);               // Clear display
0x0DBE	0x0E01      	MOVLW       1
0x0DC0	0x0101      	MOVLB       1
0x0DC2	0x6F18      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0DC4	0xF000EC48  	CALL        _Lcd_Cmd, 0
;SLAVE FIRMWARE.c,199 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);          // Cursor off
0x0DC8	0x0E0C      	MOVLW       12
0x0DCA	0x0101      	MOVLB       1
0x0DCC	0x6F18      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0DCE	0xF000EC48  	CALL        _Lcd_Cmd, 0
;SLAVE FIRMWARE.c,200 :: 		Lcd_Out(1,1,"SmartRoom ....");
0x0DD2	0x0E01      	MOVLW       1
0x0DD4	0x0101      	MOVLB       1
0x0DD6	0x6F12      	MOVWF       FARG_Lcd_Out_row, 1
0x0DD8	0x0E01      	MOVLW       1
0x0DDA	0x6F13      	MOVWF       FARG_Lcd_Out_column, 1
0x0DDC	0x0E7E      	MOVLW       ?lstr17_SLAVE_32FIRMWARE
0x0DDE	0x6F14      	MOVWF       FARG_Lcd_Out_text, 1
0x0DE0	0x0E00      	MOVLW       hi_addr(?lstr17_SLAVE_32FIRMWARE)
0x0DE2	0x6F15      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0DE4	0xF000ECF9  	CALL        _Lcd_Out, 0
;SLAVE FIRMWARE.c,201 :: 		Lcd_Out(2,3,"DESGINED BY: ** AHMED MAHDY ** ");
0x0DE8	0x0E02      	MOVLW       2
0x0DEA	0x0101      	MOVLB       1
0x0DEC	0x6F12      	MOVWF       FARG_Lcd_Out_row, 1
0x0DEE	0x0E03      	MOVLW       3
0x0DF0	0x6F13      	MOVWF       FARG_Lcd_Out_column, 1
0x0DF2	0x0E5E      	MOVLW       ?lstr18_SLAVE_32FIRMWARE
0x0DF4	0x6F14      	MOVWF       FARG_Lcd_Out_text, 1
0x0DF6	0x0E00      	MOVLW       hi_addr(?lstr18_SLAVE_32FIRMWARE)
0x0DF8	0x6F15      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0DFA	0xF000ECF9  	CALL        _Lcd_Out, 0
;SLAVE FIRMWARE.c,202 :: 		delay_ms(100);
0x0DFE	0x0E03      	MOVLW       3
0x0E00	0x6E0B      	MOVWF       R11, 0
0x0E02	0x0E08      	MOVLW       8
0x0E04	0x6E0C      	MOVWF       R12, 0
0x0E06	0x0E77      	MOVLW       119
0x0E08	0x6E0D      	MOVWF       R13, 0
L_main38:
0x0E0A	0x2E0D      	DECFSZ      R13, 1, 0
0x0E0C	0xD7FE      	BRA         L_main38
0x0E0E	0x2E0C      	DECFSZ      R12, 1, 0
0x0E10	0xD7FC      	BRA         L_main38
0x0E12	0x2E0B      	DECFSZ      R11, 1, 0
0x0E14	0xD7FA      	BRA         L_main38
;SLAVE FIRMWARE.c,203 :: 		for(i=0; i<20; i++) {
0x0E16	0x6A40      	CLRF        _i 
0x0E18	0x6A41      	CLRF        _i+1 
L_main39:
0x0E1A	0x0E80      	MOVLW       128
0x0E1C	0x1841      	XORWF       _i+1, 0 
0x0E1E	0x6E00      	MOVWF       R0 
0x0E20	0x0E80      	MOVLW       128
0x0E22	0x5C00      	SUBWF       R0, 0 
0x0E24	0xE102      	BNZ         L__main183
0x0E26	0x0E14      	MOVLW       20
0x0E28	0x5C40      	SUBWF       _i, 0 
L__main183:
0x0E2A	0xE215      	BC          L_main40
;SLAVE FIRMWARE.c,204 :: 		Lcd_Cmd(_LCD_SHIFT_LEFT);
0x0E2C	0x0E18      	MOVLW       24
0x0E2E	0x0101      	MOVLB       1
0x0E30	0x6F18      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0E32	0xF000EC48  	CALL        _Lcd_Cmd, 0
;SLAVE FIRMWARE.c,205 :: 		delay_MS(400);
0x0E36	0x0E09      	MOVLW       9
0x0E38	0x6E0B      	MOVWF       R11, 0
0x0E3A	0x0E1E      	MOVLW       30
0x0E3C	0x6E0C      	MOVWF       R12, 0
0x0E3E	0x0EE4      	MOVLW       228
0x0E40	0x6E0D      	MOVWF       R13, 0
L_main42:
0x0E42	0x2E0D      	DECFSZ      R13, 1, 0
0x0E44	0xD7FE      	BRA         L_main42
0x0E46	0x2E0C      	DECFSZ      R12, 1, 0
0x0E48	0xD7FC      	BRA         L_main42
0x0E4A	0x2E0B      	DECFSZ      R11, 1, 0
0x0E4C	0xD7FA      	BRA         L_main42
0x0E4E	0x0000      	NOP
;SLAVE FIRMWARE.c,203 :: 		for(i=0; i<20; i++) {
0x0E50	0x4A40      	INFSNZ      _i, 1 
0x0E52	0x2A41      	INCF        _i+1, 1 
;SLAVE FIRMWARE.c,206 :: 		}
0x0E54	0xD7E2      	BRA         L_main39
L_main40:
;SLAVE FIRMWARE.c,207 :: 		play();
0x0E56	0xDCD6      	RCALL       _play
;SLAVE FIRMWARE.c,208 :: 		delay_ms(10);
0x0E58	0x0E34      	MOVLW       52
0x0E5A	0x6E0C      	MOVWF       R12, 0
0x0E5C	0x0EF1      	MOVLW       241
0x0E5E	0x6E0D      	MOVWF       R13, 0
L_main43:
0x0E60	0x2E0D      	DECFSZ      R13, 1, 0
0x0E62	0xD7FE      	BRA         L_main43
0x0E64	0x2E0C      	DECFSZ      R12, 1, 0
0x0E66	0xD7FC      	BRA         L_main43
0x0E68	0x0000      	NOP
0x0E6A	0x0000      	NOP
;SLAVE FIRMWARE.c,210 :: 		lcd_cmd(_lcd_clear);
0x0E6C	0x0E01      	MOVLW       1
0x0E6E	0x0101      	MOVLB       1
0x0E70	0x6F18      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0E72	0xF000EC48  	CALL        _Lcd_Cmd, 0
;SLAVE FIRMWARE.c,216 :: 		UART1_Init(9600);               // Initialize UART module at 9600 bps
0x0E76	0x0E67      	MOVLW       103
0x0E78	0x6EAF      	MOVWF       SPBRG 
0x0E7A	0x84AC      	BSF         TXSTA, 2, 0
0x0E7C	0xDCE2      	RCALL       _UART1_Init
;SLAVE FIRMWARE.c,217 :: 		Delay_ms(100);            // Wait for UART module to stabilize
0x0E7E	0x0E03      	MOVLW       3
0x0E80	0x6E0B      	MOVWF       R11, 0
0x0E82	0x0E08      	MOVLW       8
0x0E84	0x6E0C      	MOVWF       R12, 0
0x0E86	0x0E77      	MOVLW       119
0x0E88	0x6E0D      	MOVWF       R13, 0
L_main44:
0x0E8A	0x2E0D      	DECFSZ      R13, 1, 0
0x0E8C	0xD7FE      	BRA         L_main44
0x0E8E	0x2E0C      	DECFSZ      R12, 1, 0
0x0E90	0xD7FC      	BRA         L_main44
0x0E92	0x2E0B      	DECFSZ      R11, 1, 0
0x0E94	0xD7FA      	BRA         L_main44
;SLAVE FIRMWARE.c,222 :: 		TMR0L= 0;
0x0E96	0x6AD6      	CLRF        TMR0L 
;SLAVE FIRMWARE.c,223 :: 		INTCON =  0xA0;
0x0E98	0x0EA0      	MOVLW       160
0x0E9A	0x6EF2      	MOVWF       INTCON 
;SLAVE FIRMWARE.c,224 :: 		T0CON = 0xC8;
0x0E9C	0x0EC8      	MOVLW       200
0x0E9E	0x6ED5      	MOVWF       T0CON 
;SLAVE FIRMWARE.c,225 :: 		state.f5 = 0;
0x0EA0	0x9A58      	BCF         _state, 5 
;SLAVE FIRMWARE.c,226 :: 		state.f6 = 0;
0x0EA2	0x9C58      	BCF         _state, 6 
;SLAVE FIRMWARE.c,227 :: 		delay_Ms(200);
0x0EA4	0x0E05      	MOVLW       5
0x0EA6	0x6E0B      	MOVWF       R11, 0
0x0EA8	0x0E0F      	MOVLW       15
0x0EAA	0x6E0C      	MOVWF       R12, 0
0x0EAC	0x0EF1      	MOVLW       241
0x0EAE	0x6E0D      	MOVWF       R13, 0
L_main45:
0x0EB0	0x2E0D      	DECFSZ      R13, 1, 0
0x0EB2	0xD7FE      	BRA         L_main45
0x0EB4	0x2E0C      	DECFSZ      R12, 1, 0
0x0EB6	0xD7FC      	BRA         L_main45
0x0EB8	0x2E0B      	DECFSZ      R11, 1, 0
0x0EBA	0xD7FA      	BRA         L_main45
;SLAVE FIRMWARE.c,233 :: 		while(1){
L_main46:
;SLAVE FIRMWARE.c,241 :: 		check_status();
0x0EBC	0xDE0B      	RCALL       _check_status
;SLAVE FIRMWARE.c,246 :: 		if(((BUFFER[12] == 'A')||(BUFFER[13] == 'A')||(BUFFER[14] == 'A')||(BUFFER[15] == 'A')) && (state.f5 ==  0)) {
0x0EBE	0x51FF      	MOVF        _BUFFER+12, 0, 1
0x0EC0	0x0A41      	XORLW       65
0x0EC2	0xE00B      	BZ          L__main175
0x0EC4	0x0101      	MOVLB       1
0x0EC6	0x5100      	MOVF        _BUFFER+13, 0, 1
0x0EC8	0x0A41      	XORLW       65
0x0ECA	0xE007      	BZ          L__main175
0x0ECC	0x5101      	MOVF        _BUFFER+14, 0, 1
0x0ECE	0x0A41      	XORLW       65
0x0ED0	0xE004      	BZ          L__main175
0x0ED2	0x5102      	MOVF        _BUFFER+15, 0, 1
0x0ED4	0x0A41      	XORLW       65
0x0ED6	0xE001      	BZ          L__main175
0x0ED8	0xD04B      	BRA         L_main52
L__main175:
0x0EDA	0xBA58      	BTFSC       _state, 5 
0x0EDC	0xD049      	BRA         L_main52
L__main174:
0x0EDE	0x0101      	MOVLB       1
;SLAVE FIRMWARE.c,247 :: 		lcd_cmd(_lcd_clear);
0x0EE0	0x0E01      	MOVLW       1
0x0EE2	0x6F18      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0EE4	0xF000EC48  	CALL        _Lcd_Cmd, 0
;SLAVE FIRMWARE.c,248 :: 		delay_ms(10);
0x0EE8	0x0E34      	MOVLW       52
0x0EEA	0x6E0C      	MOVWF       R12, 0
0x0EEC	0x0EF1      	MOVLW       241
0x0EEE	0x6E0D      	MOVWF       R13, 0
L_main53:
0x0EF0	0x2E0D      	DECFSZ      R13, 1, 0
0x0EF2	0xD7FE      	BRA         L_main53
0x0EF4	0x2E0C      	DECFSZ      R12, 1, 0
0x0EF6	0xD7FC      	BRA         L_main53
0x0EF8	0x0000      	NOP
0x0EFA	0x0000      	NOP
;SLAVE FIRMWARE.c,249 :: 		if(((BUFFER[12] == 'A')||(BUFFER[13] == 'A')||(BUFFER[14] == 'A')||(BUFFER[15] == 'A')) && (state.f5 ==  0)){
0x0EFC	0x51FF      	MOVF        _BUFFER+12, 0, 1
0x0EFE	0x0A41      	XORLW       65
0x0F00	0xE00B      	BZ          L__main173
0x0F02	0x0101      	MOVLB       1
0x0F04	0x5100      	MOVF        _BUFFER+13, 0, 1
0x0F06	0x0A41      	XORLW       65
0x0F08	0xE007      	BZ          L__main173
0x0F0A	0x5101      	MOVF        _BUFFER+14, 0, 1
0x0F0C	0x0A41      	XORLW       65
0x0F0E	0xE004      	BZ          L__main173
0x0F10	0x5102      	MOVF        _BUFFER+15, 0, 1
0x0F12	0x0A41      	XORLW       65
0x0F14	0xE001      	BZ          L__main173
0x0F16	0xD02C      	BRA         L_main58
L__main173:
0x0F18	0xBA58      	BTFSC       _state, 5 
0x0F1A	0xD02A      	BRA         L_main58
L__main172:
;SLAVE FIRMWARE.c,250 :: 		label:
___main_label:
;SLAVE FIRMWARE.c,251 :: 		rcen_bit=0;
0x0F1C	0x96C5      	BCF         RCEN_bit, 3 
;SLAVE FIRMWARE.c,252 :: 		delay_ms(10);
0x0F1E	0x0E34      	MOVLW       52
0x0F20	0x6E0C      	MOVWF       R12, 0
0x0F22	0x0EF1      	MOVLW       241
0x0F24	0x6E0D      	MOVWF       R13, 0
L_main59:
0x0F26	0x2E0D      	DECFSZ      R13, 1, 0
0x0F28	0xD7FE      	BRA         L_main59
0x0F2A	0x2E0C      	DECFSZ      R12, 1, 0
0x0F2C	0xD7FC      	BRA         L_main59
0x0F2E	0x0000      	NOP
0x0F30	0x0000      	NOP
;SLAVE FIRMWARE.c,253 :: 		show_ip();
0x0F32	0xDD93      	RCALL       _show_ip
;SLAVE FIRMWARE.c,254 :: 		rcen_bit=1;
0x0F34	0x86C5      	BSF         RCEN_bit, 3 
;SLAVE FIRMWARE.c,255 :: 		delay_ms(10);
0x0F36	0x0E34      	MOVLW       52
0x0F38	0x6E0C      	MOVWF       R12, 0
0x0F3A	0x0EF1      	MOVLW       241
0x0F3C	0x6E0D      	MOVWF       R13, 0
L_main60:
0x0F3E	0x2E0D      	DECFSZ      R13, 1, 0
0x0F40	0xD7FE      	BRA         L_main60
0x0F42	0x2E0C      	DECFSZ      R12, 1, 0
0x0F44	0xD7FC      	BRA         L_main60
0x0F46	0x0000      	NOP
0x0F48	0x0000      	NOP
;SLAVE FIRMWARE.c,256 :: 		while(((BUFFER[12] == 'A')||(BUFFER[13] == 'A')||(BUFFER[14] == 'A')||(BUFFER[15] == 'A')) && (state.f5 ==  0)){check_status();goto label;}
0x0F4A	0x51FF      	MOVF        _BUFFER+12, 0, 1
0x0F4C	0x0A41      	XORLW       65
0x0F4E	0xE00B      	BZ          L__main171
0x0F50	0x0101      	MOVLB       1
0x0F52	0x5100      	MOVF        _BUFFER+13, 0, 1
0x0F54	0x0A41      	XORLW       65
0x0F56	0xE007      	BZ          L__main171
0x0F58	0x5101      	MOVF        _BUFFER+14, 0, 1
0x0F5A	0x0A41      	XORLW       65
0x0F5C	0xE004      	BZ          L__main171
0x0F5E	0x5102      	MOVF        _BUFFER+15, 0, 1
0x0F60	0x0A41      	XORLW       65
0x0F62	0xE001      	BZ          L__main171
0x0F64	0xD004      	BRA         L_main62
L__main171:
0x0F66	0xBA58      	BTFSC       _state, 5 
0x0F68	0xD002      	BRA         L_main62
L__main170:
0x0F6A	0xDDB4      	RCALL       _check_status
0x0F6C	0xD7D7      	BRA         ___main_label
L_main62:
;SLAVE FIRMWARE.c,257 :: 		clr();
0x0F6E	0xDD69      	RCALL       _clr
;SLAVE FIRMWARE.c,258 :: 		}
L_main58:
;SLAVE FIRMWARE.c,259 :: 		}
L_main52:
;SLAVE FIRMWARE.c,261 :: 		if((BUFFER[10] == 'D') && (state.f6 == 0)){
0x0F70	0x0100      	MOVLB       0
0x0F72	0x51FD      	MOVF        _BUFFER+10, 0, 1
0x0F74	0x0A44      	XORLW       68
0x0F76	0xE16E      	BNZ         L_main69
0x0F78	0xBC58      	BTFSC       _state, 6 
0x0F7A	0xD06C      	BRA         L_main69
L__main169:
;SLAVE FIRMWARE.c,262 :: 		lcd_cmd(_lcd_clear);
0x0F7C	0x0E01      	MOVLW       1
0x0F7E	0x0101      	MOVLB       1
0x0F80	0x6F18      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0F82	0xF000EC48  	CALL        _Lcd_Cmd, 0
;SLAVE FIRMWARE.c,263 :: 		if((BUFFER[10] == 'D') && (state.f6 == 0)){
0x0F86	0x51FD      	MOVF        _BUFFER+10, 0, 1
0x0F88	0x0A44      	XORLW       68
0x0F8A	0xE163      	BNZ         L_main72
0x0F8C	0xBC58      	BTFSC       _state, 6 
0x0F8E	0xD061      	BRA         L_main72
L__main168:
;SLAVE FIRMWARE.c,264 :: 		labeL1:
___main_labeL1:
;SLAVE FIRMWARE.c,265 :: 		delay_ms(100);
0x0F90	0x0E03      	MOVLW       3
0x0F92	0x6E0B      	MOVWF       R11, 0
0x0F94	0x0E08      	MOVLW       8
0x0F96	0x6E0C      	MOVWF       R12, 0
0x0F98	0x0E77      	MOVLW       119
0x0F9A	0x6E0D      	MOVWF       R13, 0
L_main73:
0x0F9C	0x2E0D      	DECFSZ      R13, 1, 0
0x0F9E	0xD7FE      	BRA         L_main73
0x0FA0	0x2E0C      	DECFSZ      R12, 1, 0
0x0FA2	0xD7FC      	BRA         L_main73
0x0FA4	0x2E0B      	DECFSZ      R11, 1, 0
0x0FA6	0xD7FA      	BRA         L_main73
;SLAVE FIRMWARE.c,266 :: 		lcd_out(1,1,"Temp: ");
0x0FA8	0x0E01      	MOVLW       1
0x0FAA	0x0101      	MOVLB       1
0x0FAC	0x6F12      	MOVWF       FARG_Lcd_Out_row, 1
0x0FAE	0x0E01      	MOVLW       1
0x0FB0	0x6F13      	MOVWF       FARG_Lcd_Out_column, 1
0x0FB2	0x0E8D      	MOVLW       ?lstr19_SLAVE_32FIRMWARE
0x0FB4	0x6F14      	MOVWF       FARG_Lcd_Out_text, 1
0x0FB6	0x0E00      	MOVLW       hi_addr(?lstr19_SLAVE_32FIRMWARE)
0x0FB8	0x6F15      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0FBA	0xF000ECF9  	CALL        _Lcd_Out, 0
;SLAVE FIRMWARE.c,267 :: 		conv(temp_res,1);
0x0FBE	0xF104C0F1  	MOVFF       _temp_res, FARG_conv_t
0x0FC2	0xF105C0F2  	MOVFF       _temp_res+1, FARG_conv_t+1
0x0FC6	0x0E01      	MOVLW       1
0x0FC8	0x0101      	MOVLB       1
0x0FCA	0x6F06      	MOVWF       FARG_conv_x, 1
0x0FCC	0xDCEA      	RCALL       _conv
;SLAVE FIRMWARE.c,268 :: 		Lcd_Chr_Cp(223);
0x0FCE	0x0EDF      	MOVLW       223
0x0FD0	0x0101      	MOVLB       1
0x0FD2	0x6F17      	MOVWF       FARG_Lcd_Chr_CP_out_char, 1
0x0FD4	0xF000ECA2  	CALL        _Lcd_Chr_CP, 0
;SLAVE FIRMWARE.c,269 :: 		lcd_out(1,12,"C");
0x0FD8	0x0E01      	MOVLW       1
0x0FDA	0x0101      	MOVLB       1
0x0FDC	0x6F12      	MOVWF       FARG_Lcd_Out_row, 1
0x0FDE	0x0E0C      	MOVLW       12
0x0FE0	0x6F13      	MOVWF       FARG_Lcd_Out_column, 1
0x0FE2	0x0E9D      	MOVLW       ?lstr20_SLAVE_32FIRMWARE
0x0FE4	0x6F14      	MOVWF       FARG_Lcd_Out_text, 1
0x0FE6	0x0E00      	MOVLW       hi_addr(?lstr20_SLAVE_32FIRMWARE)
0x0FE8	0x6F15      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0FEA	0xF000ECF9  	CALL        _Lcd_Out, 0
;SLAVE FIRMWARE.c,270 :: 		lcd_out(2,1,"GAS : ");
0x0FEE	0x0E02      	MOVLW       2
0x0FF0	0x0101      	MOVLB       1
0x0FF2	0x6F12      	MOVWF       FARG_Lcd_Out_row, 1
0x0FF4	0x0E01      	MOVLW       1
0x0FF6	0x6F13      	MOVWF       FARG_Lcd_Out_column, 1
0x0FF8	0x0E96      	MOVLW       ?lstr21_SLAVE_32FIRMWARE
0x0FFA	0x6F14      	MOVWF       FARG_Lcd_Out_text, 1
0x0FFC	0x0E00      	MOVLW       hi_addr(?lstr21_SLAVE_32FIRMWARE)
0x0FFE	0x6F15      	MOVWF       FARG_Lcd_Out_text+1, 1
0x1000	0xF000ECF9  	CALL        _Lcd_Out, 0
;SLAVE FIRMWARE.c,271 :: 		conv(gas_int,2);
0x1004	0xF104C0EF  	MOVFF       _gas_int, FARG_conv_t
0x1008	0xF105C0F0  	MOVFF       _gas_int+1, FARG_conv_t+1
0x100C	0x0E02      	MOVLW       2
0x100E	0x0101      	MOVLB       1
0x1010	0x6F06      	MOVWF       FARG_conv_x, 1
0x1012	0xDCC7      	RCALL       _conv
;SLAVE FIRMWARE.c,272 :: 		lcd_out(2,11,"%");
0x1014	0x0E02      	MOVLW       2
0x1016	0x0101      	MOVLB       1
0x1018	0x6F12      	MOVWF       FARG_Lcd_Out_row, 1
0x101A	0x0E0B      	MOVLW       11
0x101C	0x6F13      	MOVWF       FARG_Lcd_Out_column, 1
0x101E	0x0E94      	MOVLW       ?lstr22_SLAVE_32FIRMWARE
0x1020	0x6F14      	MOVWF       FARG_Lcd_Out_text, 1
0x1022	0x0E00      	MOVLW       hi_addr(?lstr22_SLAVE_32FIRMWARE)
0x1024	0x6F15      	MOVWF       FARG_Lcd_Out_text+1, 1
0x1026	0xF000ECF9  	CALL        _Lcd_Out, 0
;SLAVE FIRMWARE.c,273 :: 		delay_ms(100);
0x102A	0x0E03      	MOVLW       3
0x102C	0x6E0B      	MOVWF       R11, 0
0x102E	0x0E08      	MOVLW       8
0x1030	0x6E0C      	MOVWF       R12, 0
0x1032	0x0E77      	MOVLW       119
0x1034	0x6E0D      	MOVWF       R13, 0
L_main74:
0x1036	0x2E0D      	DECFSZ      R13, 1, 0
0x1038	0xD7FE      	BRA         L_main74
0x103A	0x2E0C      	DECFSZ      R12, 1, 0
0x103C	0xD7FC      	BRA         L_main74
0x103E	0x2E0B      	DECFSZ      R11, 1, 0
0x1040	0xD7FA      	BRA         L_main74
;SLAVE FIRMWARE.c,274 :: 		while((BUFFER[10] == 'D') && (state.f6 == 0)){check_status();goto labeL1;}
0x1042	0x51FD      	MOVF        _BUFFER+10, 0, 1
0x1044	0x0A44      	XORLW       68
0x1046	0xE104      	BNZ         L_main76
0x1048	0xBC58      	BTFSC       _state, 6 
0x104A	0xD002      	BRA         L_main76
L__main167:
0x104C	0xDD43      	RCALL       _check_status
0x104E	0xD7A0      	BRA         ___main_labeL1
L_main76:
;SLAVE FIRMWARE.c,275 :: 		clr();
0x1050	0xDCF8      	RCALL       _clr
;SLAVE FIRMWARE.c,276 :: 		}
L_main72:
;SLAVE FIRMWARE.c,277 :: 		}
0x1052	0xD1FE      	BRA         L_main79
L_main69:
;SLAVE FIRMWARE.c,282 :: 		disp_status();
0x1054	0xDE20      	RCALL       _disp_status
;SLAVE FIRMWARE.c,284 :: 		if((button_R1 == 0) || (BUFFER[10] == 'Q')){
0x1056	0xA880      	BTFSS       PORTA, 4 
0x1058	0xD004      	BRA         L__main166
0x105A	0x51FD      	MOVF        _BUFFER+10, 0, 1
0x105C	0x0A51      	XORLW       81
0x105E	0xE001      	BZ          L__main166
0x1060	0xD05E      	BRA         L_main82
L__main166:
;SLAVE FIRMWARE.c,285 :: 		delay_ms(10);
0x1062	0x0E34      	MOVLW       52
0x1064	0x6E0C      	MOVWF       R12, 0
0x1066	0x0EF1      	MOVLW       241
0x1068	0x6E0D      	MOVWF       R13, 0
L_main83:
0x106A	0x2E0D      	DECFSZ      R13, 1, 0
0x106C	0xD7FE      	BRA         L_main83
0x106E	0x2E0C      	DECFSZ      R12, 1, 0
0x1070	0xD7FC      	BRA         L_main83
0x1072	0x0000      	NOP
0x1074	0x0000      	NOP
;SLAVE FIRMWARE.c,286 :: 		if((button_R1 == 0) || (BUFFER[10] == 'Q')){
0x1076	0xA880      	BTFSS       PORTA, 4 
0x1078	0xD004      	BRA         L__main165
0x107A	0x51FD      	MOVF        _BUFFER+10, 0, 1
0x107C	0x0A51      	XORLW       81
0x107E	0xE001      	BZ          L__main165
0x1080	0xD04E      	BRA         L_main86
L__main165:
;SLAVE FIRMWARE.c,287 :: 		clr();
0x1082	0xDCDF      	RCALL       _clr
;SLAVE FIRMWARE.c,288 :: 		state.f0 =~ state.f0;
0x1084	0x7058      	BTG         _state, 0 
;SLAVE FIRMWARE.c,289 :: 		disp_status();
0x1086	0xDE07      	RCALL       _disp_status
;SLAVE FIRMWARE.c,290 :: 		delay_ms(10);
0x1088	0x0E34      	MOVLW       52
0x108A	0x6E0C      	MOVWF       R12, 0
0x108C	0x0EF1      	MOVLW       241
0x108E	0x6E0D      	MOVWF       R13, 0
L_main87:
0x1090	0x2E0D      	DECFSZ      R13, 1, 0
0x1092	0xD7FE      	BRA         L_main87
0x1094	0x2E0C      	DECFSZ      R12, 1, 0
0x1096	0xD7FC      	BRA         L_main87
0x1098	0x0000      	NOP
0x109A	0x0000      	NOP
;SLAVE FIRMWARE.c,291 :: 		Relay_1 = state.f0;
0x109C	0xB058      	BTFSC       _state, 0 
0x109E	0xD002      	BRA         L__main184
0x10A0	0x9281      	BCF         PORTB, 1 
0x10A2	0xD001      	BRA         L__main185
L__main184:
0x10A4	0x8281      	BSF         PORTB, 1 
L__main185:
;SLAVE FIRMWARE.c,292 :: 		delay_ms(10);
0x10A6	0x0E34      	MOVLW       52
0x10A8	0x6E0C      	MOVWF       R12, 0
0x10AA	0x0EF1      	MOVLW       241
0x10AC	0x6E0D      	MOVWF       R13, 0
L_main88:
0x10AE	0x2E0D      	DECFSZ      R13, 1, 0
0x10B0	0xD7FE      	BRA         L_main88
0x10B2	0x2E0C      	DECFSZ      R12, 1, 0
0x10B4	0xD7FC      	BRA         L_main88
0x10B6	0x0000      	NOP
0x10B8	0x0000      	NOP
;SLAVE FIRMWARE.c,293 :: 		if(state.f0 == 1){
0x10BA	0xA058      	BTFSS       _state, 0 
0x10BC	0xD014      	BRA         L_main89
;SLAVE FIRMWARE.c,294 :: 		portA.f2 = 1;
0x10BE	0x8480      	BSF         PORTA, 2 
;SLAVE FIRMWARE.c,295 :: 		delay_ms(50);
0x10C0	0x0E02      	MOVLW       2
0x10C2	0x6E0B      	MOVWF       R11, 0
0x10C4	0x0E04      	MOVLW       4
0x10C6	0x6E0C      	MOVWF       R12, 0
0x10C8	0x0EBA      	MOVLW       186
0x10CA	0x6E0D      	MOVWF       R13, 0
L_main90:
0x10CC	0x2E0D      	DECFSZ      R13, 1, 0
0x10CE	0xD7FE      	BRA         L_main90
0x10D0	0x2E0C      	DECFSZ      R12, 1, 0
0x10D2	0xD7FC      	BRA         L_main90
0x10D4	0x2E0B      	DECFSZ      R11, 1, 0
0x10D6	0xD7FA      	BRA         L_main90
0x10D8	0x0000      	NOP
;SLAVE FIRMWARE.c,296 :: 		to_send('A');
0x10DA	0x0E41      	MOVLW       65
0x10DC	0x0101      	MOVLB       1
0x10DE	0x6F04      	MOVWF       FARG_to_send_x, 1
0x10E0	0xDD99      	RCALL       _to_send
;SLAVE FIRMWARE.c,297 :: 		portA.f2 = 0;
0x10E2	0x9480      	BCF         PORTA, 2 
;SLAVE FIRMWARE.c,298 :: 		}
0x10E4	0xD013      	BRA         L_main91
L_main89:
;SLAVE FIRMWARE.c,300 :: 		portA.f2 = 1;
0x10E6	0x8480      	BSF         PORTA, 2 
;SLAVE FIRMWARE.c,301 :: 		delay_ms(50);
0x10E8	0x0E02      	MOVLW       2
0x10EA	0x6E0B      	MOVWF       R11, 0
0x10EC	0x0E04      	MOVLW       4
0x10EE	0x6E0C      	MOVWF       R12, 0
0x10F0	0x0EBA      	MOVLW       186
0x10F2	0x6E0D      	MOVWF       R13, 0
L_main92:
0x10F4	0x0101      	MOVLB       1
0x10F6	0x2E0D      	DECFSZ      R13, 1, 0
0x10F8	0xD7FD      	BRA         L_main92
0x10FA	0x2E0C      	DECFSZ      R12, 1, 0
0x10FC	0xD7FB      	BRA         L_main92
0x10FE	0x2E0B      	DECFSZ      R11, 1, 0
0x1100	0xD7F9      	BRA         L_main92
0x1102	0x0000      	NOP
;SLAVE FIRMWARE.c,302 :: 		to_send('B');
0x1104	0x0E42      	MOVLW       66
0x1106	0x6F04      	MOVWF       FARG_to_send_x, 1
0x1108	0xDD85      	RCALL       _to_send
;SLAVE FIRMWARE.c,303 :: 		portA.f2 = 0;
0x110A	0x9480      	BCF         PORTA, 2 
;SLAVE FIRMWARE.c,304 :: 		}
L_main91:
;SLAVE FIRMWARE.c,305 :: 		while(button_R1 == 0){}
L_main93:
0x110C	0xB880      	BTFSC       PORTA, 4 
0x110E	0xD001      	BRA         L_main94
0x1110	0xD7FD      	BRA         L_main93
L_main94:
0x1112	0x0101      	MOVLB       1
;SLAVE FIRMWARE.c,306 :: 		lcd_cmd(_lcd_clear);
0x1114	0x0E01      	MOVLW       1
0x1116	0x6F18      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x1118	0xF000EC48  	CALL        _Lcd_Cmd, 0
;SLAVE FIRMWARE.c,307 :: 		clr();
0x111C	0xDC92      	RCALL       _clr
;SLAVE FIRMWARE.c,308 :: 		}
L_main86:
;SLAVE FIRMWARE.c,310 :: 		}
L_main82:
;SLAVE FIRMWARE.c,311 :: 		if((button_R2 == 0) || (BUFFER[10] == 'W')){
0x111E	0xAA80      	BTFSS       PORTA, 5 
0x1120	0xD005      	BRA         L__main164
0x1122	0x0100      	MOVLB       0
0x1124	0x51FD      	MOVF        _BUFFER+10, 0, 1
0x1126	0x0A57      	XORLW       87
0x1128	0xE001      	BZ          L__main164
0x112A	0xD05F      	BRA         L_main97
L__main164:
;SLAVE FIRMWARE.c,312 :: 		delay_ms(10);
0x112C	0x0E34      	MOVLW       52
0x112E	0x6E0C      	MOVWF       R12, 0
0x1130	0x0EF1      	MOVLW       241
0x1132	0x6E0D      	MOVWF       R13, 0
L_main98:
0x1134	0x2E0D      	DECFSZ      R13, 1, 0
0x1136	0xD7FE      	BRA         L_main98
0x1138	0x2E0C      	DECFSZ      R12, 1, 0
0x113A	0xD7FC      	BRA         L_main98
0x113C	0x0000      	NOP
0x113E	0x0000      	NOP
;SLAVE FIRMWARE.c,313 :: 		if((button_R2 == 0) || (BUFFER[10] == 'W')){
0x1140	0xAA80      	BTFSS       PORTA, 5 
0x1142	0xD005      	BRA         L__main163
0x1144	0x0100      	MOVLB       0
0x1146	0x51FD      	MOVF        _BUFFER+10, 0, 1
0x1148	0x0A57      	XORLW       87
0x114A	0xE001      	BZ          L__main163
0x114C	0xD04E      	BRA         L_main101
L__main163:
;SLAVE FIRMWARE.c,314 :: 		clr();
0x114E	0xDC79      	RCALL       _clr
;SLAVE FIRMWARE.c,315 :: 		state.f1 =~ state.f1;
0x1150	0x7258      	BTG         _state, 1 
;SLAVE FIRMWARE.c,316 :: 		disp_status();
0x1152	0xDDA1      	RCALL       _disp_status
;SLAVE FIRMWARE.c,317 :: 		delay_ms(10);
0x1154	0x0E34      	MOVLW       52
0x1156	0x6E0C      	MOVWF       R12, 0
0x1158	0x0EF1      	MOVLW       241
0x115A	0x6E0D      	MOVWF       R13, 0
L_main102:
0x115C	0x2E0D      	DECFSZ      R13, 1, 0
0x115E	0xD7FE      	BRA         L_main102
0x1160	0x2E0C      	DECFSZ      R12, 1, 0
0x1162	0xD7FC      	BRA         L_main102
0x1164	0x0000      	NOP
0x1166	0x0000      	NOP
;SLAVE FIRMWARE.c,318 :: 		Relay_2 = state.f1;
0x1168	0xB258      	BTFSC       _state, 1 
0x116A	0xD002      	BRA         L__main186
0x116C	0x9081      	BCF         PORTB, 0 
0x116E	0xD001      	BRA         L__main187
L__main186:
0x1170	0x8081      	BSF         PORTB, 0 
L__main187:
;SLAVE FIRMWARE.c,319 :: 		delay_ms(10);
0x1172	0x0E34      	MOVLW       52
0x1174	0x6E0C      	MOVWF       R12, 0
0x1176	0x0EF1      	MOVLW       241
0x1178	0x6E0D      	MOVWF       R13, 0
L_main103:
0x117A	0x2E0D      	DECFSZ      R13, 1, 0
0x117C	0xD7FE      	BRA         L_main103
0x117E	0x2E0C      	DECFSZ      R12, 1, 0
0x1180	0xD7FC      	BRA         L_main103
0x1182	0x0000      	NOP
0x1184	0x0000      	NOP
;SLAVE FIRMWARE.c,320 :: 		if(state.f1 == 1){
0x1186	0xA258      	BTFSS       _state, 1 
0x1188	0xD014      	BRA         L_main104
;SLAVE FIRMWARE.c,321 :: 		portA.f2 = 1;
0x118A	0x8480      	BSF         PORTA, 2 
;SLAVE FIRMWARE.c,322 :: 		delay_ms(50);
0x118C	0x0E02      	MOVLW       2
0x118E	0x6E0B      	MOVWF       R11, 0
0x1190	0x0E04      	MOVLW       4
0x1192	0x6E0C      	MOVWF       R12, 0
0x1194	0x0EBA      	MOVLW       186
0x1196	0x6E0D      	MOVWF       R13, 0
L_main105:
0x1198	0x2E0D      	DECFSZ      R13, 1, 0
0x119A	0xD7FE      	BRA         L_main105
0x119C	0x2E0C      	DECFSZ      R12, 1, 0
0x119E	0xD7FC      	BRA         L_main105
0x11A0	0x2E0B      	DECFSZ      R11, 1, 0
0x11A2	0xD7FA      	BRA         L_main105
0x11A4	0x0000      	NOP
;SLAVE FIRMWARE.c,323 :: 		to_send('C');
0x11A6	0x0E43      	MOVLW       67
0x11A8	0x0101      	MOVLB       1
0x11AA	0x6F04      	MOVWF       FARG_to_send_x, 1
0x11AC	0xDD33      	RCALL       _to_send
;SLAVE FIRMWARE.c,324 :: 		portA.f2 = 0;
0x11AE	0x9480      	BCF         PORTA, 2 
;SLAVE FIRMWARE.c,325 :: 		}
0x11B0	0xD013      	BRA         L_main106
L_main104:
;SLAVE FIRMWARE.c,327 :: 		portA.f2 = 1;
0x11B2	0x8480      	BSF         PORTA, 2 
;SLAVE FIRMWARE.c,328 :: 		delay_ms(50);
0x11B4	0x0E02      	MOVLW       2
0x11B6	0x6E0B      	MOVWF       R11, 0
0x11B8	0x0E04      	MOVLW       4
0x11BA	0x6E0C      	MOVWF       R12, 0
0x11BC	0x0EBA      	MOVLW       186
0x11BE	0x6E0D      	MOVWF       R13, 0
L_main107:
0x11C0	0x0101      	MOVLB       1
0x11C2	0x2E0D      	DECFSZ      R13, 1, 0
0x11C4	0xD7FD      	BRA         L_main107
0x11C6	0x2E0C      	DECFSZ      R12, 1, 0
0x11C8	0xD7FB      	BRA         L_main107
0x11CA	0x2E0B      	DECFSZ      R11, 1, 0
0x11CC	0xD7F9      	BRA         L_main107
0x11CE	0x0000      	NOP
;SLAVE FIRMWARE.c,329 :: 		to_send('D');
0x11D0	0x0E44      	MOVLW       68
0x11D2	0x6F04      	MOVWF       FARG_to_send_x, 1
0x11D4	0xDD1F      	RCALL       _to_send
;SLAVE FIRMWARE.c,330 :: 		portA.f2 = 0;
0x11D6	0x9480      	BCF         PORTA, 2 
;SLAVE FIRMWARE.c,331 :: 		}
L_main106:
;SLAVE FIRMWARE.c,332 :: 		while(button_R2 == 0){}
L_main108:
0x11D8	0xBA80      	BTFSC       PORTA, 5 
0x11DA	0xD001      	BRA         L_main109
0x11DC	0xD7FD      	BRA         L_main108
L_main109:
0x11DE	0x0101      	MOVLB       1
;SLAVE FIRMWARE.c,333 :: 		lcd_cmd(_lcd_clear);
0x11E0	0x0E01      	MOVLW       1
0x11E2	0x6F18      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x11E4	0xF000EC48  	CALL        _Lcd_Cmd, 0
;SLAVE FIRMWARE.c,334 :: 		clr();
0x11E8	0xDC2C      	RCALL       _clr
;SLAVE FIRMWARE.c,335 :: 		}
L_main101:
;SLAVE FIRMWARE.c,336 :: 		}
L_main97:
;SLAVE FIRMWARE.c,337 :: 		if((button_R3 == 0) || (BUFFER[10] == 'E')){
0x11EA	0xA082      	BTFSS       PORTC, 0 
0x11EC	0xD005      	BRA         L__main162
0x11EE	0x0100      	MOVLB       0
0x11F0	0x51FD      	MOVF        _BUFFER+10, 0, 1
0x11F2	0x0A45      	XORLW       69
0x11F4	0xE001      	BZ          L__main162
0x11F6	0xD05F      	BRA         L_main112
L__main162:
;SLAVE FIRMWARE.c,338 :: 		delay_ms(10);
0x11F8	0x0E34      	MOVLW       52
0x11FA	0x6E0C      	MOVWF       R12, 0
0x11FC	0x0EF1      	MOVLW       241
0x11FE	0x6E0D      	MOVWF       R13, 0
L_main113:
0x1200	0x2E0D      	DECFSZ      R13, 1, 0
0x1202	0xD7FE      	BRA         L_main113
0x1204	0x2E0C      	DECFSZ      R12, 1, 0
0x1206	0xD7FC      	BRA         L_main113
0x1208	0x0000      	NOP
0x120A	0x0000      	NOP
;SLAVE FIRMWARE.c,339 :: 		if((button_R3 == 0) || (BUFFER[10] == 'E')){
0x120C	0xA082      	BTFSS       PORTC, 0 
0x120E	0xD005      	BRA         L__main161
0x1210	0x0100      	MOVLB       0
0x1212	0x51FD      	MOVF        _BUFFER+10, 0, 1
0x1214	0x0A45      	XORLW       69
0x1216	0xE001      	BZ          L__main161
0x1218	0xD04E      	BRA         L_main116
L__main161:
;SLAVE FIRMWARE.c,340 :: 		state.f2 =~ state.f2;
0x121A	0x7458      	BTG         _state, 2 
;SLAVE FIRMWARE.c,341 :: 		disp_status();
0x121C	0xDD3C      	RCALL       _disp_status
;SLAVE FIRMWARE.c,342 :: 		delay_ms(10);
0x121E	0x0E34      	MOVLW       52
0x1220	0x6E0C      	MOVWF       R12, 0
0x1222	0x0EF1      	MOVLW       241
0x1224	0x6E0D      	MOVWF       R13, 0
L_main117:
0x1226	0x2E0D      	DECFSZ      R13, 1, 0
0x1228	0xD7FE      	BRA         L_main117
0x122A	0x2E0C      	DECFSZ      R12, 1, 0
0x122C	0xD7FC      	BRA         L_main117
0x122E	0x0000      	NOP
0x1230	0x0000      	NOP
;SLAVE FIRMWARE.c,343 :: 		Relay_3 = state.f2;
0x1232	0xB458      	BTFSC       _state, 2 
0x1234	0xD002      	BRA         L__main188
0x1236	0x9A82      	BCF         PORTC, 5 
0x1238	0xD001      	BRA         L__main189
L__main188:
0x123A	0x8A82      	BSF         PORTC, 5 
L__main189:
;SLAVE FIRMWARE.c,344 :: 		delay_ms(10);
0x123C	0x0E34      	MOVLW       52
0x123E	0x6E0C      	MOVWF       R12, 0
0x1240	0x0EF1      	MOVLW       241
0x1242	0x6E0D      	MOVWF       R13, 0
L_main118:
0x1244	0x2E0D      	DECFSZ      R13, 1, 0
0x1246	0xD7FE      	BRA         L_main118
0x1248	0x2E0C      	DECFSZ      R12, 1, 0
0x124A	0xD7FC      	BRA         L_main118
0x124C	0x0000      	NOP
0x124E	0x0000      	NOP
;SLAVE FIRMWARE.c,345 :: 		if(state.f2 == 1){
0x1250	0xA458      	BTFSS       _state, 2 
0x1252	0xD014      	BRA         L_main119
;SLAVE FIRMWARE.c,346 :: 		portA.f2 = 1;
0x1254	0x8480      	BSF         PORTA, 2 
;SLAVE FIRMWARE.c,347 :: 		delay_ms(50);
0x1256	0x0E02      	MOVLW       2
0x1258	0x6E0B      	MOVWF       R11, 0
0x125A	0x0E04      	MOVLW       4
0x125C	0x6E0C      	MOVWF       R12, 0
0x125E	0x0EBA      	MOVLW       186
0x1260	0x6E0D      	MOVWF       R13, 0
L_main120:
0x1262	0x2E0D      	DECFSZ      R13, 1, 0
0x1264	0xD7FE      	BRA         L_main120
0x1266	0x2E0C      	DECFSZ      R12, 1, 0
0x1268	0xD7FC      	BRA         L_main120
0x126A	0x2E0B      	DECFSZ      R11, 1, 0
0x126C	0xD7FA      	BRA         L_main120
0x126E	0x0000      	NOP
;SLAVE FIRMWARE.c,348 :: 		to_send('E');
0x1270	0x0E45      	MOVLW       69
0x1272	0x0101      	MOVLB       1
0x1274	0x6F04      	MOVWF       FARG_to_send_x, 1
0x1276	0xDCCE      	RCALL       _to_send
;SLAVE FIRMWARE.c,349 :: 		portA.f2 = 0;
0x1278	0x9480      	BCF         PORTA, 2 
;SLAVE FIRMWARE.c,350 :: 		}
0x127A	0xD013      	BRA         L_main121
L_main119:
;SLAVE FIRMWARE.c,352 :: 		portA.f2 = 1;
0x127C	0x8480      	BSF         PORTA, 2 
;SLAVE FIRMWARE.c,353 :: 		delay_ms(50);
0x127E	0x0E02      	MOVLW       2
0x1280	0x6E0B      	MOVWF       R11, 0
0x1282	0x0E04      	MOVLW       4
0x1284	0x6E0C      	MOVWF       R12, 0
0x1286	0x0EBA      	MOVLW       186
0x1288	0x6E0D      	MOVWF       R13, 0
L_main122:
0x128A	0x0101      	MOVLB       1
0x128C	0x2E0D      	DECFSZ      R13, 1, 0
0x128E	0xD7FD      	BRA         L_main122
0x1290	0x2E0C      	DECFSZ      R12, 1, 0
0x1292	0xD7FB      	BRA         L_main122
0x1294	0x2E0B      	DECFSZ      R11, 1, 0
0x1296	0xD7F9      	BRA         L_main122
0x1298	0x0000      	NOP
;SLAVE FIRMWARE.c,354 :: 		to_send('F');
0x129A	0x0E46      	MOVLW       70
0x129C	0x6F04      	MOVWF       FARG_to_send_x, 1
0x129E	0xDCBA      	RCALL       _to_send
;SLAVE FIRMWARE.c,355 :: 		portA.f2 = 0;
0x12A0	0x9480      	BCF         PORTA, 2 
;SLAVE FIRMWARE.c,356 :: 		}
L_main121:
;SLAVE FIRMWARE.c,357 :: 		while(button_R3 == 0){}
L_main123:
0x12A2	0xB082      	BTFSC       PORTC, 0 
0x12A4	0xD001      	BRA         L_main124
0x12A6	0xD7FD      	BRA         L_main123
L_main124:
0x12A8	0x0101      	MOVLB       1
;SLAVE FIRMWARE.c,358 :: 		lcd_cmd(_lcd_clear);
0x12AA	0x0E01      	MOVLW       1
0x12AC	0x6F18      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x12AE	0xF000EC48  	CALL        _Lcd_Cmd, 0
;SLAVE FIRMWARE.c,359 :: 		clr();
0x12B2	0xF005EC21  	CALL        _clr, 0
;SLAVE FIRMWARE.c,360 :: 		}
L_main116:
;SLAVE FIRMWARE.c,361 :: 		}
L_main112:
;SLAVE FIRMWARE.c,362 :: 		if((button_R4==0) || (BUFFER[10] == 'R')){
0x12B6	0xA282      	BTFSS       PORTC, 1 
0x12B8	0xD005      	BRA         L__main160
0x12BA	0x0100      	MOVLB       0
0x12BC	0x51FD      	MOVF        _BUFFER+10, 0, 1
0x12BE	0x0A52      	XORLW       82
0x12C0	0xE001      	BZ          L__main160
0x12C2	0xD05F      	BRA         L_main127
L__main160:
;SLAVE FIRMWARE.c,363 :: 		delay_ms(10);
0x12C4	0x0E34      	MOVLW       52
0x12C6	0x6E0C      	MOVWF       R12, 0
0x12C8	0x0EF1      	MOVLW       241
0x12CA	0x6E0D      	MOVWF       R13, 0
L_main128:
0x12CC	0x2E0D      	DECFSZ      R13, 1, 0
0x12CE	0xD7FE      	BRA         L_main128
0x12D0	0x2E0C      	DECFSZ      R12, 1, 0
0x12D2	0xD7FC      	BRA         L_main128
0x12D4	0x0000      	NOP
0x12D6	0x0000      	NOP
;SLAVE FIRMWARE.c,364 :: 		if((button_R4==0) || (BUFFER[10] == 'R')){
0x12D8	0xA282      	BTFSS       PORTC, 1 
0x12DA	0xD005      	BRA         L__main159
0x12DC	0x0100      	MOVLB       0
0x12DE	0x51FD      	MOVF        _BUFFER+10, 0, 1
0x12E0	0x0A52      	XORLW       82
0x12E2	0xE001      	BZ          L__main159
0x12E4	0xD04E      	BRA         L_main131
L__main159:
;SLAVE FIRMWARE.c,365 :: 		state.f3 =~ state.f3;
0x12E6	0x7658      	BTG         _state, 3 
;SLAVE FIRMWARE.c,366 :: 		disp_status();
0x12E8	0xDCD6      	RCALL       _disp_status
;SLAVE FIRMWARE.c,367 :: 		delay_ms(10);
0x12EA	0x0E34      	MOVLW       52
0x12EC	0x6E0C      	MOVWF       R12, 0
0x12EE	0x0EF1      	MOVLW       241
0x12F0	0x6E0D      	MOVWF       R13, 0
L_main132:
0x12F2	0x2E0D      	DECFSZ      R13, 1, 0
0x12F4	0xD7FE      	BRA         L_main132
0x12F6	0x2E0C      	DECFSZ      R12, 1, 0
0x12F8	0xD7FC      	BRA         L_main132
0x12FA	0x0000      	NOP
0x12FC	0x0000      	NOP
;SLAVE FIRMWARE.c,368 :: 		Relay_4 = state.f3;
0x12FE	0xB658      	BTFSC       _state, 3 
0x1300	0xD002      	BRA         L__main190
0x1302	0x9882      	BCF         PORTC, 4 
0x1304	0xD001      	BRA         L__main191
L__main190:
0x1306	0x8882      	BSF         PORTC, 4 
L__main191:
;SLAVE FIRMWARE.c,369 :: 		delay_ms(10);
0x1308	0x0E34      	MOVLW       52
0x130A	0x6E0C      	MOVWF       R12, 0
0x130C	0x0EF1      	MOVLW       241
0x130E	0x6E0D      	MOVWF       R13, 0
L_main133:
0x1310	0x2E0D      	DECFSZ      R13, 1, 0
0x1312	0xD7FE      	BRA         L_main133
0x1314	0x2E0C      	DECFSZ      R12, 1, 0
0x1316	0xD7FC      	BRA         L_main133
0x1318	0x0000      	NOP
0x131A	0x0000      	NOP
;SLAVE FIRMWARE.c,370 :: 		if(state.f3 == 0){
0x131C	0xB658      	BTFSC       _state, 3 
0x131E	0xD014      	BRA         L_main134
;SLAVE FIRMWARE.c,371 :: 		portA.f2 = 1;
0x1320	0x8480      	BSF         PORTA, 2 
;SLAVE FIRMWARE.c,372 :: 		delay_ms(50);
0x1322	0x0E02      	MOVLW       2
0x1324	0x6E0B      	MOVWF       R11, 0
0x1326	0x0E04      	MOVLW       4
0x1328	0x6E0C      	MOVWF       R12, 0
0x132A	0x0EBA      	MOVLW       186
0x132C	0x6E0D      	MOVWF       R13, 0
L_main135:
0x132E	0x2E0D      	DECFSZ      R13, 1, 0
0x1330	0xD7FE      	BRA         L_main135
0x1332	0x2E0C      	DECFSZ      R12, 1, 0
0x1334	0xD7FC      	BRA         L_main135
0x1336	0x2E0B      	DECFSZ      R11, 1, 0
0x1338	0xD7FA      	BRA         L_main135
0x133A	0x0000      	NOP
;SLAVE FIRMWARE.c,373 :: 		to_send('G');
0x133C	0x0E47      	MOVLW       71
0x133E	0x0101      	MOVLB       1
0x1340	0x6F04      	MOVWF       FARG_to_send_x, 1
0x1342	0xDC68      	RCALL       _to_send
;SLAVE FIRMWARE.c,374 :: 		portA.f2 = 0;
0x1344	0x9480      	BCF         PORTA, 2 
;SLAVE FIRMWARE.c,375 :: 		}
0x1346	0xD013      	BRA         L_main136
L_main134:
;SLAVE FIRMWARE.c,377 :: 		portA.f2 = 1;
0x1348	0x8480      	BSF         PORTA, 2 
;SLAVE FIRMWARE.c,378 :: 		delay_ms(50);
0x134A	0x0E02      	MOVLW       2
0x134C	0x6E0B      	MOVWF       R11, 0
0x134E	0x0E04      	MOVLW       4
0x1350	0x6E0C      	MOVWF       R12, 0
0x1352	0x0EBA      	MOVLW       186
0x1354	0x6E0D      	MOVWF       R13, 0
L_main137:
0x1356	0x0101      	MOVLB       1
0x1358	0x2E0D      	DECFSZ      R13, 1, 0
0x135A	0xD7FD      	BRA         L_main137
0x135C	0x2E0C      	DECFSZ      R12, 1, 0
0x135E	0xD7FB      	BRA         L_main137
0x1360	0x2E0B      	DECFSZ      R11, 1, 0
0x1362	0xD7F9      	BRA         L_main137
0x1364	0x0000      	NOP
;SLAVE FIRMWARE.c,379 :: 		to_send('H');
0x1366	0x0E48      	MOVLW       72
0x1368	0x6F04      	MOVWF       FARG_to_send_x, 1
0x136A	0xDC54      	RCALL       _to_send
;SLAVE FIRMWARE.c,380 :: 		portA.f2 = 0;
0x136C	0x9480      	BCF         PORTA, 2 
;SLAVE FIRMWARE.c,381 :: 		}
L_main136:
;SLAVE FIRMWARE.c,382 :: 		while(button_R4==0){}
L_main138:
0x136E	0xB282      	BTFSC       PORTC, 1 
0x1370	0xD001      	BRA         L_main139
0x1372	0xD7FD      	BRA         L_main138
L_main139:
0x1374	0x0101      	MOVLB       1
;SLAVE FIRMWARE.c,383 :: 		lcd_cmd(_lcd_clear);
0x1376	0x0E01      	MOVLW       1
0x1378	0x6F18      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x137A	0xF000EC48  	CALL        _Lcd_Cmd, 0
;SLAVE FIRMWARE.c,384 :: 		clr();
0x137E	0xF005EC21  	CALL        _clr, 0
;SLAVE FIRMWARE.c,385 :: 		}
L_main131:
;SLAVE FIRMWARE.c,386 :: 		}
L_main127:
;SLAVE FIRMWARE.c,387 :: 		if((button_R5 == 0)  || (BUFFER[10] == 'T')){
0x1382	0xA482      	BTFSS       PORTC, 2 
0x1384	0xD005      	BRA         L__main158
0x1386	0x0100      	MOVLB       0
0x1388	0x51FD      	MOVF        _BUFFER+10, 0, 1
0x138A	0x0A54      	XORLW       84
0x138C	0xE001      	BZ          L__main158
0x138E	0xD060      	BRA         L_main142
L__main158:
;SLAVE FIRMWARE.c,388 :: 		delay_ms(10);
0x1390	0x0E34      	MOVLW       52
0x1392	0x6E0C      	MOVWF       R12, 0
0x1394	0x0EF1      	MOVLW       241
0x1396	0x6E0D      	MOVWF       R13, 0
L_main143:
0x1398	0x2E0D      	DECFSZ      R13, 1, 0
0x139A	0xD7FE      	BRA         L_main143
0x139C	0x2E0C      	DECFSZ      R12, 1, 0
0x139E	0xD7FC      	BRA         L_main143
0x13A0	0x0000      	NOP
0x13A2	0x0000      	NOP
;SLAVE FIRMWARE.c,389 :: 		if((button_R5 == 0)  || (BUFFER[10] == 'T')){
0x13A4	0xA482      	BTFSS       PORTC, 2 
0x13A6	0xD005      	BRA         L__main157
0x13A8	0x0100      	MOVLB       0
0x13AA	0x51FD      	MOVF        _BUFFER+10, 0, 1
0x13AC	0x0A54      	XORLW       84
0x13AE	0xE001      	BZ          L__main157
0x13B0	0xD04F      	BRA         L_main146
L__main157:
;SLAVE FIRMWARE.c,390 :: 		state.f4 =~ state.f4;
0x13B2	0x7858      	BTG         _state, 4 
;SLAVE FIRMWARE.c,391 :: 		disp_status();
0x13B4	0xDC70      	RCALL       _disp_status
;SLAVE FIRMWARE.c,392 :: 		delay_ms(10);
0x13B6	0x0E34      	MOVLW       52
0x13B8	0x6E0C      	MOVWF       R12, 0
0x13BA	0x0EF1      	MOVLW       241
0x13BC	0x6E0D      	MOVWF       R13, 0
L_main147:
0x13BE	0x2E0D      	DECFSZ      R13, 1, 0
0x13C0	0xD7FE      	BRA         L_main147
0x13C2	0x2E0C      	DECFSZ      R12, 1, 0
0x13C4	0xD7FC      	BRA         L_main147
0x13C6	0x0000      	NOP
0x13C8	0x0000      	NOP
;SLAVE FIRMWARE.c,393 :: 		Relay_5 = state.f4;
0x13CA	0xB858      	BTFSC       _state, 4 
0x13CC	0xD002      	BRA         L__main192
0x13CE	0x9682      	BCF         PORTC, 3 
0x13D0	0xD001      	BRA         L__main193
L__main192:
0x13D2	0x8682      	BSF         PORTC, 3 
L__main193:
;SLAVE FIRMWARE.c,394 :: 		delay_ms(10);
0x13D4	0x0E34      	MOVLW       52
0x13D6	0x6E0C      	MOVWF       R12, 0
0x13D8	0x0EF1      	MOVLW       241
0x13DA	0x6E0D      	MOVWF       R13, 0
L_main148:
0x13DC	0x2E0D      	DECFSZ      R13, 1, 0
0x13DE	0xD7FE      	BRA         L_main148
0x13E0	0x2E0C      	DECFSZ      R12, 1, 0
0x13E2	0xD7FC      	BRA         L_main148
0x13E4	0x0000      	NOP
0x13E6	0x0000      	NOP
;SLAVE FIRMWARE.c,395 :: 		if(state.f4 == 1){
0x13E8	0xA858      	BTFSS       _state, 4 
0x13EA	0xD014      	BRA         L_main149
;SLAVE FIRMWARE.c,396 :: 		portA.f2 = 1;
0x13EC	0x8480      	BSF         PORTA, 2 
;SLAVE FIRMWARE.c,397 :: 		delay_ms(50);
0x13EE	0x0E02      	MOVLW       2
0x13F0	0x6E0B      	MOVWF       R11, 0
0x13F2	0x0E04      	MOVLW       4
0x13F4	0x6E0C      	MOVWF       R12, 0
0x13F6	0x0EBA      	MOVLW       186
0x13F8	0x6E0D      	MOVWF       R13, 0
L_main150:
0x13FA	0x2E0D      	DECFSZ      R13, 1, 0
0x13FC	0xD7FE      	BRA         L_main150
0x13FE	0x2E0C      	DECFSZ      R12, 1, 0
0x1400	0xD7FC      	BRA         L_main150
0x1402	0x2E0B      	DECFSZ      R11, 1, 0
0x1404	0xD7FA      	BRA         L_main150
0x1406	0x0000      	NOP
;SLAVE FIRMWARE.c,398 :: 		to_send('I');
0x1408	0x0E49      	MOVLW       73
0x140A	0x0101      	MOVLB       1
0x140C	0x6F04      	MOVWF       FARG_to_send_x, 1
0x140E	0xDC02      	RCALL       _to_send
;SLAVE FIRMWARE.c,399 :: 		portA.f2 = 0;
0x1410	0x9480      	BCF         PORTA, 2 
;SLAVE FIRMWARE.c,400 :: 		}
0x1412	0xD014      	BRA         L_main151
L_main149:
;SLAVE FIRMWARE.c,402 :: 		portA.f2 = 1;
0x1414	0x8480      	BSF         PORTA, 2 
;SLAVE FIRMWARE.c,403 :: 		delay_ms(50);
0x1416	0x0E02      	MOVLW       2
0x1418	0x6E0B      	MOVWF       R11, 0
0x141A	0x0E04      	MOVLW       4
0x141C	0x6E0C      	MOVWF       R12, 0
0x141E	0x0EBA      	MOVLW       186
0x1420	0x6E0D      	MOVWF       R13, 0
L_main152:
0x1422	0x0101      	MOVLB       1
0x1424	0x2E0D      	DECFSZ      R13, 1, 0
0x1426	0xD7FD      	BRA         L_main152
0x1428	0x2E0C      	DECFSZ      R12, 1, 0
0x142A	0xD7FB      	BRA         L_main152
0x142C	0x2E0B      	DECFSZ      R11, 1, 0
0x142E	0xD7F9      	BRA         L_main152
0x1430	0x0000      	NOP
;SLAVE FIRMWARE.c,404 :: 		to_send('J');
0x1432	0x0E4A      	MOVLW       74
0x1434	0x6F04      	MOVWF       FARG_to_send_x, 1
0x1436	0xF006EC0A  	CALL        _to_send, 0
;SLAVE FIRMWARE.c,405 :: 		portA.f2 = 0;
0x143A	0x9480      	BCF         PORTA, 2 
;SLAVE FIRMWARE.c,406 :: 		}
L_main151:
;SLAVE FIRMWARE.c,407 :: 		while(button_R5 == 0){}
L_main153:
0x143C	0xB482      	BTFSC       PORTC, 2 
0x143E	0xD001      	BRA         L_main154
0x1440	0xD7FD      	BRA         L_main153
L_main154:
0x1442	0x0101      	MOVLB       1
;SLAVE FIRMWARE.c,408 :: 		lcd_cmd(_lcd_clear);
0x1444	0x0E01      	MOVLW       1
0x1446	0x6F18      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x1448	0xF000EC48  	CALL        _Lcd_Cmd, 0
;SLAVE FIRMWARE.c,409 :: 		clr();
0x144C	0xF005EC21  	CALL        _clr, 0
;SLAVE FIRMWARE.c,410 :: 		}
L_main146:
;SLAVE FIRMWARE.c,411 :: 		}
L_main142:
;SLAVE FIRMWARE.c,412 :: 		}
L_main79:
;SLAVE FIRMWARE.c,413 :: 		}
0x1450	0xD535      	BRA         L_main46
;SLAVE FIRMWARE.c,414 :: 		}
0x1452	0xD7FF      	BRA         $+0
; end of _main
0x14F8	0xF01BEE10  	LFSR        1, 27
0x14FC	0x0EA4      	MOVLW       164
0x14FE	0x6E00      	MOVWF       R0 
0x1500	0x0E01      	MOVLW       1
0x1502	0x6E01      	MOVWF       R1 
0x1504	0x0E54      	MOVLW       84
0x1506	0x6EF6      	MOVWF       4086 
0x1508	0x0E14      	MOVLW       20
0x150A	0x6EF7      	MOVWF       TBLPTRH 
0x150C	0x0E00      	MOVLW       0
0x150E	0x6EF8      	MOVWF       TBLPTRU 
0x1510	0xF003ECFA  	CALL        2036, 0
0x1514	0x0012      	RETURN      0
;SLAVE FIRMWARE.c,0 :: ?ICS?lstr8_SLAVE_32FIRMWARE
0x1454	0x464F ;?ICS?lstr8_SLAVE_32FIRMWARE+0
0x1456	0x0046 ;?ICS?lstr8_SLAVE_32FIRMWARE+2
; end of ?ICS?lstr8_SLAVE_32FIRMWARE
;SLAVE FIRMWARE.c,0 :: ?ICS?lstr7_SLAVE_32FIRMWARE
0x1458	0x4E4F ;?ICS?lstr7_SLAVE_32FIRMWARE+0
0x145A	0x00 ;?ICS?lstr7_SLAVE_32FIRMWARE+2
; end of ?ICS?lstr7_SLAVE_32FIRMWARE
;SLAVE FIRMWARE.c,0 :: ?ICS?lstr6_SLAVE_32FIRMWARE
0x145B	0x464F ;?ICS?lstr6_SLAVE_32FIRMWARE+0
0x145D	0x0046 ;?ICS?lstr6_SLAVE_32FIRMWARE+2
; end of ?ICS?lstr6_SLAVE_32FIRMWARE
;SLAVE FIRMWARE.c,0 :: ?ICS?lstr9_SLAVE_32FIRMWARE
0x145F	0x4E4F ;?ICS?lstr9_SLAVE_32FIRMWARE+0
0x1461	0x00 ;?ICS?lstr9_SLAVE_32FIRMWARE+2
; end of ?ICS?lstr9_SLAVE_32FIRMWARE
;SLAVE FIRMWARE.c,0 :: ?ICS?lstr12_SLAVE_32FIRMWARE
0x1462	0x464F ;?ICS?lstr12_SLAVE_32FIRMWARE+0
0x1464	0x0046 ;?ICS?lstr12_SLAVE_32FIRMWARE+2
; end of ?ICS?lstr12_SLAVE_32FIRMWARE
;SLAVE FIRMWARE.c,0 :: ?ICS?lstr11_SLAVE_32FIRMWARE
0x1466	0x4E4F ;?ICS?lstr11_SLAVE_32FIRMWARE+0
0x1468	0x00 ;?ICS?lstr11_SLAVE_32FIRMWARE+2
; end of ?ICS?lstr11_SLAVE_32FIRMWARE
;SLAVE FIRMWARE.c,0 :: ?ICS?lstr10_SLAVE_32FIRMWARE
0x1469	0x464F ;?ICS?lstr10_SLAVE_32FIRMWARE+0
0x146B	0x0046 ;?ICS?lstr10_SLAVE_32FIRMWARE+2
; end of ?ICS?lstr10_SLAVE_32FIRMWARE
;SLAVE FIRMWARE.c,0 :: ?ICS?lstr14_SLAVE_32FIRMWARE
0x146D	0x6854 ;?ICS?lstr14_SLAVE_32FIRMWARE+0
0x146F	0x7369 ;?ICS?lstr14_SLAVE_32FIRMWARE+2
0x1471	0x6920 ;?ICS?lstr14_SLAVE_32FIRMWARE+4
0x1473	0x2073 ;?ICS?lstr14_SLAVE_32FIRMWARE+6
0x1475	0x5049 ;?ICS?lstr14_SLAVE_32FIRMWARE+8
0x1477	0x003A ;?ICS?lstr14_SLAVE_32FIRMWARE+10
; end of ?ICS?lstr14_SLAVE_32FIRMWARE
;SLAVE FIRMWARE.c,0 :: ?ICS_i
0x1479	0x0000 ;?ICS_i+0
; end of ?ICS_i
;SLAVE FIRMWARE.c,0 :: ?ICS?lstr3_SLAVE_32FIRMWARE
0x147B	0x3152 ;?ICS?lstr3_SLAVE_32FIRMWARE+0
0x147D	0x5220 ;?ICS?lstr3_SLAVE_32FIRMWARE+2
0x147F	0x2032 ;?ICS?lstr3_SLAVE_32FIRMWARE+4
0x1481	0x3352 ;?ICS?lstr3_SLAVE_32FIRMWARE+6
0x1483	0x5220 ;?ICS?lstr3_SLAVE_32FIRMWARE+8
0x1485	0x2034 ;?ICS?lstr3_SLAVE_32FIRMWARE+10
0x1487	0x3552 ;?ICS?lstr3_SLAVE_32FIRMWARE+12
0x1489	0x00 ;?ICS?lstr3_SLAVE_32FIRMWARE+14
; end of ?ICS?lstr3_SLAVE_32FIRMWARE
;SLAVE FIRMWARE.c,0 :: ?ICS?lstr5_SLAVE_32FIRMWARE
0x148A	0x4E4F ;?ICS?lstr5_SLAVE_32FIRMWARE+0
0x148C	0x00 ;?ICS?lstr5_SLAVE_32FIRMWARE+2
; end of ?ICS?lstr5_SLAVE_32FIRMWARE
;SLAVE FIRMWARE.c,0 :: ?ICS?lstr4_SLAVE_32FIRMWARE
0x148D	0x464F ;?ICS?lstr4_SLAVE_32FIRMWARE+0
0x148F	0x0046 ;?ICS?lstr4_SLAVE_32FIRMWARE+2
; end of ?ICS?lstr4_SLAVE_32FIRMWARE
;SLAVE FIRMWARE.c,0 :: ?ICS_state
0x1491	0x00 ;?ICS_state+0
; end of ?ICS_state
;SLAVE FIRMWARE.c,0 :: ?ICS?lstr13_SLAVE_32FIRMWARE
0x1492	0x4E4F ;?ICS?lstr13_SLAVE_32FIRMWARE+0
0x1494	0x00 ;?ICS?lstr13_SLAVE_32FIRMWARE+2
; end of ?ICS?lstr13_SLAVE_32FIRMWARE
;SLAVE FIRMWARE.c,0 :: ?ICS?lstr1_SLAVE_32FIRMWARE
0x1495	0x0042 ;?ICS?lstr1_SLAVE_32FIRMWARE+0
; end of ?ICS?lstr1_SLAVE_32FIRMWARE
;SLAVE FIRMWARE.c,0 :: ?ICS?lstr18_SLAVE_32FIRMWARE
0x1497	0x4544 ;?ICS?lstr18_SLAVE_32FIRMWARE+0
0x1499	0x4753 ;?ICS?lstr18_SLAVE_32FIRMWARE+2
0x149B	0x4E49 ;?ICS?lstr18_SLAVE_32FIRMWARE+4
0x149D	0x4445 ;?ICS?lstr18_SLAVE_32FIRMWARE+6
0x149F	0x4220 ;?ICS?lstr18_SLAVE_32FIRMWARE+8
0x14A1	0x3A59 ;?ICS?lstr18_SLAVE_32FIRMWARE+10
0x14A3	0x2A20 ;?ICS?lstr18_SLAVE_32FIRMWARE+12
0x14A5	0x202A ;?ICS?lstr18_SLAVE_32FIRMWARE+14
0x14A7	0x4841 ;?ICS?lstr18_SLAVE_32FIRMWARE+16
0x14A9	0x454D ;?ICS?lstr18_SLAVE_32FIRMWARE+18
0x14AB	0x2044 ;?ICS?lstr18_SLAVE_32FIRMWARE+20
0x14AD	0x414D ;?ICS?lstr18_SLAVE_32FIRMWARE+22
0x14AF	0x4448 ;?ICS?lstr18_SLAVE_32FIRMWARE+24
0x14B1	0x2059 ;?ICS?lstr18_SLAVE_32FIRMWARE+26
0x14B3	0x2A2A ;?ICS?lstr18_SLAVE_32FIRMWARE+28
0x14B5	0x0020 ;?ICS?lstr18_SLAVE_32FIRMWARE+30
; end of ?ICS?lstr18_SLAVE_32FIRMWARE
;SLAVE FIRMWARE.c,0 :: ?ICS?lstr17_SLAVE_32FIRMWARE
0x14B7	0x6D53 ;?ICS?lstr17_SLAVE_32FIRMWARE+0
0x14B9	0x7261 ;?ICS?lstr17_SLAVE_32FIRMWARE+2
0x14BB	0x5274 ;?ICS?lstr17_SLAVE_32FIRMWARE+4
0x14BD	0x6F6F ;?ICS?lstr17_SLAVE_32FIRMWARE+6
0x14BF	0x206D ;?ICS?lstr17_SLAVE_32FIRMWARE+8
0x14C1	0x2E2E ;?ICS?lstr17_SLAVE_32FIRMWARE+10
0x14C3	0x2E2E ;?ICS?lstr17_SLAVE_32FIRMWARE+12
0x14C5	0x00 ;?ICS?lstr17_SLAVE_32FIRMWARE+14
; end of ?ICS?lstr17_SLAVE_32FIRMWARE
;SLAVE FIRMWARE.c,0 :: ?ICS?lstr19_SLAVE_32FIRMWARE
0x14C6	0x6554 ;?ICS?lstr19_SLAVE_32FIRMWARE+0
0x14C8	0x706D ;?ICS?lstr19_SLAVE_32FIRMWARE+2
0x14CA	0x203A ;?ICS?lstr19_SLAVE_32FIRMWARE+4
0x14CC	0x00 ;?ICS?lstr19_SLAVE_32FIRMWARE+6
; end of ?ICS?lstr19_SLAVE_32FIRMWARE
;SLAVE FIRMWARE.c,0 :: ?ICS?lstr22_SLAVE_32FIRMWARE
0x14CD	0x0025 ;?ICS?lstr22_SLAVE_32FIRMWARE+0
; end of ?ICS?lstr22_SLAVE_32FIRMWARE
;SLAVE FIRMWARE.c,0 :: ?ICS?lstr21_SLAVE_32FIRMWARE
0x14CF	0x4147 ;?ICS?lstr21_SLAVE_32FIRMWARE+0
0x14D1	0x2053 ;?ICS?lstr21_SLAVE_32FIRMWARE+2
0x14D3	0x203A ;?ICS?lstr21_SLAVE_32FIRMWARE+4
0x14D5	0x00 ;?ICS?lstr21_SLAVE_32FIRMWARE+6
; end of ?ICS?lstr21_SLAVE_32FIRMWARE
;SLAVE FIRMWARE.c,0 :: ?ICS?lstr20_SLAVE_32FIRMWARE
0x14D6	0x0043 ;?ICS?lstr20_SLAVE_32FIRMWARE+0
; end of ?ICS?lstr20_SLAVE_32FIRMWARE
;SLAVE FIRMWARE.c,0 :: ?ICS?lstr15_SLAVE_32FIRMWARE
0x14D8	0x4948 ;?ICS?lstr15_SLAVE_32FIRMWARE+0
0x14DA	0x4847 ;?ICS?lstr15_SLAVE_32FIRMWARE+2
0x14DC	0x4720 ;?ICS?lstr15_SLAVE_32FIRMWARE+4
0x14DE	0x5341 ;?ICS?lstr15_SLAVE_32FIRMWARE+6
0x14E0	0x4920 ;?ICS?lstr15_SLAVE_32FIRMWARE+8
0x14E2	0x544E ;?ICS?lstr15_SLAVE_32FIRMWARE+10
0x14E4	0x4E45 ;?ICS?lstr15_SLAVE_32FIRMWARE+12
0x14E6	0x0053 ;?ICS?lstr15_SLAVE_32FIRMWARE+14
; end of ?ICS?lstr15_SLAVE_32FIRMWARE
;SLAVE FIRMWARE.c,0 :: ?ICS?lstr2_SLAVE_32FIRMWARE
0x14E8	0x6C41 ;?ICS?lstr2_SLAVE_32FIRMWARE+0
0x14EA	0x7261 ;?ICS?lstr2_SLAVE_32FIRMWARE+2
0x14EC	0x006D ;?ICS?lstr2_SLAVE_32FIRMWARE+4
; end of ?ICS?lstr2_SLAVE_32FIRMWARE
;SLAVE FIRMWARE.c,0 :: ?ICS?lstr16_SLAVE_32FIRMWARE
0x14EE	0x4948 ;?ICS?lstr16_SLAVE_32FIRMWARE+0
0x14F0	0x4847 ;?ICS?lstr16_SLAVE_32FIRMWARE+2
0x14F2	0x5420 ;?ICS?lstr16_SLAVE_32FIRMWARE+4
0x14F4	0x4D45 ;?ICS?lstr16_SLAVE_32FIRMWARE+6
0x14F6	0x0050 ;?ICS?lstr16_SLAVE_32FIRMWARE+8
; end of ?ICS?lstr16_SLAVE_32FIRMWARE
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [96]    _interrupt
0x0068      [10]    _Delay_1us
0x0072      [18]    _Delay_5500us
0x0084      [12]    _Delay_50us
0x0090     [132]    _Lcd_Cmd
0x0114       [8]    _FIXSIGN32
0x011C      [14]    _RES032
0x012A      [26]    _SETFUN32
0x0144      [14]    _Lcd_Chr_CP
0x0152     [114]    _NRM3232
0x01C4      [24]    _SETFOV32
0x01DC      [14]    _UART1_Write
0x01EA       [8]    _SETFDZ32
0x01F2     [132]    _Lcd_Out
0x0276      [18]    _UART1_Read
0x0288      [10]    _UART1_Data_Ready
0x0292      [10]    _Delay_22us
0x029C      [28]    _SETIOV3224
0x02B8      [52]    _UART1_Write_Text
0x02EC     [154]    _UART1_Read_Text
0x0386      [60]    _memset
0x03C2      [40]    _Word2Double
0x03EA     [210]    _Double2Int
0x04BC      [60]    _ADC_Read
0x04F8     [372]    _Div_32x32_FP
0x066C      [50]    _GT
0x069E     [288]    _Mul_32x32_FP
0x07BE      [54]    _Div_16x16_U
0x07F4      [16]    ___CC2DW
0x0804      [62]    _play
0x0842      [88]    _UART1_Init
0x089A      [32]    _ADC_Init
0x08BA     [198]    _Lcd_Init
0x0980      [34]    _recv
0x09A2     [160]    _conv
0x0A42      [24]    _clr
0x0A5A     [122]    _show_ip
0x0AD4     [320]    _check_status
0x0C14     [130]    _to_send
0x0C96     [274]    _disp_status
0x0DA8    [1708]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    FLASH_Erase_64_SaveINTCON_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    I2C1_Rd_tmp_L0
0x0001       [1]    __Lib_TFT_JPEG_FileReadBytes_Result_L0
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    FLASH_Write_8_i_L0
0x0001       [1]    __Lib_TFT_JPEG_FileRead_i_L0
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0001       [1]    R1
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileRead_i_L0
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileReadBytes_Result_L0
0x0001       [1]    FLASH_Erase_Write_64_i_L0
0x0001       [2]    FLASH_Read_N_Bytes_i_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [1]    FLASH_Erase_Write_64_j_L0
0x0002       [1]    R2
0x0002       [1]    FLASH_Write_8_SaveINTCON_L0
0x0002       [2]    memchr_s_L0
0x0002       [2]    memset_pp_L0
0x0002       [2]    strlen_cp_L0
0x0003       [2]    memmove_tt_L0
0x0003       [1]    R3
0x0003       [1]    FLASH_Erase_Write_64_SaveINTCON_L0
0x0003       [1]    MM_Init_i_L0
0x0003       [2]    Ltrim_original_L0
0x0003       [2]    MM_TotalFreeMemSize_Tot_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    __Lib_MemManager_MM_GetMemAlign_P_L0
0x0004       [2]    strcat_cp_L0
0x0004       [1]    R4
0x0004       [2]    strncat_cp_L0
0x0004       [2]    frexp_pom_L0
0x0004       [2]    memcpy_ss_L0
0x0005       [1]    R5
0x0005       [2]    Ltrim_p_L0
0x0005       [1]    MM_TotalFreeMemSize_i_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [2]    memmove_ff_L0
0x0006       [1]    R6
0x0006       [1]    __Lib_MemManager_MM_GetMemAlign_i_L0
0x0007       [1]    R7
0x0007       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bLength_L0
0x0007       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bLength_L0
0x0008       [1]    R8
0x0008       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bTable_L0
0x0008       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bTable_L0
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x001B       [4]    ?lstr8_SLAVE_32FIRMWARE
0x001F       [3]    ?lstr7_SLAVE_32FIRMWARE
0x0022       [4]    ?lstr6_SLAVE_32FIRMWARE
0x0026       [3]    ?lstr9_SLAVE_32FIRMWARE
0x0029       [4]    ?lstr12_SLAVE_32FIRMWARE
0x002D       [3]    ?lstr11_SLAVE_32FIRMWARE
0x0030       [4]    ?lstr10_SLAVE_32FIRMWARE
0x0034      [12]    ?lstr14_SLAVE_32FIRMWARE
0x0040       [2]    _i
0x0042      [15]    ?lstr3_SLAVE_32FIRMWARE
0x0051       [3]    ?lstr5_SLAVE_32FIRMWARE
0x0054       [4]    ?lstr4_SLAVE_32FIRMWARE
0x0058       [1]    _state
0x0059       [3]    ?lstr13_SLAVE_32FIRMWARE
0x005C       [2]    ?lstr1_SLAVE_32FIRMWARE
0x005E      [32]    ?lstr18_SLAVE_32FIRMWARE
0x007E      [15]    ?lstr17_SLAVE_32FIRMWARE
0x008D       [7]    ?lstr19_SLAVE_32FIRMWARE
0x0094       [2]    ?lstr22_SLAVE_32FIRMWARE
0x0096       [7]    ?lstr21_SLAVE_32FIRMWARE
0x009D       [2]    ?lstr20_SLAVE_32FIRMWARE
0x009F      [16]    ?lstr15_SLAVE_32FIRMWARE
0x00AF       [6]    ?lstr2_SLAVE_32FIRMWARE
0x00B5      [10]    ?lstr16_SLAVE_32FIRMWARE
0x00BF      [17]    _hello
0x00D0       [4]    _UART_Wr_Ptr
0x00D4       [0]    __Lib_Lcd_cmd_status
0x00D5       [4]    _ADC_Get_Sample_Ptr
0x00D9       [4]    _UART_Rd_Ptr
0x00DD       [4]    _UART_Tx_Idle_Ptr
0x00E1       [4]    _UART_Rdy_Ptr
0x00E5      [10]    _tosend
0x00EF       [2]    _gas_int
0x00F1       [2]    _temp_res
0x00F3      [17]    _BUFFER
0x0104       [1]    FARG_to_send_x
0x0104       [2]    FARG_conv_t
0x0106       [1]    FARG_conv_x
0x0107       [6]    conv_txt_L0
0x010D       [2]    FARG_memset_p1
0x010D       [2]    FARG_UART1_Write_Text_uart_text
0x010D       [1]    FARG_ADC_Read_channel
0x010F       [1]    FARG_memset_character
0x010F       [1]    UART1_Write_Text_data__L0
0x0110       [2]    FARG_memset_n
0x0110       [1]    UART1_Write_Text_counter_L0
0x0112       [1]    FARG_Lcd_Out_row
0x0112       [1]    FARG_UART1_Write_data_
0x0113       [1]    FARG_Lcd_Out_column
0x0114       [2]    FARG_Lcd_Out_text
0x0116       [1]    Lcd_Out_i_L0
0x0117       [1]    FARG_Lcd_Chr_CP_out_char
0x0118       [1]    FARG_Lcd_Cmd_out_char
0x0119       [2]    FARG_UART1_Read_Text_Output
0x011B       [2]    FARG_UART1_Read_Text_Delimiter
0x011D       [1]    FARG_UART1_Read_Text_Attempts
0x011E       [1]    UART1_Read_Text_r_data_L0
0x011F       [1]    UART1_Read_Text_out_idx_L0
0x0120       [1]    UART1_Read_Text_delim_idx_L0
0x0F80       [0]    AN4_bit
0x0F80       [0]    AN3_bit
0x0F80       [0]    AN2_bit
0x0F80       [0]    SS_bit
0x0F80       [0]    CLKO_bit
0x0F80       [0]    LVDIN_bit
0x0F80       [0]    T0CKI_bit
0x0F80       [0]    OSC2_bit
0x0F80       [0]    VREFM_bit
0x0F80       [0]    VREFP_bit
0x0F80       [0]    RA3_bit
0x0F80       [1]    PORTA
0x0F80       [0]    RA2_bit
0x0F80       [0]    RA6_bit
0x0F80       [0]    RA5_bit
0x0F80       [0]    RA4_bit
0x0F80       [0]    AN0_bit
0x0F80       [0]    AN1_bit
0x0F80       [0]    RA0_bit
0x0F80       [0]    RA1_bit
0x0F81       [0]    LCD_EN
0x0F81       [0]    RB0_bit
0x0F81       [0]    LCD_RS
0x0F81       [0]    LCD_D4
0x0F81       [0]    LCD_D7
0x0F81       [0]    LCD_D6
0x0F81       [0]    LCD_D5
0x0F81       [0]    RB5_bit
0x0F81       [0]    RB6_bit
0x0F81       [0]    RB7_bit
0x0F81       [0]    RB4_bit
0x0F81       [0]    RB1_bit
0x0F81       [0]    RB2_bit
0x0F81       [0]    RB3_bit
0x0F81       [0]    INT2_bit
0x0F81       [0]    CCP2A_bit
0x0F81       [0]    INT1_bit
0x0F81       [0]    INT0_bit
0x0F81       [1]    PORTB
0x0F81       [0]    CCP2_PORTB_bit
0x0F81       [0]    PGC_bit
0x0F81       [0]    PGM_bit
0x0F81       [0]    PGD_bit
0x0F82       [0]    SCK_bit
0x0F82       [0]    RC6_bit
0x0F82       [0]    SDI_bit
0x0F82       [0]    T1OSO_bit
0x0F82       [0]    T1OSI_bit
0x0F82       [0]    RC7_bit
0x0F82       [1]    PORTC
0x0F82       [0]    RC5_bit
0x0F82       [0]    CCP2_PORTC_bit
0x0F82       [0]    RC4_bit
0x0F82       [0]    T1CKI_bit
0x0F82       [0]    SDO_bit
0x0F82       [0]    TX_bit
0x0F82       [0]    RX__bit
0x0F82       [0]    CCP1_bit
0x0F82       [0]    RC1_bit
0x0F82       [0]    CK_bit
0x0F82       [0]    RC0_bit
0x0F82       [0]    SDA_bit
0x0F82       [0]    SCL_bit
0x0F82       [0]    RC3_bit
0x0F82       [0]    RC2_bit
0x0F89       [1]    LATA
0x0F89       [0]    LATA4_bit
0x0F89       [0]    LATA5_bit
0x0F89       [0]    LATA6_bit
0x0F89       [0]    LATA3_bit
0x0F89       [0]    LATA0_bit
0x0F89       [0]    LATA1_bit
0x0F89       [0]    LATA2_bit
0x0F8A       [1]    LATB
0x0F8A       [0]    LATB6_bit
0x0F8A       [0]    LATB7_bit
0x0F8A       [0]    LATB4_bit
0x0F8A       [0]    LATB5_bit
0x0F8A       [0]    LATB1_bit
0x0F8A       [0]    LATB0_bit
0x0F8A       [0]    LATB3_bit
0x0F8A       [0]    LATB2_bit
0x0F8B       [0]    LATC7_bit
0x0F8B       [0]    LATC4_bit
0x0F8B       [0]    LATC0_bit
0x0F8B       [1]    LATC
0x0F8B       [0]    LATC1_bit
0x0F8B       [0]    LATC2_bit
0x0F8B       [0]    LATC3_bit
0x0F8B       [0]    LATC6_bit
0x0F8B       [0]    LATC5_bit
0x0F92       [0]    TRISA1_bit
0x0F92       [0]    TRISA6_bit
0x0F92       [1]    TRISA
0x0F92       [0]    TRISA5_bit
0x0F92       [0]    TRISA2_bit
0x0F92       [0]    TRISA3_bit
0x0F92       [0]    TRISA0_bit
0x0F92       [0]    TRISA4_bit
0x0F93       [0]    LCD_D5_Direction
0x0F93       [0]    LCD_D6_Direction
0x0F93       [0]    LCD_D7_Direction
0x0F93       [0]    LCD_RS_Direction
0x0F93       [0]    LCD_EN_Direction
0x0F93       [0]    LCD_D4_Direction
0x0F93       [0]    TRISB1_bit
0x0F93       [0]    TRISB2_bit
0x0F93       [0]    TRISB0_bit
0x0F93       [0]    CCP2_TRISB_bit
0x0F93       [1]    TRISB
0x0F93       [0]    TRISB6_bit
0x0F93       [0]    TRISB7_bit
0x0F93       [0]    TRISB5_bit
0x0F93       [0]    TRISB3_bit
0x0F93       [0]    TRISB4_bit
0x0F94       [1]    TRISC
0x0F94       [0]    TRISC5_bit
0x0F94       [0]    TRISC4_bit
0x0F94       [0]    CCP2_TRISC_bit
0x0F94       [0]    TRISC6_bit
0x0F94       [0]    TRISC1_bit
0x0F94       [0]    TRISC0_bit
0x0F94       [0]    TRISC3_bit
0x0F94       [0]    TRISC2_bit
0x0F94       [0]    TRISC7_bit
0x0F9D       [0]    TXIE_bit
0x0F9D       [1]    PIE1
0x0F9D       [0]    ADIE_bit
0x0F9D       [0]    RCIE_bit
0x0F9D       [0]    TMR2IE_bit
0x0F9D       [0]    TMR1IE_bit
0x0F9D       [0]    SSPIE_bit
0x0F9D       [0]    CCP1IE_bit
0x0F9E       [0]    CCP1IF_bit
0x0F9E       [0]    TMR2IF_bit
0x0F9E       [0]    TMR1IF_bit
0x0F9E       [0]    SSPIF_bit
0x0F9E       [0]    ADIF_bit
0x0F9E       [0]    RCIF_bit
0x0F9E       [0]    TXIF_bit
0x0F9E       [1]    PIR1
0x0F9F       [0]    SSPIP_bit
0x0F9F       [1]    IPR1
0x0F9F       [0]    RCIP_bit
0x0F9F       [0]    TXIP_bit
0x0F9F       [0]    TMR1IP_bit
0x0F9F       [0]    TMR2IP_bit
0x0F9F       [0]    CCP1IP_bit
0x0F9F       [0]    ADIP_bit
0x0FA0       [0]    LVDIE_bit
0x0FA0       [0]    BCLIE_bit
0x0FA0       [0]    EEIE_bit
0x0FA0       [1]    PIE2
0x0FA0       [0]    TMR3IE_bit
0x0FA0       [0]    CCP2IE_bit
0x0FA1       [0]    BCLIF_bit
0x0FA1       [1]    PIR2
0x0FA1       [0]    LVDIF_bit
0x0FA1       [0]    TMR3IF_bit
0x0FA1       [0]    CCP2IF_bit
0x0FA1       [0]    EEIF_bit
0x0FA2       [0]    TMR3IP_bit
0x0FA2       [0]    CCP2IP_bit
0x0FA2       [0]    EEIP_bit
0x0FA2       [0]    LVDIP_bit
0x0FA2       [0]    BCLIP_bit
0x0FA2       [1]    IPR2
0x0FA6       [0]    WRERR_bit
0x0FA6       [0]    WREN_bit
0x0FA6       [0]    RD_bit
0x0FA6       [1]    EECON1
0x0FA6       [0]    WR_bit
0x0FA6       [0]    FREE_bit
0x0FA6       [0]    CFGS_bit
0x0FA6       [0]    EEPGD_bit
0x0FA7       [1]    EECON2
0x0FA8       [1]    EEDATA
0x0FA9       [1]    EEADR
0x0FAB       [1]    RCSTA
0x0FAB       [0]    CREN_bit
0x0FAB       [0]    RCD8_bit
0x0FAB       [0]    RX9_bit
0x0FAB       [0]    SPEN_bit
0x0FAB       [0]    SREN_bit
0x0FAB       [0]    ADDEN_bit
0x0FAB       [0]    RC8_9_bit
0x0FAB       [0]    RX9D_bit
0x0FAB       [0]    RC9_bit
0x0FAB       [0]    OERR_bit
0x0FAB       [0]    FERR_bit
0x0FAB       [0]    NOT_RC8_bit
0x0FAC       [0]    NOT_TX8_bit
0x0FAC       [0]    TXEN_bit
0x0FAC       [0]    TX9_bit
0x0FAC       [1]    TXSTA
0x0FAC       [0]    BRGH_bit
0x0FAC       [0]    SYNC_bit
0x0FAC       [0]    TXD8_bit
0x0FAC       [0]    TX8_9_bit
0x0FAC       [0]    TRMT_bit
0x0FAC       [0]    CSRC_bit
0x0FAC       [0]    TX9D_bit
0x0FAD       [1]    TXREG
0x0FAE       [1]    RCREG
0x0FAF       [1]    SPBRG
0x0FB1       [0]    T3CCP2_bit
0x0FB1       [0]    T3SYNC_bit
0x0FB1       [0]    T3CKPS0_bit
0x0FB1       [0]    T3CKPS1_bit
0x0FB1       [0]    T3INSYNC_bit
0x0FB1       [0]    RD16_bit
0x0FB1       [0]    NOT_T3SYNC_bit
0x0FB1       [0]    TMR3ON_bit
0x0FB1       [0]    TMR3CS_bit
0x0FB1       [1]    T3CON
0x0FB1       [0]    T3CCP1_bit
0x0FB2       [1]    TMR3L
0x0FB3       [1]    TMR3H
0x0FBA       [0]    CCP2X_bit
0x0FBA       [0]    CCP2M0_bit
0x0FBA       [1]    CCP2CON
0x0FBA       [0]    DCCPX_bit
0x0FBA       [0]    CCP2Y_bit
0x0FBA       [0]    DC2B0_bit
0x0FBA       [0]    DC2B1_bit
0x0FBA       [0]    CCP2M3_bit
0x0FBA       [0]    CCP2M1_bit
0x0FBA       [0]    CCP2M2_bit
0x0FBB       [2]    CCPR2
0x0FBB       [1]    CCPR2L
0x0FBC       [1]    CCPR2H
0x0FBD       [0]    CCP1M3_bit
0x0FBD       [0]    DC1B1_bit
0x0FBD       [0]    DC1B0_bit
0x0FBD       [0]    CCP1M2_bit
0x0FBD       [0]    CCP1M1_bit
0x0FBD       [1]    CCP1CON
0x0FBD       [0]    CCP1Y_bit
0x0FBD       [0]    CCP1M0_bit
0x0FBD       [0]    CCP1X_bit
0x0FBE       [1]    CCPR1L
0x0FBE       [2]    CCPR1
0x0FBF       [1]    CCPR1H
0x0FC1       [0]    ADFM_bit
0x0FC1       [0]    PCFG0_bit
0x0FC1       [0]    PCFG1_bit
0x0FC1       [0]    ADCS2_bit
0x0FC1       [1]    ADCON1
0x0FC1       [0]    PCFG2_bit
0x0FC1       [0]    PCFG3_bit
0x0FC2       [0]    ADCS0_bit
0x0FC2       [0]    CHS1_bit
0x0FC2       [1]    ADCON0
0x0FC2       [0]    DONE_bit
0x0FC2       [0]    GO_DONE_bit
0x0FC2       [0]    CHS2_bit
0x0FC2       [0]    NOT_DONE_bit
0x0FC2       [0]    ADCS1_bit
0x0FC2       [0]    ADON_bit
0x0FC2       [0]    CHS0_bit
0x0FC2       [0]    GO_bit
0x0FC2       [0]    GO_NOT_DONE_bit
0x0FC3       [2]    ADRES
0x0FC3       [1]    ADRESL
0x0FC4       [1]    ADRESH
0x0FC5       [0]    GCEN_bit
0x0FC5       [0]    SEN_bit
0x0FC5       [0]    RSEN_bit
0x0FC5       [0]    ACKSTAT_bit
0x0FC5       [0]    RCEN_bit
0x0FC5       [0]    PEN_bit
0x0FC5       [0]    ACKDT_bit
0x0FC5       [0]    ACKEN_bit
0x0FC5       [1]    SSPCON2
0x0FC6       [0]    CKP_bit
0x0FC6       [1]    SSPCON1
0x0FC6       [0]    SSPM3_bit
0x0FC6       [0]    SSPM2_bit
0x0FC6       [0]    SSPEN_bit
0x0FC6       [0]    SSPM0_bit
0x0FC6       [0]    WCOL_bit
0x0FC6       [0]    SSPM1_bit
0x0FC6       [0]    SSPOV_bit
0x0FC7       [0]    NOT_ADDRESS_bit
0x0FC7       [0]    S_bit
0x0FC7       [0]    P_bit
0x0FC7       [0]    R_W_bit
0x0FC7       [0]    NOT_WRITE_bit
0x0FC7       [0]    NOT_W_bit
0x0FC7       [0]    DATA_ADDRESS_bit
0x0FC7       [0]    NOT_A_bit
0x0FC7       [0]    I2C_STOP__bit
0x0FC7       [0]    I2C_DATA_bit
0x0FC7       [0]    BF_bit
0x0FC7       [1]    SSPSTAT
0x0FC7       [0]    UA_bit
0x0FC7       [0]    R_bit
0x0FC7       [0]    READ_WRITE_bit
0x0FC7       [0]    R_NOT_W_bit
0x0FC7       [0]    D_A_bit
0x0FC7       [0]    I2C_DAT_bit
0x0FC7       [0]    D_bit
0x0FC7       [0]    D_NOT_A_bit
0x0FC7       [0]    I2C_READ_bit
0x0FC7       [0]    I2C_START__bit
0x0FC7       [0]    CKE_bit
0x0FC7       [0]    SMP_bit
0x0FC8       [1]    SSPADD
0x0FC9       [1]    SSPBUF
0x0FCA       [0]    TMR2ON_bit
0x0FCA       [0]    TOUTPS2_bit
0x0FCA       [0]    TOUTPS0_bit
0x0FCA       [0]    T2CKPS0_bit
0x0FCA       [0]    TOUTPS1_bit
0x0FCA       [1]    T2CON
0x0FCA       [0]    T2CKPS1_bit
0x0FCA       [0]    TOUTPS3_bit
0x0FCB       [1]    PR2
0x0FCC       [1]    TMR2
0x0FCD       [0]    NOT_T1SYNC_bit
0x0FCD       [0]    T1OSCEN_bit
0x0FCD       [0]    TMR1ON_bit
0x0FCD       [0]    T1SYNC_bit
0x0FCD       [0]    RD16_T1CON_bit
0x0FCD       [1]    T1CON
0x0FCD       [0]    T1INSYNC_bit
0x0FCD       [0]    T1CKPS1_bit
0x0FCD       [0]    T1CKPS0_bit
0x0FCD       [0]    TMR1CS_bit
0x0FCE       [1]    TMR1L
0x0FCF       [1]    TMR1H
0x0FD0       [0]    NOT_IPEN_bit
0x0FD0       [0]    NOT_RI_bit
0x0FD0       [0]    BOR_bit
0x0FD0       [0]    IPEN_bit
0x0FD0       [0]    NOT_TO_bit
0x0FD0       [0]    NOT_BOR_bit
0x0FD0       [1]    RCON
0x0FD0       [0]    NOT_PD_bit
0x0FD0       [0]    NOT_POR_bit
0x0FD0       [0]    POR_bit
0x0FD0       [0]    TO__bit
0x0FD0       [0]    RI_bit
0x0FD0       [0]    PD_bit
0x0FD1       [1]    WDTCON
0x0FD1       [0]    SWDTEN_bit
0x0FD1       [0]    SWDTE_bit
0x0FD2       [0]    LVDEN_bit
0x0FD2       [0]    LVDL1_bit
0x0FD2       [0]    IRVST_bit
0x0FD2       [0]    LVDL0_bit
0x0FD2       [0]    LVDL3_bit
0x0FD2       [1]    LVDCON
0x0FD2       [0]    LVDL2_bit
0x0FD3       [1]    OSCCON
0x0FD3       [0]    SCS_bit
0x0FD5       [0]    T0PS1_bit
0x0FD5       [0]    TMR0ON_bit
0x0FD5       [0]    T0SE_bit
0x0FD5       [0]    T0CS_bit
0x0FD5       [0]    T0PS0_bit
0x0FD5       [0]    T08BIT_bit
0x0FD5       [1]    T0CON
0x0FD5       [0]    PSA_bit
0x0FD5       [0]    T0PS2_bit
0x0FD6       [1]    TMR0L
0x0FD7       [1]    TMR0H
0x0FD8       [1]    STATUS
0x0FD8       [0]    C_bit
0x0FD8       [0]    N_bit
0x0FD8       [0]    Z_bit
0x0FD8       [0]    OV_bit
0x0FD8       [0]    DC_bit
0x0FD9       [1]    FSR2L
0x0FD9       [2]    FSR2PTR
0x0FD9       [2]    FSR2
0x0FDA       [1]    FSR2H
0x0FDB       [1]    PLUSW2
0x0FDC       [1]    PREINC2
0x0FDD       [1]    POSTDEC2
0x0FDE       [1]    POSTINC2
0x0FDF       [1]    INDF2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE1       [2]    FSR1
0x0FE1       [2]    FSR1PTR
0x0FE2       [1]    FSR1H
0x0FE3       [1]    PLUSW1
0x0FE4       [1]    PREINC1
0x0FE5       [1]    POSTDEC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [2]    FSR0
0x0FE9       [1]    FSR0L
0x0FE9       [2]    FSR0PTR
0x0FEA       [1]    FSR0H
0x0FEB       [1]    PLUSW0
0x0FEC       [1]    PREINC0
0x0FED       [1]    POSTDEC0
0x0FEE       [1]    POSTINC0
0x0FEF       [1]    INDF0
0x0FF0       [0]    INT1P_bit
0x0FF0       [0]    INT1E_bit
0x0FF0       [0]    INT1IF_bit
0x0FF0       [0]    INT2E_bit
0x0FF0       [0]    INT1IP_bit
0x0FF0       [0]    INT2F_bit
0x0FF0       [0]    INT2P_bit
0x0FF0       [0]    INT2IP_bit
0x0FF0       [0]    INT1F_bit
0x0FF0       [0]    INT2IF_bit
0x0FF0       [0]    INT1IE_bit
0x0FF0       [1]    INTCON3
0x0FF0       [0]    INT2IE_bit
0x0FF1       [0]    TMR0IP_bit
0x0FF1       [0]    INTEDG0_bit
0x0FF1       [0]    RBIP_bit
0x0FF1       [1]    INTCON2
0x0FF1       [0]    INTEDG1_bit
0x0FF1       [0]    NOT_RBPU_bit
0x0FF1       [0]    T0IP_bit
0x0FF1       [0]    RBPU_bit
0x0FF1       [0]    INTEDG2_bit
0x0FF2       [0]    INT0E_bit
0x0FF2       [0]    T0IF_bit
0x0FF2       [0]    INT0F_bit
0x0FF2       [0]    GIE_GIEH_bit
0x0FF2       [0]    GIEH_bit
0x0FF2       [0]    PEIE_GIEL_bit
0x0FF2       [0]    TMR0IE_bit
0x0FF2       [0]    GIEL_bit
0x0FF2       [0]    T0IE_bit
0x0FF2       [0]    PEIE_bit
0x0FF2       [0]    GIE_bit
0x0FF2       [0]    RBIE_bit
0x0FF2       [0]    INT0IE_bit
0x0FF2       [0]    TMR0IF_bit
0x0FF2       [0]    INT0IF_bit
0x0FF2       [0]    RBIF_bit
0x0FF2       [1]    INTCON
0x0FF2       [1]    INTCON1
0x0FF3       [1]    PRODL
0x0FF3       [2]    PROD
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF6       [3]    TBLPTR
0x0FF7       [1]    TBLPTRH
0x0FF8       [0]    TBLPTRU3_bit
0x0FF8       [0]    TBLPTRU0_bit
0x0FF8       [0]    TBLPTRU1_bit
0x0FF8       [0]    TBLPTRU2_bit
0x0FF8       [1]    TBLPTRU
0x0FF8       [0]    ACSS_bit
0x0FF8       [0]    TBLPTRU4_bit
0x0FF9       [1]    PC
0x0FF9       [1]    PCL
0x0FFA       [1]    PCLATH
0x0FFB       [0]    PCU0_bit
0x0FFB       [0]    PCU1_bit
0x0FFB       [0]    PCU4_bit
0x0FFB       [1]    PCLATU
0x0FFB       [0]    PCU2_bit
0x0FFB       [0]    PCU3_bit
0x0FFC       [0]    STKPTR3_bit
0x0FFC       [0]    STKPTR4_bit
0x0FFC       [0]    STKOVF_bit
0x0FFC       [0]    STKPTR0_bit
0x0FFC       [0]    STKPTR1_bit
0x0FFC       [0]    STKPTR2_bit
0x0FFC       [0]    SP3_bit
0x0FFC       [0]    SP4_bit
0x0FFC       [1]    STKPTR
0x0FFC       [0]    SP0_bit
0x0FFC       [0]    SP1_bit
0x0FFC       [0]    SP2_bit
0x0FFC       [0]    STKFUL_bit
0x0FFC       [0]    STKUNF_bit
0x0FFD       [1]    TOSL
0x0FFE       [1]    TOSH
0x0FFF       [1]    TOSU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x1454       [4]    ?ICS?lstr8_SLAVE_32FIRMWARE
0x1458       [3]    ?ICS?lstr7_SLAVE_32FIRMWARE
0x145B       [4]    ?ICS?lstr6_SLAVE_32FIRMWARE
0x145F       [3]    ?ICS?lstr9_SLAVE_32FIRMWARE
0x1462       [4]    ?ICS?lstr12_SLAVE_32FIRMWARE
0x1466       [3]    ?ICS?lstr11_SLAVE_32FIRMWARE
0x1469       [4]    ?ICS?lstr10_SLAVE_32FIRMWARE
0x146D      [12]    ?ICS?lstr14_SLAVE_32FIRMWARE
0x1479       [2]    ?ICS_i
0x147B      [15]    ?ICS?lstr3_SLAVE_32FIRMWARE
0x148A       [3]    ?ICS?lstr5_SLAVE_32FIRMWARE
0x148D       [4]    ?ICS?lstr4_SLAVE_32FIRMWARE
0x1491       [1]    ?ICS_state
0x1492       [3]    ?ICS?lstr13_SLAVE_32FIRMWARE
0x1495       [2]    ?ICS?lstr1_SLAVE_32FIRMWARE
0x1497      [32]    ?ICS?lstr18_SLAVE_32FIRMWARE
0x14B7      [15]    ?ICS?lstr17_SLAVE_32FIRMWARE
0x14C6       [7]    ?ICS?lstr19_SLAVE_32FIRMWARE
0x14CD       [2]    ?ICS?lstr22_SLAVE_32FIRMWARE
0x14CF       [7]    ?ICS?lstr21_SLAVE_32FIRMWARE
0x14D6       [2]    ?ICS?lstr20_SLAVE_32FIRMWARE
0x14D8      [16]    ?ICS?lstr15_SLAVE_32FIRMWARE
0x14E8       [6]    ?ICS?lstr2_SLAVE_32FIRMWARE
0x14EE      [10]    ?ICS?lstr16_SLAVE_32FIRMWARE
//** Label List: ** 
//----------------------------------------------
  L_play0
  L_play1
  L_recv2
  L_GT3
  L_disp_status4
  L_disp_status5
  L_disp_status6
  L_disp_status7
  L_disp_status8
  L_disp_status9
  L_disp_status10
  L_disp_status11
  L_disp_status12
  L_disp_status13
  L_to_send14
  L_to_send15
  L_to_send16
  L_to_send17
  L_to_send18
  L_to_send19
  L_to_send20
  L_show_ip21
  L_show_ip22
  L_show_ip23
  L_show_ip24
  L_check_status25
  L_check_status26
  L_check_status27
  L_check_status28
  L_check_status29
  L_check_status30
  L_interrupt31
  L_interrupt32
  L_interrupt33
  L_interrupt34
  L_interrupt35
  L_interrupt36
  L_interrupt37
  L_main38
  L_main39
  L_main40
  L_main41
  L_main42
  L_main43
  L_main44
  L_main45
  L_main46
  L_main47
  L_main48
  L_main49
  L_main50
  L_main51
  L_main52
  L_main53
  L_main54
  L_main55
  L_main56
  L_main57
  L_main58
  ___main_label
  L_main59
  L_main60
  L_main61
  L_main62
  L_main63
  L_main64
  L_main65
  L_main66
  L_main67
  L_main68
  L_main69
  L_main70
  L_main71
  L_main72
  ___main_labeL1
  L_main73
  L_main74
  L_main75
  L_main76
  L_main77
  L_main78
  L_main79
  L_main80
  L_main81
  L_main82
  L_main83
  L_main84
  L_main85
  L_main86
  L_main87
  L_main88
  L_main89
  L_main90
  L_main91
  L_main92
  L_main93
  L_main94
  L_main95
  L_main96
  L_main97
  L_main98
  L_main99
  L_main100
  L_main101
  L_main102
  L_main103
  L_main104
  L_main105
  L_main106
  L_main107
  L_main108
  L_main109
  L_main110
  L_main111
  L_main112
  L_main113
  L_main114
  L_main115
  L_main116
  L_main117
  L_main118
  L_main119
  L_main120
  L_main121
  L_main122
  L_main123
  L_main124
  L_main125
  L_main126
  L_main127
  L_main128
  L_main129
  L_main130
  L_main131
  L_main132
  L_main133
  L_main134
  L_main135
  L_main136
  L_main137
  L_main138
  L_main139
  L_main140
  L_main141
  L_main142
  L_main143
  L_main144
  L_main145
  L_main146
  L_main147
  L_main148
  L_main149
  L_main150
  L_main151
  L_main152
  L_main153
  L_main154
  L__interrupt155
  L__interrupt156
  L__main157
  L__main158
  L__main159
  L__main160
  L__main161
  L__main162
  L__main163
  L__main164
  L__main165
  L__main166
  L__main167
  L__main168
  L__main169
  L__main170
  L__main171
  L__main172
  L__main173
  L__main174
  L__main175
  _clr
  _play
  _recv
  _GT
  _conv
  _disp_status
  _to_send
  L__to_send176
  L__to_send177
  L__to_send178
  _show_ip
  L__show_ip179
  _check_status
  L__check_status180
  L__check_status181
  _interrupt
  L__interrupt182
  _main
  L__main183
  L__main184
  L__main185
  L__main186
  L__main187
  L__main188
  L__main189
  L__main190
  L__main191
  L__main192
  L__main193
  L_ADC_Get_Sample0
  L_ADC_Get_Sample1
  L_ADC_Read2
  L_ADC_Read3
  L_end_ADC_Init
  _ADC_Init
  L_end_ADC_Get_Sample
  _ADC_Get_Sample
  L_end_ADC_Read
  _ADC_Read
  L_memchr0
  L_memchr1
  L_memchr2
  L_memchr3
  L_memcmp4
  L_memcmp5
  L_memcmp6
  L_memcpy7
  L_memcpy8
  L_memmove9
  L_memmove10
  L_memmove11
  L_memmove12
  L_memmove13
  L_memmove14
  L_memmove15
  L_memmove16
  L_memmove17
  L_memmove18
  L_memmove19
  L_memset20
  L_memset21
  L_strcat22
  L_strcat23
  L_strcat24
  L_strcat25
  L_strchr26
  L_strchr27
  L_strchr28
  L_strchr29
  L_strcmp30
  L_strcmp31
  L_strcmp32
  L_strcmp33
  L_strcpy34
  L_strcpy35
  L_strlen36
  L_strlen37
  L_strncat38
  L_strncat39
  L_strncat40
  L_strncat41
  L_strncat42
  L_strncat43
  L_strncat44
  L_strncpy45
  L_strncpy46
  L_strncpy47
  L_strncpy48
  L_strncpy49
  L_strspn50
  L_strspn51
  L_strspn52
  L_strspn53
  L_strcspn54
  L_strcspn55
  L_strcspn56
  L_strcspn57
  L_strncmp58
  L_strncmp59
  L_strncmp60
  L_strncmp61
  L_strncmp62
  L_strpbrk63
  L_strpbrk64
  L_strpbrk65
  L_strrchr66
  L_strrchr67
  L_strrchr68
  L_strrchr69
  L_strstr70
  L_strstr71
  L_strstr72
  L_strstr73
  L_strstr74
  L_strtok75
  L_strtok76
  L_strtok77
  L_strtok78
  L_strtok79
  L__memmove80
  L__strcmp81
  L__strncat82
  L__strspn83
  L__strcspn84
  L__strncmp85
  L__strstr86
  L_end_memchr
  _memchr
  L_end_memcmp
  _memcmp
  L__memcmp89
  L_end_memcpy
  _memcpy
  L_end_memmove
  _memmove
  L__memmove92
  L__memmove93
  L_end_memset
  _memset
  L_end_strcat
  _strcat
  L_end_strchr
  _strchr
  L_end_strcmp
  _strcmp
  L_end_strcpy
  _strcpy
  L_end_strlen
  _strlen
  L_end_strncat
  _strncat
  L__strncat101
  L_end_strncpy
  _strncpy
  L_end_strspn
  _strspn
  L__strspn104
  L_end_strcspn
  _strcspn
  L__strcspn106
  L_end_strncmp
  _strncmp
  L_end_strpbrk
  _strpbrk
  L_end_strrchr
  _strrchr
  L__strrchr110
  L_end_strstr
  _strstr
  L__strstr112
  L__strstr113
  L_end_strtok
  _strtok
  L__strtok115
  L_Delay_10us0
  L_Delay_22us1
  L_Delay_50us2
  L_Delay_80us3
  L_Delay_500us4
  L_Delay_5500us5
  L_Delay_1ms6
  L_Delay_5ms7
  L_Delay_8ms8
  L_Delay_100ms9
  L_Delay_10ms10
  L_Delay_1sec11
  L____Boot_Delay4k12
  L____Boot_Delay8k13
  L____Boot_Delay12k14
  L____Boot_Delay16k15
  L____Boot_Delay24k16
  L____Boot_Delay32k17
  L____Boot_Delay48k18
  L____Boot_Delay64k19
  L____Boot_Delay128k20
  L_Delay_Cyc21
  L_Delay_Cyc22
  L_VDelay_ms23
  L_VDelay_ms24
  L_VDelay_ms25
  L_VDelay_Advanced_ms26
  L_VDelay_Advanced_ms27
  L_VDelay_Advanced_ms28
  _Get_Fosc_kHz
  _Delay_1us
  _Delay_10us
  _Delay_22us
  _Delay_50us
  _Delay_80us
  _Delay_500us
  _Delay_5500us
  _Delay_1ms
  _Delay_5ms
  _Delay_8ms
  _Delay_100ms
  _Delay_10ms
  _Delay_1sec
  ____Boot_Delay4k
  ____Boot_Delay8k
  ____Boot_Delay12k
  ____Boot_Delay16k
  ____Boot_Delay24k
  ____Boot_Delay32k
  ____Boot_Delay48k
  ____Boot_Delay64k
  ____Boot_Delay128k
  _Delay_Cyc
  _VDelay_ms
  L__VDelay_ms29
  L__VDelay_ms30
  L__VDelay_ms31
  _VDelay_Advanced_ms
  L__VDelay_Advanced_ms32
  L__VDelay_Advanced_ms33
  L__VDelay_Advanced_ms34
  L_Lcd_Cmd0
  L_Lcd_Cmd1
  L_Lcd_Out_CP2
  L_Lcd_Out_CP3
  L_Lcd_Chr4
  L_Lcd_Chr5
  L_Lcd_Chr6
  L_Lcd_Chr7
  L_Lcd_Chr8
  L_Lcd_Chr9
  L_Lcd_Chr10
  L_Lcd_Out11
  L_Lcd_Out12
  L_Lcd_Out13
  L_Lcd_Out14
  L_Lcd_Out15
  L_Lcd_Out16
  L_Lcd_Out17
  L_Lcd_Out18
  L_Lcd_Out19
  L_end_Lcd_Cmd
  _Lcd_Cmd
  L__Lcd_Cmd21
  L__Lcd_Cmd22
  L__Lcd_Cmd23
  L__Lcd_Cmd24
  L__Lcd_Cmd25
  L__Lcd_Cmd26
  L__Lcd_Cmd27
  L__Lcd_Cmd28
  L__Lcd_Cmd29
  L__Lcd_Cmd30
  L__Lcd_Cmd31
  L__Lcd_Cmd32
  L__Lcd_Cmd33
  L__Lcd_Cmd34
  L__Lcd_Cmd35
  L__Lcd_Cmd36
  L__Lcd_Cmd37
  L__Lcd_Cmd38
  L__Lcd_Cmd39
  L__Lcd_Cmd40
  L_end_Lcd_Chr_CP
  _Lcd_Chr_CP
  L_end_Lcd_Out_CP
  _Lcd_Out_CP
  L_end_Lcd_Chr
  _Lcd_Chr
  L_end_Lcd_Init
  _Lcd_Init
  L_end_Lcd_Out
  _Lcd_Out
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  L_end_Div_8x8_U
  _Div_8x8_U
  L_end_Div_16x16_U
  _Div_16x16_U
  L_end_Div_16x16_S_L
  _Div_16x16_S_L
  L_end_Div_16x16_S
  _Div_16x16_S
  L_end_Div_8x8_S
  _Div_8x8_S
  L_end_Mul_8x8_S
  _Mul_8x8_S
  L_end_Mul_16x16_U
  _Mul_16x16_U
  L_end_Mul_16x16_S
  _Mul_16x16_S
  L_end_SDIV3232L
  _SDIV3232L
  L_end_COMFREM
  _COMFREM
  L_end_Div_32x32_S
  _Div_32x32_S
  L_end_Div_32x32_U
  _Div_32x32_U
  L_end_Mul_32x32_U
  _Mul_32x32_U
  L_end_Mul_32x32_S
  _Mul_32x32_S
  SETFOV32EEE
  SETFUN32EEE
  NRMRND4032
  NRM40JPSETFOV32
  NRM4032
  NRM4032A
  TNIB4032
  NORM4032
  TNORMUN4032
  NRM40JPSETFUN32
  NRM40JPFIXSIGN32
  NRM4032B
  TNIB4032A
  NORM4032A
  NRM4032C
  TNIB4032B
  NORM4032B
  NRM40JPRES032
  TNIB4032C
  NORM4032C
  NRM40EEE
  NORM3232
  JPNRES032
  JPNSETFUN32
  NORM3232A
  JMPNFIXSIGN32
  NORM32EEE
  SETIOV3224EEE
  FPA32
  USEA32
  USEB32
  BRETURN32
  BLIGNED32
  BNIB32
  BNIB32A
  BNIB32B
  BNIB32C
  ADDEOK
  BLOOP32C
  BLOOP32B
  BLOOP32A
  BLOOP32
  AOK32
  BNE032
  ALIGNED32
  ANIB32
  ANIB32A
  ANIB32B
  ANIB32C
  ALOOP32C
  ALOOP32B
  ALOOP32A
  ALOOP32
  ACOMP32
  ADDJPNRMRND4032
  ADDJPSETFOV32
  ADDJPNRM4032
  ADDEEE
  FPS32
  FPM32
  MULJPRES032
  M32BNE0
  MTUN32
  MULJPSETFOV32
  MOK32
  MULJPSETFUN32
  MROUND32
  MUL32OK
  MULEEE
  L_Div_32x32_FP11
  L_Div_32x32_FP12
  L_Div_32x32_FP13
  L_Div_32x32_FP14
  FPD32
  JPDSETFDZ32
  JPDRES032
  D32BNE0
  TALIGN32
  TS1ALIGN32
  TS2ALIGN32
  DALIGN32OK
  ALTB32
  AGEB32
  JPDSETFOV32
  DARGOK32
  JPDSETFUN32
  DLOOP32
  DS132
  DS232
  DREST32
  DOK32
  DAREST32
  DROUND32
  DIV32OK
  DIV32EEE
  INT3232U
  INT3232UEOK
  SETEXP32U
  SETIOV32U
  TSHIFT3232U
  SHIFT3232UOK
  SHIFT3232U
  INT3232UOK
  JPLSETIOV3224
  IRES032U
  INT3232UEER
  INT3232UEEE
  INT3232
  INT3232EOK
  SETIOV32
  TSHIFT3232
  SHIFT3232OK
  SHIFT3232
  INT3232OK
  JPISETIOV3224
  IRES032
  INT3232EER
  INT3232EEE
  INT3216
  IRES016
  SETIOV16
  TSHIFT3216
  SHIFT3216OK
  SHIFT3216
  INT3216OK
  JPJSETIOV3224
  INT3216EOK
  INT3216EER
  INT3216EEE
  INT3216U
  IRES016U
  SETEXP16U
  SETIOV16U
  TSHIFT3216U
  SHIFT3216UOK
  SHIFT3216U
  INT3216UOK
  JPKSETIOV3224
  INT3216UEOK
  INT3216UEER
  INT3216UEEE
  INT32U08
  IRES008
  SETEXP08
  SETIOV08
  TSHIFT3208
  SHIFT3208OK
  SHIFT3208
  INT3208OK
  D2B_JPKSETIOV3224
  INT3208EOK
  INT3208EER
  INT3208EEE
  FLO08U32
  FLO1632
  FLO1632EEE
  FLO16U32
  FLO3232
  FLO3232EEE
  FLO32U32
  EQU_FALSE
  COMPARE_EQU
  COMPARE_NOTZERO
  COMPARE_XNOTZERO
  COMPARE_YNOTZERO
  COMPARE_LT
  COMPARE_GT
  COMPARE_TESTALL
  COMPARE_C1
  GT_FALSE
  GT_TRUE
  COMPARE_C2
  COMPARE_C3
  L_end_SETFOV32
  _SETFOV32
  L_end_SETFDZ32
  _SETFDZ32
  L_end_FIXSIGN32
  _FIXSIGN32
  L_end_RES032
  _RES032
  L_end_SETFUN32
  _SETFUN32
  L_end_NRM4032
  _NRM4032
  L_end_NRM3232
  _NRM3232
  L_end_SETIOV3224
  _SETIOV3224
  L_end_Add_32x32_FP
  _Add_32x32_FP
  L_end_Sub_32x32_FP
  _Sub_32x32_FP
  L_end_Mul_32x32_FP
  _Mul_32x32_FP
  L_end_Div_32x32_FP
  _Div_32x32_FP
  L_end_Double2Longword
  _Double2Longword
  L_end_Double2Longint
  _Double2Longint
  L_end_Double2Int
  _Double2Int
  L_end_Double2Word
  _Double2Word
  L_end_Double2Byte
  _Double2Byte
  L_end_Byte2Double
  _Byte2Double
  L_end_Int2Double
  _Int2Double
  L_end_Word2Double
  _Word2Double
  L_end_Longint2Double
  _Longint2Double
  L_end_Longword2Double
  _Longword2Double
  L_end_Equals_Double
  _Equals_Double
  L_end_Compare_Double
  _Compare_Double
  _CC2D_Loop1
  _CC2DL_Loop1
  L_loopCA2AWs
  L_loopCCA2AWs
  L_loopCS2Ss
  L_CS2Send
  L_loopCCS2Ss
  L_CCS2Send
  L_loopFZinSWs
  L_longjmp7
  L_end___CC2D
  ___CC2D
  L_end___CC2DW
  ___CC2DW
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end_____DoIFC
  _____DoIFC
  L_end_Swap
  _Swap
  L_end_setjmp
  _setjmp
  L_end_longjmp
  _longjmp
  L_UART1_Init0
  L_UART1_Init1
  L_UART1_Read2
  L_UART1_Write3
  L_UART1_Write4
  L_UART1_Write_Text5
  L_UART1_Write_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  L_UART1_Read_Text13
  L_UART1_Read_Text14
  L_UART1_Read_Text15
  L_UART_Write_Text16
  L_UART_Write_Text17
  L_UART_Read_Text18
  L_UART_Read_Text19
  L_UART_Read_Text20
  L_UART_Read_Text21
  L_UART_Read_Text22
  L_UART_Read_Text23
  L_UART_Read_Text24
  L_UART_Read_Text25
  L_UART_Read_Text26
  L_end_UART1_Init
  _UART1_Init
  L_end_UART1_Data_Ready
  _UART1_Data_Ready
  L_end_UART1_Read
  _UART1_Read
  L_end_UART1_Tx_Idle
  _UART1_Tx_Idle
  L_end_UART1_Write
  _UART1_Write
  L_end_UART1_Write_Text
  _UART1_Write_Text
  L_end_UART1_Read_Text
  _UART1_Read_Text
  L_end_UART_Set_Active
  _UART_Set_Active
  L_end_UART_Write
  _UART_Write
  L_end_UART_Write_Text
  _UART_Write_Text
  L_end_UART_Read
  _UART_Read
  L_end_UART_Data_Ready
  _UART_Data_Ready
  L_end_UART_Read_Text
  _UART_Read_Text
  L_end_UART_Tx_Idle
  _UART_Tx_Idle
  L_play0
  L_play1
  L_recv2
  L_GT3
  L_disp_status4
  L_disp_status5
  L_disp_status6
  L_disp_status7
  L_disp_status8
  L_disp_status9
  L_disp_status10
  L_disp_status11
  L_disp_status12
  L_disp_status13
  L_to_send14
  L_to_send15
  L_to_send16
  L_to_send17
  L_to_send18
  L_to_send19
  L_to_send20
  L_show_ip21
  L_show_ip22
  L_show_ip23
  L_show_ip24
  L_check_status25
  L_check_status26
  L_check_status27
  L_check_status28
  L_check_status29
  L_check_status30
  L_interrupt31
  L_interrupt32
  L_interrupt33
  L_interrupt34
  L_interrupt35
  L_interrupt36
  L_interrupt37
  L_main38
  L_main39
  L_main40
  L_main41
  L_main42
  L_main43
  L_main44
  L_main45
  L_main46
  L_main47
  L_main48
  L_main49
  L_main50
  L_main51
  L_main52
  L_main53
  L_main54
  L_main55
  L_main56
  L_main57
  L_main58
  ___main_label
  L_main59
  L_main60
  L_main61
  L_main62
  L_main63
  L_main64
  L_main65
  L_main66
  L_main67
  L_main68
  L_main69
  L_main70
  L_main71
  L_main72
  ___main_labeL1
  L_main73
  L_main74
  L_main75
  L_main76
  L_main77
  L_main78
  L_main79
  L_main80
  L_main81
  L_main82
  L_main83
  L_main84
  L_main85
  L_main86
  L_main87
  L_main88
  L_main89
  L_main90
  L_main91
  L_main92
  L_main93
  L_main94
  L_main95
  L_main96
  L_main97
  L_main98
  L_main99
  L_main100
  L_main101
  L_main102
  L_main103
  L_main104
  L_main105
  L_main106
  L_main107
  L_main108
  L_main109
  L_main110
  L_main111
  L_main112
  L_main113
  L_main114
  L_main115
  L_main116
  L_main117
  L_main118
  L_main119
  L_main120
  L_main121
  L_main122
  L_main123
  L_main124
  L_main125
  L_main126
  L_main127
  L_main128
  L_main129
  L_main130
  L_main131
  L_main132
  L_main133
  L_main134
  L_main135
  L_main136
  L_main137
  L_main138
  L_main139
  L_main140
  L_main141
  L_main142
  L_main143
  L_main144
  L_main145
  L_main146
  L_main147
  L_main148
  L_main149
  L_main150
  L_main151
  L_main152
  L_main153
  L_main154
  L__interrupt155
  L__interrupt156
  L__main157
  L__main158
  L__main159
  L__main160
  L__main161
  L__main162
  L__main163
  L__main164
  L__main165
  L__main166
  L__main167
  L__main168
  L__main169
  L__main170
  L__main171
  L__main172
  L__main173
  L__main174
  L__main175
  _clr
  _play
  _recv
  _GT
  _conv
  _disp_status
  _to_send
  L__to_send176
  L__to_send177
  L__to_send178
  _show_ip
  L__show_ip179
  _check_status
  L__check_status180
  L__check_status181
  _interrupt
  L__interrupt182
  _main
  L__main183
  L__main184
  L__main185
  L__main186
  L__main187
  L__main188
  L__main189
  L__main190
  L__main191
  L__main192
  L__main193
  L_UART1_Init0
  L_UART1_Init1
  L_UART1_Read2
  L_UART1_Write3
  L_UART1_Write4
  L_UART1_Write_Text5
  L_UART1_Write_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  L_UART1_Read_Text13
  L_UART1_Read_Text14
  L_UART1_Read_Text15
  L_UART_Write_Text16
  L_UART_Write_Text17
  L_UART_Read_Text18
  L_UART_Read_Text19
  L_UART_Read_Text20
  L_UART_Read_Text21
  L_UART_Read_Text22
  L_UART_Read_Text23
  L_UART_Read_Text24
  L_UART_Read_Text25
  L_UART_Read_Text26
  L_end_UART1_Init
  _UART1_Init
  L_end_UART1_Data_Ready
  _UART1_Data_Ready
  L_end_UART1_Read
  _UART1_Read
  L_end_UART1_Tx_Idle
  _UART1_Tx_Idle
  L_end_UART1_Write
  _UART1_Write
  L_end_UART1_Write_Text
  _UART1_Write_Text
  L_end_UART1_Read_Text
  _UART1_Read_Text
  L_end_UART_Set_Active
  _UART_Set_Active
  L_end_UART_Write
  _UART_Write
  L_end_UART_Write_Text
  _UART_Write_Text
  L_end_UART_Read
  _UART_Read
  L_end_UART_Data_Ready
  _UART_Data_Ready
  L_end_UART_Read_Text
  _UART_Read_Text
  L_end_UART_Tx_Idle
  _UART_Tx_Idle
